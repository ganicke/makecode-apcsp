{"version":3,"sources":["webpack:///./node_modules/algoliasearch-helper/src/requestBuilder.js","webpack:///./node_modules/algoliasearch-helper/src/version.js","webpack:///./node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack:///./node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack:///./node_modules/algoliasearch/dist/algoliasearch-lite.umd.js","webpack:///./node_modules/algoliasearch-helper/src/functions/merge.js","webpack:///./node_modules/algoliasearch-helper/src/functions/find.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack:///./node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/context.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createConnector.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/indexUtils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectStateResults.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createWidgetsManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/highlight.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createInstantSearchManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/version.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createStore.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/Index.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHits.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Hits.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Hits.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectConfigure.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/Configure.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectSearchBox.js","webpack:///./src/components/Search/algolia/input.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHighlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlighter.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Snippet.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Snippet.js","webpack:///./src/components/Search/algolia/hitComps.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectPagination.js","webpack:///./src/components/Search/algolia/pagination.js","webpack:///./src/components/Search/algolia/stats.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectStats.js","webpack:///./src/components/Search/algolia/index.js","webpack:///./node_modules/algoliasearch-helper/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/inherits.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/intersection.js","webpack:///./node_modules/algoliasearch-helper/src/functions/compact.js","webpack:///./src/components/Loader/index.js","webpack:///./src/components/Search/Status.js","webpack:///./node_modules/node-libs-browser/node_modules/events/events.js","webpack:///./node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack:///./node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack:///./node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack:///./node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack:///./node_modules/algoliasearch-helper/src/functions/omit.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack:///./src/components/Search/Hits.js","webpack:///./node_modules/algoliasearch-helper/src/functions/orderBy.js"],"names":["merge","requestBuilder","_getQueries","index","state","queries","push","indexName","params","_getHitsSearchParams","getRefinedDisjunctiveFacets","forEach","refinedFacet","_getDisjunctiveFacetSearchParams","getRefinedHierarchicalFacets","hierarchicalFacet","getHierarchicalFacetByName","currentRefinement","getHierarchicalRefinement","separator","_getHierarchicalFacetSeparator","length","split","facets","concat","disjunctiveFacets","_getHitsHierarchicalFacetsAttributes","facetFilters","_getFacetFilters","numericFilters","_getNumericFilters","additionalParams","tagFilters","_getTagFilters","getQueryParams","facet","hierarchicalRootLevel","hitsPerPage","page","attributesToRetrieve","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","facetName","Object","keys","numericRefinements","attribute","operators","operator","values","value","Array","isArray","vs","map","v","tagRefinements","join","facetsRefinements","facetValue","facetsExcludes","disjunctiveFacetsRefinements","facetValues","orFilters","hierarchicalFacetsRefinements","undefined","attributeToRefine","attributesIndex","rootPath","_getHierarchicalRootPath","indexOf","slice","lastIndexOf","attributes","hierarchicalFacets","reduce","allAttributes","hierarchicalRefinement","name","level","newAttributes","rootLevel","attributeIndex","parentLevel","getSearchForFacetQuery","query","maxFacetHits","stateForSearchForFacetValues","isDisjunctiveFacet","clearRefinements","searchForFacetSearchParameters","facetQuery","module","exports","SearchParameters","SearchResults","DerivedHelper","events","inherits","objectHasKeys","version","AlgoliaSearchHelper","client","options","addAlgoliaAgent","this","setClient","opts","make","lastResults","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","Error","_change","setPage","isPageReset","getCurrentPage","EventEmitter","prototype","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","setQueryParameters","self","emit","then","content","results","_originalResponse","e","catch","err","searchForFacetValues","userState","clientHasSFFV","initIndex","isDisjunctive","algoliaQuery","facetHits","f","isRefined","isDisjunctiveFacetRefined","isFacetRefined","setQuery","q","resetPage","clearTags","addDisjunctiveFacetRefinement","addDisjunctiveRefine","apply","arguments","addHierarchicalFacetRefinement","addNumericRefinement","addFacetRefinement","addRefine","addFacetExclusion","addExcludeRefinement","addExclude","addTag","tag","addTagRefinement","removeNumericRefinement","removeDisjunctiveFacetRefinement","removeDisjunctiveRefine","removeHierarchicalFacetRefinement","removeFacetRefinement","removeRefine","removeFacetExclusion","removeExcludeRefinement","removeExclude","removeTag","removeTagRefinement","toggleFacetExclusion","toggleExcludeFacetRefinement","toggleExclude","toggleRefinement","toggleFacetRefinement","toggleRefine","toggleTag","toggleTagRefinement","nextPage","previousPage","setIndex","setQueryParameter","parameter","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","getNumericRefinements","isConjunctiveFacet","isHierarchicalFacet","isHierarchicalFacetRefined","isExcluded","isExcludeRefined","isDisjunctiveRefined","hasTag","isTagRefined","hasTagRefinements","getIndex","getPage","getTags","getRefinements","refinements","getConjunctiveRefinements","r","type","getExcludeRefinements","getDisjunctiveRefinements","getNumericRefinement","getHierarchicalFacetBreadcrumb","states","mainQueries","queriesCount","helper","derivedQueries","derivedHelper","derivedState","getModifiedState","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","error","s","specificResults","splice","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","fn","detachDerivedHelper","pos","hasPendingRequests","find","sortBy","defaults","defaultInstructions","sort","out","sortInstruction","matchingDefault","defaultInstruction","t","defineProperty","enumerable","configurable","writable","getOwnPropertySymbols","n","filter","getOwnPropertyDescriptor","o","getOwnPropertyDescriptors","defineProperties","Symbol","iterator","toString","call","a","u","i","next","done","return","TypeError","from","key","localStorage","window","JSON","parse","getItem","get","miss","Promise","resolve","stringify","all","set","setItem","delete","clear","removeItem","caches","shift","serializable","c","Math","floor","random","l","replace","encodeURIComponent","h","d","data","entries","timeout","headers","queryParameters","cacheable","m","Read","Write","Any","y","status","lastUpdate","Date","now","b","protocol","url","accept","P","j","method","toLowerCase","userAgent","pop","message","transporterStackTrace","A","w","path","connectTimeout","timeouts","connect","responseTimeout","request","response","host","triesLeft","p","onSucess","onRetry","isTimedOut","logger","info","x","hostsCache","onFail","requester","send","getTimeout","statelessHosts","reverse","S","add","segment","T","charAt","substr","C","appId","authMode","apiKey","requestsCache","responsesCache","hosts","read","mappedRequestOptions","transporter","reject","write","methods","N","k","requests","J","propertyIsEnumerable","I","E","W","XMLHttpRequest","open","setRequestHeader","setTimeout","abort","onreadystatechange","readyState","OPENED","clearTimeout","onerror","responseText","onload","debug","console","multipleQueries","multipleSearchForFacetValues","isObjectOrArrayOrFunction","_merge","target","source","hasOwnProperty","sourceVal","targetVal","array","comparator","defaultsPure","omit","lib","addRefinement","refinementList","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","refinementType","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","refinementValueAsString","mainHelper","main","detach","removeAllListeners","parameters","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","_objectSpread","ownKeys","sym","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_possibleConstructorReturn","assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","constructor","_typeof","obj","shallowEqual","objA","objB","keysA","keysB","hasOwn","resolved","removeEmptyKey","object","sourceKeys","_key","_createContext","onInternalStateUpdate","createHrefForState","onSearchForFacetValues","onSearchStateChange","onSearchParameters","store","widgetsManager","mainTargetedIndex","InstantSearchConsumer","Consumer","InstantSearchProvider","Provider","_createContext2","IndexConsumer","IndexProvider","createConnector","connectorDesc","Composed","Connector","displayName","isWidget","getSearchParameters","getMetadata","transitionState","Component","_Component","_this","providedProps","getProvidedProps","_ref","_len","args","contextValue","refine","getState","widgets","_ref2","_len2","_key2","_ref3","_len3","_key3","ais","multiIndexContext","indexContextValue","_this2","unsubscribe","subscribe","isUnmounting","unregisterWidget","registerWidget","nextProps","nextState","shouldComponentUpdate","propsEqual","prevProps","update","cleanUp","_this$props$contextVa","resultsFacetValues","searching","searchingForFacetValues","isSearchStalled","metadata","searchResults","searchParameters","nextWidgetsState","prevWidgetsState","_this$props","refineProps","createURL","searchForFacetValuesProps","searchForItems","createElement","propTypes","defaultProps","createConnectorWithoutContext","getIndexId","context","hasMultipleIndices","targetedIndex","getResults","hits","indexId","refineValue","searchState","nextRefinement","namespace","_objectSpread4","indices","refineMultiIndexWithNamespace","refineMultiIndex","refineSingleIndexWithNamespace","refineSingleIndex","getNamespaceAndAttributeName","id","parts","match","attributeName","getCurrentRefinementValue","defaultValue","_getNamespaceAndAttri","multiIndex","defaultRefinement","cleanUpValue","_getNamespaceAndAttri2","Boolean","_ref4","indexSearchState","cleanUpValueWithMultiIndex","cleanUpValueWithSingleIndex","allSearchResults","createWidgetsManager","onWidgetsUpdate","scheduled","scheduleUpdate","widget","getWidgets","HIGHLIGHT_TAGS","highlightPreTag","highlightPostTag","parseHighlightedAttribute","preTag","postTag","_ref$highlightedValue","highlightedValue","splitByPreTag","firstValue","elements","isHighlighted","splitByPostTag","parseAlgoliaHit","_ref2$preTag","_ref2$postTag","highlightProperty","hit","highlightObject","current","item","addAlgoliaAgents","searchClient","isTargetedIndexEqualIndex","isIndexWidget","isIndexWidgetEqualIndex","sortIndexWidgetsFirst","firstWidget","secondWidget","isFirstWidgetIndex","isSecondWidgetIndex","serializeQueryParameters","format","encode","createInstantSearchManager","_ref$initialState","initialState","resultsState","stalledSearchDelay","on","stalledSearchTimer","_store$getState","partialState","handleSearchSuccess","handleSearchError","skip","initialSearchParameters","_cacheHydrated","_useCache","baseMethod","methodArgs","requestsWithSerializedParams","acc","result","rawResults","cache","hydrateSearchClientWithMultiIndexRequest","hydrateSearchClientWithSingleIndexRequest","hydrateSearchClient","listeners","listener","createStore","_internalIndexId","hydrateResultsState","sharedParameters","res","mainParameters","targetedIndexEqualMainIndex","subIndexEqualMainIndex","derivedIndices","targetedIndexNotEqualMainIndex","subIndexNotEqualMainIndex","derivedParameters","_getSearchParameters","isDerivedHelpersEmpty","getFacetByName","currentState","nextIsSearchStalled","getWidgetsIds","meta","_ref5","_ref5$maxFacetHits","maxFacetHitsWithinRange","max","min","_objectSpread7","onExternalStateUpdate","nextSearchState","updateClient","updateIndex","newIndex","skipSearch","isControlled","InstantSearch","instantSearchManager","onWidgetsInternalStateUpdate","prevState","nextIsControlled","previousSearchState","prevIsControlled","refresh","getKnownKeys","_searchState","count","children","string","isRequired","shape","func","bool","oneOfType","node","number","getIndexContext","Index","indexContext","inferredIndexId","queryID","__queryID","addQueryID","__position","block","prefix","suitElements","element","baseClassName","style","borderBottom","paddingBottom","marginBottom","wordBreak","objectID","connectHits","_ref$className","className","_ref$hitComponent","hitComponent","HitComponent","items","prevSearchState","propKeys","nonPresentKeys","_props","prop","subState","configureState","getCurrentRefinement","_refine","_cleanUp","label","connectSearchBox","rest","showClean","_ref$preTag","_ref$postTag","highlight","cx","highlightedTagName","nonHighlightedTagName","TagName","tagName","parsedHighlightedValue","isLast","connectHighlight","PageHit","_highlightResult","title","emoji","emojify","_snippetResult","excerpt","slug","details","parseInt","connectPagination","nbPages","canRefine","currentPage","connectStats","nbHits","processingTimeMS","Search","Root","Results","connectStateResults","noHits","Algolia","focus","algoliasearch","config","features","algoliaAppId","algoliaSearchKey","ref","createRef","inputRef","render","showResults","root","onFocus","flex","showStats","pagination","enabled","totalPages","showPrevious","showNext","Configure","snippetLength","snippetEllipsisText","React","algoliasearchHelper","ctor","superCtor","intersection","valToNumber","RefinementList","isEqualNumericRefinement","every","el","newParameters","_parseNumbers","paramName","isKeyKnown","PARAMETERS","isValueDefined","numbers","parsedValue","parseFloat","isNaN","insideBoundingBox","geoRect","parsedValues","vPrime","toggleHierarchicalFacetRefinement","validate","patch","_clearNumericRefinements","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","isNumericRefined","paramValue","op","val","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","disjunctiveNumericRefinedFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","queryParams","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","refinement","part","trim","arr1","arr2","spinner","css","queryToken","StatusWrapper","SearchStatus","text","marginLeftRight","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","getOwnPropertyNames","NumberIsNaN","Number","init","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","existing","warning","newListener","unshift","warned","String","emitter","warn","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","arg","RangeError","setMaxListeners","getMaxListeners","doError","er","handler","len","addListener","prependListener","once","prependOnceListener","list","position","originalListener","spliceOne","off","rawListeners","eventNames","sources","reduceRight","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","subtree","picked","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","generateHierarchicalTree","compact","findIndex","formatSort","getIndices","idx","assignFacetStats","dest","facetStats","stats","mainSubResponse","_rawResults","parsedQuery","sum","aroundLatLng","automaticRadius","serverUsed","timeoutCounts","timeoutHits","exhaustiveFacetsCount","exhaustiveNbHits","userData","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","dataFromMainRequest","defaultData","excludes","_state","recSort","sortFn","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","resultsFacets","predicate","DEFAULT_SORT","getFacetValues","extractNormalizedFacetValues","order","hierarchicalFacetValues","vanillaSortFn","getFacetStats","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","HitsWrapper","theme","border","paddingLeftRight","hover","font","base","mark","background","HitTitle","HitDetails","Hit","to","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee"],"mappings":"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","file":"algolia-f624ed09a9ed9c648cbc.js","sourcesContent":["'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = []; // One query for the hits\n\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    }); // One for each disjunctive facets\n\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    }); // maybe more to get the root level of hierarchical facets when activated\n\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function _getHitsSearchParams(state) {\n    var facets = state.facets.concat(state.disjunctiveFacets).concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n\n    var numericFilters = requestBuilder._getNumericFilters(state);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      facets: facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function _getDisjunctiveFacetSearchParams(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, hierarchicalRootLevel);\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function _getNumericFilters(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function _getTagFilters(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function _getFacetFilters(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function (facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function (facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function (facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n\n      var orFilters = [];\n      facetValues.forEach(function (facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n      facetFilters.push(orFilters);\n    });\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function (facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeToRefine;\n      var attributesIndex; // we ask for parent facet values only when the `facet` is the current hierarchical facet\n\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || !rootPath && hierarchicalRootLevel === true || rootPath && rootPath.split(separator).length === facetValue.split(separator).length) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n    return facetFilters;\n  },\n  _getHitsHierarchicalFacetsAttributes: function _getHitsHierarchicalFacetsAttributes(state) {\n    var out = [];\n    return state.hierarchicalFacets.reduce( // ask for as much levels as there's hierarchical refinements\n    function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n      var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0]; // if no refinement, ask for root level\n\n      if (!hierarchicalRefinement) {\n        allAttributes.push(hierarchicalFacet.attributes[0]);\n        return allAttributes;\n      }\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var level = hierarchicalRefinement.split(separator).length;\n      var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n      return allAttributes.concat(newAttributes);\n    }, out);\n  },\n  _getDisjunctiveHierarchicalFacetAttribute: function _getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || ''; // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n  getSearchForFacetQuery: function getSearchForFacetQuery(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ? state.clearRefinements(facetName) : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n\n    return merge({}, requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);\n  }\n};\nmodule.exports = requestBuilder;","'use strict';\n\nmodule.exports = '3.1.1';","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\n\nvar SearchResults = require('./SearchResults');\n\nvar DerivedHelper = require('./DerivedHelper');\n\nvar requestBuilder = require('./requestBuilder');\n\nvar events = require('events');\n\nvar inherits = require('./functions/inherits');\n\nvar objectHasKeys = require('./functions/objectHasKeys');\n\nvar version = require('./version');\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\n\n\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, events.EventEmitter);\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({\n    onlyWithDerivedHelpers: false\n  });\n\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({\n    onlyWithDerivedHelpers: true\n  });\n\n  return this;\n};\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\n\n\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\n\n\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n\n  var self = this;\n  this._currentNbQueries++;\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client.search(queries).then(function (content) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(null, new SearchResults(tempState, content.results), tempState);\n    }).catch(function (err) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(err, null, tempState);\n    });\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function (content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\n\n\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n\n  if (!clientHasSFFV && typeof this.client.initIndex !== 'function') {\n    throw new Error('search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues');\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n  this._currentNbQueries++;\n  var self = this;\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n  var searchForFacetValuesPromise = clientHasSFFV ? this.client.searchForFacetValues([{\n    indexName: state.index,\n    params: algoliaQuery\n  }]) : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    content = Array.isArray(content) ? content[0] : content;\n    content.facetHits.forEach(function (f) {\n      f.isRefined = isDisjunctive ? state.isDisjunctiveFacetRefined(facet, f.value) : state.isFacetRefined(facet, f.value);\n    });\n    return content;\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\n\n\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\n\n\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\n\n\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\n\n\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n/**\n * @private\n */\n\n\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\n\n\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function (newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\n\n\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  } // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n\n\n  return false;\n};\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\n\n\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\n\n\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\n\n\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\n\n\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\n\n\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\n\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\n\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\n\n\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n    disjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n  return refinements;\n};\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\n\n\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\n\n\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n}; // /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\n\n\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n    return derivedStateQueries;\n  });\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries).then(this._dispatchAlgoliaResponse.bind(this, states, queryId)).catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\n\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n  var results = content.results.slice();\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  this.emit('error', {\n    error: error\n  });\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function (query, facetFilters, numericFilters, tagFilters) {\n  return query || facetFilters.length !== 0 || numericFilters.length !== 0 || tagFilters.length !== 0;\n};\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return this.state.disjunctiveRefinements[facet] && this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.client = newClient;\n  return this;\n};\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\n\n\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.derive = function (fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\n\n\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\n\n\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\n\nmodule.exports = AlgoliaSearchHelper;","'use strict';\n\nvar find = require('./find');\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\n\n\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n  return sortBy.reduce(function preparePredicate(out, sort) {\n    var sortInstruction = sort.split(':');\n    var matchingDefault = find(defaultInstructions, function (defaultInstruction) {\n      return defaultInstruction[0] === sortInstruction[0];\n    });\n\n    if (sortInstruction.length > 1 || !matchingDefault) {\n      out[0].push(sortInstruction[0]);\n      out[1].push(sortInstruction[1]);\n      return out;\n    }\n\n    out[0].push(matchingDefault[0]);\n    out[1].push(matchingDefault[1]);\n    return out;\n  }, [[], []]);\n};","/*! algoliasearch-lite.umd.js | 4.4.0 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self).algoliasearch = t();\n}(this, function () {\n  \"use strict\";\n\n  function e(e, t, r) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = r, e;\n  }\n\n  function t(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function r(r) {\n    for (var n = 1; n < arguments.length; n++) {\n      var o = null != arguments[n] ? arguments[n] : {};\n      n % 2 ? t(Object(o), !0).forEach(function (t) {\n        e(r, t, o[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(o)) : t(Object(o)).forEach(function (e) {\n        Object.defineProperty(r, e, Object.getOwnPropertyDescriptor(o, e));\n      });\n    }\n\n    return r;\n  }\n\n  function n(e, t) {\n    if (null == e) return {};\n\n    var r,\n        n,\n        o = function (e, t) {\n      if (null == e) return {};\n      var r,\n          n,\n          o = {},\n          a = Object.keys(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n      }\n\n      return o;\n    }(e, t);\n\n    if (Object.getOwnPropertySymbols) {\n      var a = Object.getOwnPropertySymbols(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n      }\n    }\n\n    return o;\n  }\n\n  function o(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          n = !0,\n          o = !1,\n          a = void 0;\n\n      try {\n        for (var u, i = e[Symbol.iterator](); !(n = (u = i.next()).done) && (r.push(u.value), !t || r.length !== t); n = !0) {\n          ;\n        }\n      } catch (e) {\n        o = !0, a = e;\n      } finally {\n        try {\n          n || null == i.return || i.return();\n        } finally {\n          if (o) throw a;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  function a(e) {\n    return function (e) {\n      if (Array.isArray(e)) {\n        for (var t = 0, r = new Array(e.length); t < e.length; t++) {\n          r[t] = e[t];\n        }\n\n        return r;\n      }\n    }(e) || function (e) {\n      if (Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e)) return Array.from(e);\n    }(e) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }();\n  }\n\n  function u(e) {\n    var t,\n        r = \"algoliasearch-client-js-\".concat(e.key),\n        n = function n() {\n      return void 0 === t && (t = e.localStorage || window.localStorage), t;\n    },\n        a = function a() {\n      return JSON.parse(n().getItem(r) || \"{}\");\n    };\n\n    return {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return Promise.resolve().then(function () {\n          var r = JSON.stringify(e),\n              n = a()[r];\n          return Promise.all([n || t(), void 0 !== n]);\n        }).then(function (e) {\n          var t = o(e, 2),\n              n = t[0],\n              a = t[1];\n          return Promise.all([n, a || r.miss(n)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve().then(function () {\n          var o = a();\n          return o[JSON.stringify(e)] = t, n().setItem(r, JSON.stringify(o)), t;\n        });\n      },\n      delete: function _delete(e) {\n        return Promise.resolve().then(function () {\n          var t = a();\n          delete t[JSON.stringify(e)], n().setItem(r, JSON.stringify(t));\n        });\n      },\n      clear: function clear() {\n        return Promise.resolve().then(function () {\n          n().removeItem(r);\n        });\n      }\n    };\n  }\n\n  function i(e) {\n    var t = a(e.caches),\n        r = t.shift();\n    return void 0 === r ? {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            n = t();\n        return n.then(function (e) {\n          return Promise.all([e, r.miss(e)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve(t);\n      },\n      delete: function _delete(e) {\n        return Promise.resolve();\n      },\n      clear: function clear() {\n        return Promise.resolve();\n      }\n    } : {\n      get: function get(e, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return r.get(e, n, o).catch(function () {\n          return i({\n            caches: t\n          }).get(e, n, o);\n        });\n      },\n      set: function set(e, n) {\n        return r.set(e, n).catch(function () {\n          return i({\n            caches: t\n          }).set(e, n);\n        });\n      },\n      delete: function _delete(e) {\n        return r.delete(e).catch(function () {\n          return i({\n            caches: t\n          }).delete(e);\n        });\n      },\n      clear: function clear() {\n        return r.clear().catch(function () {\n          return i({\n            caches: t\n          }).clear();\n        });\n      }\n    };\n  }\n\n  function s() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {\n      serializable: !0\n    },\n        t = {};\n    return {\n      get: function get(r, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            a = JSON.stringify(r);\n        if (a in t) return Promise.resolve(e.serializable ? JSON.parse(t[a]) : t[a]);\n\n        var u = n(),\n            i = o && o.miss || function () {\n          return Promise.resolve();\n        };\n\n        return u.then(function (e) {\n          return i(e);\n        }).then(function () {\n          return u;\n        });\n      },\n      set: function set(r, n) {\n        return t[JSON.stringify(r)] = e.serializable ? JSON.stringify(n) : n, Promise.resolve(n);\n      },\n      delete: function _delete(e) {\n        return delete t[JSON.stringify(e)], Promise.resolve();\n      },\n      clear: function clear() {\n        return t = {}, Promise.resolve();\n      }\n    };\n  }\n\n  function c(e) {\n    for (var t = e.length - 1; t > 0; t--) {\n      var r = Math.floor(Math.random() * (t + 1)),\n          n = e[t];\n      e[t] = e[r], e[r] = n;\n    }\n\n    return e;\n  }\n\n  function l(e, t) {\n    return Object.keys(void 0 !== t ? t : {}).forEach(function (r) {\n      e[r] = t[r](e);\n    }), e;\n  }\n\n  function f(e) {\n    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {\n      r[n - 1] = arguments[n];\n    }\n\n    var o = 0;\n    return e.replace(/%s/g, function () {\n      return encodeURIComponent(r[o++]);\n    });\n  }\n\n  var h = {\n    WithinQueryParameters: 0,\n    WithinHeaders: 1\n  };\n\n  function d(e, t) {\n    var r = e || {},\n        n = r.data || {};\n    return Object.keys(r).forEach(function (e) {\n      -1 === [\"timeout\", \"headers\", \"queryParameters\", \"data\", \"cacheable\"].indexOf(e) && (n[e] = r[e]);\n    }), {\n      data: Object.entries(n).length > 0 ? n : void 0,\n      timeout: r.timeout || t,\n      headers: r.headers || {},\n      queryParameters: r.queryParameters || {},\n      cacheable: r.cacheable\n    };\n  }\n\n  var m = {\n    Read: 1,\n    Write: 2,\n    Any: 3\n  },\n      p = 1,\n      v = 2,\n      g = 3;\n\n  function y(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p;\n    return r({}, e, {\n      status: t,\n      lastUpdate: Date.now()\n    });\n  }\n\n  function b(e) {\n    return {\n      protocol: e.protocol || \"https\",\n      url: e.url,\n      accept: e.accept || m.Any\n    };\n  }\n\n  var O = \"GET\",\n      P = \"POST\";\n\n  function q(e, t) {\n    return Promise.all(t.map(function (t) {\n      return e.get(t, function () {\n        return Promise.resolve(y(t));\n      });\n    })).then(function (e) {\n      var r = e.filter(function (e) {\n        return function (e) {\n          return e.status === p || Date.now() - e.lastUpdate > 12e4;\n        }(e);\n      }),\n          n = e.filter(function (e) {\n        return function (e) {\n          return e.status === g && Date.now() - e.lastUpdate <= 12e4;\n        }(e);\n      }),\n          o = [].concat(a(r), a(n));\n      return {\n        getTimeout: function getTimeout(e, t) {\n          return (0 === n.length && 0 === e ? 1 : n.length + 3 + e) * t;\n        },\n        statelessHosts: o.length > 0 ? o.map(function (e) {\n          return b(e);\n        }) : t\n      };\n    });\n  }\n\n  function j(e, t, n, o) {\n    var u = [],\n        i = function (e, t) {\n      if (e.method === O || void 0 === e.data && void 0 === t.data) return;\n      var n = Array.isArray(e.data) ? e.data : r({}, e.data, {}, t.data);\n      return JSON.stringify(n);\n    }(n, o),\n        s = function (e, t) {\n      var n = r({}, e.headers, {}, t.headers),\n          o = {};\n      return Object.keys(n).forEach(function (e) {\n        var t = n[e];\n        o[e.toLowerCase()] = t;\n      }), o;\n    }(e, o),\n        c = n.method,\n        l = n.method !== O ? {} : r({}, n.data, {}, o.data),\n        f = r({\n      \"x-algolia-agent\": e.userAgent.value\n    }, e.queryParameters, {}, l, {}, o.queryParameters),\n        h = 0,\n        d = function t(r, a) {\n      var l = r.pop();\n      if (void 0 === l) throw {\n        name: \"RetryError\",\n        message: \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n        transporterStackTrace: A(u)\n      };\n\n      var d = {\n        data: i,\n        headers: s,\n        method: c,\n        url: w(l, n.path, f),\n        connectTimeout: a(h, e.timeouts.connect),\n        responseTimeout: a(h, o.timeout)\n      },\n          m = function m(e) {\n        var t = {\n          request: d,\n          response: e,\n          host: l,\n          triesLeft: r.length\n        };\n        return u.push(t), t;\n      },\n          p = {\n        onSucess: function onSucess(e) {\n          return function (e) {\n            try {\n              return JSON.parse(e.content);\n            } catch (t) {\n              throw function (e, t) {\n                return {\n                  name: \"DeserializationError\",\n                  message: e,\n                  response: t\n                };\n              }(t.message, e);\n            }\n          }(e);\n        },\n        onRetry: function onRetry(n) {\n          var o = m(n);\n          return n.isTimedOut && h++, Promise.all([e.logger.info(\"Retryable failure\", x(o)), e.hostsCache.set(l, y(l, n.isTimedOut ? g : v))]).then(function () {\n            return t(r, a);\n          });\n        },\n        onFail: function onFail(e) {\n          throw m(e), function (e, t) {\n            var r = e.content,\n                n = e.status,\n                o = r;\n\n            try {\n              o = JSON.parse(r).message;\n            } catch (e) {}\n\n            return function (e, t, r) {\n              return {\n                name: \"ApiError\",\n                message: e,\n                status: t,\n                transporterStackTrace: r\n              };\n            }(o, n, t);\n          }(e, A(u));\n        }\n      };\n\n      return e.requester.send(d).then(function (e) {\n        return function (e, t) {\n          return function (e) {\n            var t = e.status;\n            return e.isTimedOut || function (e) {\n              var t = e.isTimedOut,\n                  r = e.status;\n              return !t && 0 == ~~r;\n            }(e) || 2 != ~~(t / 100) && 4 != ~~(t / 100);\n          }(e) ? t.onRetry(e) : 2 == ~~(e.status / 100) ? t.onSucess(e) : t.onFail(e);\n        }(e, p);\n      });\n    };\n\n    return q(e.hostsCache, t).then(function (e) {\n      return d(a(e.statelessHosts).reverse(), e.getTimeout);\n    });\n  }\n\n  function S(e) {\n    var t = {\n      value: \"Algolia for JavaScript (\".concat(e, \")\"),\n      add: function add(e) {\n        var r = \"; \".concat(e.segment).concat(void 0 !== e.version ? \" (\".concat(e.version, \")\") : \"\");\n        return -1 === t.value.indexOf(r) && (t.value = \"\".concat(t.value).concat(r)), t;\n      }\n    };\n    return t;\n  }\n\n  function w(e, t, r) {\n    var n = T(r),\n        o = \"\".concat(e.protocol, \"://\").concat(e.url, \"/\").concat(\"/\" === t.charAt(0) ? t.substr(1) : t);\n    return n.length && (o += \"?\".concat(n)), o;\n  }\n\n  function T(e) {\n    return Object.keys(e).map(function (t) {\n      return f(\"%s=%s\", t, (r = e[t], \"[object Object]\" === Object.prototype.toString.call(r) || \"[object Array]\" === Object.prototype.toString.call(r) ? JSON.stringify(e[t]) : e[t]));\n      var r;\n    }).join(\"&\");\n  }\n\n  function A(e) {\n    return e.map(function (e) {\n      return x(e);\n    });\n  }\n\n  function x(e) {\n    var t = e.request.headers[\"x-algolia-api-key\"] ? {\n      \"x-algolia-api-key\": \"*****\"\n    } : {};\n    return r({}, e, {\n      request: r({}, e.request, {\n        headers: r({}, e.request.headers, {}, t)\n      })\n    });\n  }\n\n  var C = function C(e) {\n    var t = e.appId,\n        n = function (e, t, r) {\n      var n = {\n        \"x-algolia-api-key\": r,\n        \"x-algolia-application-id\": t\n      };\n      return {\n        headers: function headers() {\n          return e === h.WithinHeaders ? n : {};\n        },\n        queryParameters: function queryParameters() {\n          return e === h.WithinQueryParameters ? n : {};\n        }\n      };\n    }(void 0 !== e.authMode ? e.authMode : h.WithinHeaders, t, e.apiKey),\n        a = function (e) {\n      var t = e.hostsCache,\n          r = e.logger,\n          n = e.requester,\n          a = e.requestsCache,\n          u = e.responsesCache,\n          i = e.timeouts,\n          s = e.userAgent,\n          c = e.hosts,\n          l = e.queryParameters,\n          f = {\n        hostsCache: t,\n        logger: r,\n        requester: n,\n        requestsCache: a,\n        responsesCache: u,\n        timeouts: i,\n        userAgent: s,\n        headers: e.headers,\n        queryParameters: l,\n        hosts: c.map(function (e) {\n          return b(e);\n        }),\n        read: function read(e, t) {\n          var r = d(t, f.timeouts.read),\n              n = function n() {\n            return j(f, f.hosts.filter(function (e) {\n              return 0 != (e.accept & m.Read);\n            }), e, r);\n          };\n\n          if (!0 !== (void 0 !== r.cacheable ? r.cacheable : e.cacheable)) return n();\n          var a = {\n            request: e,\n            mappedRequestOptions: r,\n            transporter: {\n              queryParameters: f.queryParameters,\n              headers: f.headers\n            }\n          };\n          return f.responsesCache.get(a, function () {\n            return f.requestsCache.get(a, function () {\n              return f.requestsCache.set(a, n()).then(function (e) {\n                return Promise.all([f.requestsCache.delete(a), e]);\n              }, function (e) {\n                return Promise.all([f.requestsCache.delete(a), Promise.reject(e)]);\n              }).then(function (e) {\n                var t = o(e, 2);\n                t[0];\n                return t[1];\n              });\n            });\n          }, {\n            miss: function miss(e) {\n              return f.responsesCache.set(a, e);\n            }\n          });\n        },\n        write: function write(e, t) {\n          return j(f, f.hosts.filter(function (e) {\n            return 0 != (e.accept & m.Write);\n          }), e, d(t, f.timeouts.write));\n        }\n      };\n      return f;\n    }(r({\n      hosts: [{\n        url: \"\".concat(t, \"-dsn.algolia.net\"),\n        accept: m.Read\n      }, {\n        url: \"\".concat(t, \".algolia.net\"),\n        accept: m.Write\n      }].concat(c([{\n        url: \"\".concat(t, \"-1.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-2.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-3.algolianet.com\")\n      }]))\n    }, e, {\n      headers: r({}, n.headers(), {}, {\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }, {}, e.headers),\n      queryParameters: r({}, n.queryParameters(), {}, e.queryParameters)\n    }));\n\n    return l({\n      transporter: a,\n      appId: t,\n      addAlgoliaAgent: function addAlgoliaAgent(e, t) {\n        a.userAgent.add({\n          segment: e,\n          version: t\n        });\n      },\n      clearCache: function clearCache() {\n        return Promise.all([a.requestsCache.clear(), a.responsesCache.clear()]).then(function () {});\n      }\n    }, e.methods);\n  },\n      N = function N(e) {\n    return function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = {\n        transporter: e.transporter,\n        appId: e.appId,\n        indexName: t\n      };\n      return l(n, r.methods);\n    };\n  },\n      k = function k(e) {\n    return function (t, n) {\n      var o = t.map(function (e) {\n        return r({}, e, {\n          params: T(e.params || {})\n        });\n      });\n      return e.transporter.read({\n        method: P,\n        path: \"1/indexes/*/queries\",\n        data: {\n          requests: o\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      J = function J(e) {\n    return function (t, o) {\n      return Promise.all(t.map(function (t) {\n        var a = t.params,\n            u = a.facetName,\n            i = a.facetQuery,\n            s = n(a, [\"facetName\", \"facetQuery\"]);\n        return N(e)(t.indexName, {\n          methods: {\n            searchForFacetValues: I\n          }\n        }).searchForFacetValues(u, i, r({}, o, {}, s));\n      }));\n    };\n  },\n      E = function E(e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/query\", e.indexName),\n        data: {\n          query: t\n        },\n        cacheable: !0\n      }, r);\n    };\n  },\n      I = function I(e) {\n    return function (t, r, n) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/facets/%s/query\", e.indexName, t),\n        data: {\n          facetQuery: r\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      F = 1,\n      R = 2,\n      D = 3;\n\n  function W(e, t, n) {\n    var o,\n        a = {\n      appId: e,\n      apiKey: t,\n      timeouts: {\n        connect: 1,\n        read: 2,\n        write: 30\n      },\n      requester: {\n        send: function send(e) {\n          return new Promise(function (t) {\n            var r = new XMLHttpRequest();\n            r.open(e.method, e.url, !0), Object.keys(e.headers).forEach(function (t) {\n              return r.setRequestHeader(t, e.headers[t]);\n            });\n\n            var n,\n                o = function o(e, n) {\n              return setTimeout(function () {\n                r.abort(), t({\n                  status: 0,\n                  content: n,\n                  isTimedOut: !0\n                });\n              }, 1e3 * e);\n            },\n                a = o(e.connectTimeout, \"Connection timeout\");\n\n            r.onreadystatechange = function () {\n              r.readyState > r.OPENED && void 0 === n && (clearTimeout(a), n = o(e.responseTimeout, \"Socket timeout\"));\n            }, r.onerror = function () {\n              0 === r.status && (clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText || \"Network request failed\",\n                status: r.status,\n                isTimedOut: !1\n              }));\n            }, r.onload = function () {\n              clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText,\n                status: r.status,\n                isTimedOut: !1\n              });\n            }, r.send(e.data);\n          });\n        }\n      },\n      logger: (o = D, {\n        debug: function debug(e, t) {\n          return F >= o && console.debug(e, t), Promise.resolve();\n        },\n        info: function info(e, t) {\n          return R >= o && console.info(e, t), Promise.resolve();\n        },\n        error: function error(e, t) {\n          return console.error(e, t), Promise.resolve();\n        }\n      }),\n      responsesCache: s(),\n      requestsCache: s({\n        serializable: !1\n      }),\n      hostsCache: i({\n        caches: [u({\n          key: \"\".concat(\"4.4.0\", \"-\").concat(e)\n        }), s()]\n      }),\n      userAgent: S(\"4.4.0\").add({\n        segment: \"Browser\",\n        version: \"lite\"\n      }),\n      authMode: h.WithinQueryParameters\n    };\n    return C(r({}, a, {}, n, {\n      methods: {\n        search: k,\n        searchForFacetValues: J,\n        multipleQueries: k,\n        multipleSearchForFacetValues: J,\n        initIndex: function initIndex(e) {\n          return function (t) {\n            return N(e)(t, {\n              methods: {\n                search: E,\n                searchForFacetValues: I\n              }\n            });\n          };\n        }\n      }\n    }));\n  }\n\n  return W.version = \"4.4.0\", W;\n});","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return typeof value === 'function' || Array.isArray(value) || Object.prototype.toString.call(value) === '[object Object]';\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n\n  return target;\n}\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = merge;","'use strict'; // @MAJOR can be replaced by native Array#find when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};","'use strict';\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n    var facetRefinement = !refinementList[attribute] ? [valueAsString] : refinementList[attribute].concat(valueAsString);\n    var mod = {};\n    mod[attribute] = facetRefinement;\n    return defaultsPure({}, mod, refinementList);\n  },\n\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var newRefinementList = Object.keys(refinementList).reduce(function (memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n\n        memo[key] = facetList;\n        return memo;\n      }, {});\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] && refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\nmodule.exports = lib;","'use strict';\n\nvar events = require('events');\n\nvar inherits = require('../functions/inherits');\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\n\n\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, events.EventEmitter);\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\n\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import defineProperty from \"./defineProperty.js\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\"; // From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js\n\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nexport var getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'UnknownComponent';\n};\nvar resolved = Promise.resolve();\nexport var defer = function defer(f) {\n  resolved.then(f);\n};\n\nvar isPlainObject = function isPlainObject(value) {\n  return _typeof(value) === 'object' && value !== null && !Array.isArray(value);\n};\n\nexport var removeEmptyKey = function removeEmptyKey(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (!isPlainObject(value)) {\n      return;\n    }\n\n    if (!objectHasKeys(value)) {\n      delete obj[key];\n    } else {\n      removeEmptyKey(value);\n    }\n  });\n  return obj;\n};\nexport var removeEmptyArraysFromObject = function removeEmptyArraysFromObject(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (Array.isArray(value) && value.length === 0) {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\nexport function addAbsolutePositions(hits, hitsPerPage, page) {\n  return hits.map(function (hit, index) {\n    return _objectSpread({}, hit, {\n      __position: hitsPerPage * page + index + 1\n    });\n  });\n}\nexport function addQueryID(hits, queryID) {\n  if (!queryID) {\n    return hits;\n  }\n\n  return hits.map(function (hit) {\n    return _objectSpread({}, hit, {\n      __queryID: queryID\n    });\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}\nexport function objectHasKeys(object) {\n  return object && Object.keys(object).length > 0;\n} // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nexport function omit(source, excluded) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n\n  var target = {};\n  var sourceKeys = Object.keys(source);\n\n  for (var i = 0; i < sourceKeys.length; i++) {\n    var _key = sourceKeys[i];\n\n    if (excluded.indexOf(_key) >= 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    target[_key] = source[_key];\n  }\n\n  return target;\n}\n/**\n * Retrieve the value at a path of the object:\n *\n * @example\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   'test.this.function[0].now.everyone'\n * ); // true\n *\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   ['test', 'this', 'function', 0, 'now', 'everyone']\n * ); // true\n *\n * @param object Source object to query\n * @param path either an array of properties, or a string form of the properties, separated by .\n */\n\nexport var getPropertyByPath = function getPropertyByPath(object, path) {\n  return (Array.isArray(path) ? path : path.replace(/\\[(\\d+)]/g, '.$1').split('.')).reduce(function (current, key) {\n    return current ? current[key] : undefined;\n  }, object);\n};\nexport function getObjectType(object) {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}","import { createContext } from 'react';\n\nvar _createContext = createContext({\n  onInternalStateUpdate: function onInternalStateUpdate() {\n    return undefined;\n  },\n  createHrefForState: function createHrefForState() {\n    return '#';\n  },\n  onSearchForFacetValues: function onSearchForFacetValues() {\n    return undefined;\n  },\n  onSearchStateChange: function onSearchStateChange() {\n    return undefined;\n  },\n  onSearchParameters: function onSearchParameters() {\n    return undefined;\n  },\n  store: {},\n  widgetsManager: {},\n  mainTargetedIndex: ''\n}),\n    InstantSearchConsumer = _createContext.Consumer,\n    InstantSearchProvider = _createContext.Provider;\n\nexport { InstantSearchConsumer, InstantSearchProvider };\n\nvar _createContext2 = createContext(undefined),\n    IndexConsumer = _createContext2.Consumer,\n    IndexProvider = _createContext2.Provider;\n\nexport { IndexConsumer, IndexProvider };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { shallowEqual, getDisplayName, removeEmptyKey } from './utils';\nimport { InstantSearchConsumer, IndexConsumer } from './context';\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\n\nexport function createConnectorWithoutContext(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n\n  var isWidget = typeof connectorDesc.getSearchParameters === 'function' || typeof connectorDesc.getMetadata === 'function' || typeof connectorDesc.transitionState === 'function';\n  return function (Composed) {\n    var Connector = /*#__PURE__*/function (_Component) {\n      _inherits(Connector, _Component);\n\n      function Connector(props) {\n        var _this;\n\n        _classCallCheck(this, Connector);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this, props));\n\n        _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n        _defineProperty(_assertThisInitialized(_this), \"state\", {\n          providedProps: _this.getProvidedProps(_this.props)\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"refine\", function () {\n          var _ref;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this.props.contextValue.onInternalStateUpdate( // refine will always be defined here because the prop is only given conditionally\n          (_ref = connectorDesc.refine).call.apply(_ref, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"createURL\", function () {\n          var _ref2;\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return _this.props.contextValue.createHrefForState( // refine will always be defined here because the prop is only given conditionally\n          (_ref2 = connectorDesc.refine).call.apply(_ref2, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"searchForFacetValues\", function () {\n          var _ref3;\n\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          _this.props.contextValue.onSearchForFacetValues( // searchForFacetValues will always be defined here because the prop is only given conditionally\n          (_ref3 = connectorDesc.searchForFacetValues).call.apply(_ref3, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        if (connectorDesc.getSearchParameters) {\n          _this.props.contextValue.onSearchParameters(connectorDesc.getSearchParameters.bind(_assertThisInitialized(_this)), {\n            ais: _this.props.contextValue,\n            multiIndexContext: _this.props.indexContextValue\n          }, _this.props);\n        }\n\n        return _this;\n      }\n\n      _createClass(Connector, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this.unsubscribe = this.props.contextValue.store.subscribe(function () {\n            if (!_this2.isUnmounting) {\n              _this2.setState({\n                providedProps: _this2.getProvidedProps(_this2.props)\n              });\n            }\n          });\n\n          if (isWidget) {\n            this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (typeof connectorDesc.shouldComponentUpdate === 'function') {\n            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);\n          }\n\n          var propsEqual = shallowEqual(this.props, nextProps);\n\n          if (this.state.providedProps === null || nextState.providedProps === null) {\n            if (this.state.providedProps === nextState.providedProps) {\n              return !propsEqual;\n            }\n\n            return true;\n          }\n\n          return !propsEqual || !shallowEqual(this.state.providedProps, nextState.providedProps);\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!isEqual(prevProps, this.props)) {\n            this.setState({\n              providedProps: this.getProvidedProps(this.props)\n            });\n\n            if (isWidget) {\n              this.props.contextValue.widgetsManager.update();\n\n              if (typeof connectorDesc.transitionState === 'function') {\n                this.props.contextValue.onSearchStateChange(connectorDesc.transitionState.call(this, this.props, this.props.contextValue.store.getState().widgets, this.props.contextValue.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.isUnmounting = true;\n\n          if (this.unsubscribe) {\n            this.unsubscribe();\n          }\n\n          if (this.unregisterWidget) {\n            this.unregisterWidget();\n\n            if (typeof connectorDesc.cleanUp === 'function') {\n              var nextState = connectorDesc.cleanUp.call(this, this.props, this.props.contextValue.store.getState().widgets);\n              this.props.contextValue.store.setState(_objectSpread({}, this.props.contextValue.store.getState(), {\n                widgets: nextState\n              }));\n              this.props.contextValue.onSearchStateChange(removeEmptyKey(nextState));\n            }\n          }\n        }\n      }, {\n        key: \"getProvidedProps\",\n        value: function getProvidedProps(props) {\n          var _this$props$contextVa = this.props.contextValue.store.getState(),\n              widgets = _this$props$contextVa.widgets,\n              results = _this$props$contextVa.results,\n              resultsFacetValues = _this$props$contextVa.resultsFacetValues,\n              searching = _this$props$contextVa.searching,\n              searchingForFacetValues = _this$props$contextVa.searchingForFacetValues,\n              isSearchStalled = _this$props$contextVa.isSearchStalled,\n              metadata = _this$props$contextVa.metadata,\n              error = _this$props$contextVa.error;\n\n          var searchResults = {\n            results: results,\n            searching: searching,\n            searchingForFacetValues: searchingForFacetValues,\n            isSearchStalled: isSearchStalled,\n            error: error\n          };\n          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata, // @MAJOR: move this attribute on the `searchResults` it doesn't\n          // makes sense to have it into a separate argument. The search\n          // flags are on the object why not the results?\n          resultsFacetValues);\n        }\n      }, {\n        key: \"getSearchParameters\",\n        value: function getSearchParameters(searchParameters) {\n          if (typeof connectorDesc.getSearchParameters === 'function') {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.props.contextValue.store.getState().widgets);\n          }\n\n          return null;\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata(nextWidgetsState) {\n          if (typeof connectorDesc.getMetadata === 'function') {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n\n          return {};\n        }\n      }, {\n        key: \"transitionState\",\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (typeof connectorDesc.transitionState === 'function') {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n\n          return nextWidgetsState;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              contextValue = _this$props.contextValue,\n              props = _objectWithoutProperties(_this$props, [\"contextValue\"]);\n\n          var providedProps = this.state.providedProps;\n\n          if (providedProps === null) {\n            return null;\n          }\n\n          var refineProps = typeof connectorDesc.refine === 'function' ? {\n            refine: this.refine,\n            createURL: this.createURL\n          } : {};\n          var searchForFacetValuesProps = typeof connectorDesc.searchForFacetValues === 'function' ? {\n            searchForItems: this.searchForFacetValues\n          } : {};\n          return React.createElement(Composed, _extends({}, props, providedProps, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n\n      return Connector;\n    }(Component);\n\n    _defineProperty(Connector, \"displayName\", \"\".concat(connectorDesc.displayName, \"(\").concat(getDisplayName(Composed), \")\"));\n\n    _defineProperty(Connector, \"propTypes\", connectorDesc.propTypes);\n\n    _defineProperty(Connector, \"defaultProps\", connectorDesc.defaultProps);\n\n    return Connector;\n  };\n}\n\nvar createConnectorWithContext = function createConnectorWithContext(connectorDesc) {\n  return function (Composed) {\n    var Connector = createConnectorWithoutContext(connectorDesc)(Composed);\n\n    var ConnectorWrapper = function ConnectorWrapper(props) {\n      return React.createElement(InstantSearchConsumer, null, function (contextValue) {\n        return React.createElement(IndexConsumer, null, function (indexContextValue) {\n          return React.createElement(Connector, _extends({\n            contextValue: contextValue,\n            indexContextValue: indexContextValue\n          }, props));\n        });\n      });\n    };\n\n    return ConnectorWrapper;\n  };\n};\n\nexport default createConnectorWithContext;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport { omit } from './utils';\nexport function getIndexId(context) {\n  return hasMultipleIndices(context) ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;\n}\nexport function getResults(searchResults, context) {\n  if (searchResults.results) {\n    if (searchResults.results.hits) {\n      return searchResults.results;\n    }\n\n    var indexId = getIndexId(context);\n\n    if (searchResults.results[indexId]) {\n      return searchResults.results[indexId];\n    }\n  }\n\n  return null;\n}\nexport function hasMultipleIndices(context) {\n  return context && context.multiIndexContext;\n} // eslint-disable-next-line max-params\n\nexport function refineValue(searchState, nextRefinement, context, resetPage, namespace) {\n  if (hasMultipleIndices(context)) {\n    var indexId = getIndexId(context);\n    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, indexId, resetPage);\n  } else {\n    // When we have a multi index page with shared widgets we should also\n    // reset their page to 1 if the resetPage is provided. Otherwise the\n    // indices will always be reset\n    // see: https://github.com/algolia/react-instantsearch/issues/310\n    // see: https://github.com/algolia/react-instantsearch/issues/637\n    if (searchState.indices && resetPage) {\n      Object.keys(searchState.indices).forEach(function (targetedIndex) {\n        searchState = refineValue(searchState, {\n          page: 1\n        }, {\n          multiIndexContext: {\n            targetedIndex: targetedIndex\n          }\n        }, true, namespace);\n      });\n    }\n\n    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);\n  }\n}\n\nfunction refineMultiIndex(searchState, nextRefinement, indexId, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], nextRefinement, page))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, nextRefinement, page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndex(searchState, nextRefinement, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, nextRefinement, page);\n} // eslint-disable-next-line max-params\n\n\nfunction refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) {\n  var _objectSpread4;\n\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], (_objectSpread4 = {}, _defineProperty(_objectSpread4, namespace, _objectSpread({}, searchState.indices[indexId][namespace], nextRefinement)), _defineProperty(_objectSpread4, \"page\", 1), _objectSpread4)))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread(_defineProperty({}, namespace, nextRefinement), page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, _defineProperty({}, namespace, _objectSpread({}, searchState[namespace], nextRefinement)), page);\n}\n\nfunction getNamespaceAndAttributeName(id) {\n  var parts = id.match(/^([^.]*)\\.(.*)/);\n  var namespace = parts && parts[1];\n  var attributeName = parts && parts[2];\n  return {\n    namespace: namespace,\n    attributeName: attributeName\n  };\n}\n\nfunction hasRefinements(_ref) {\n  var multiIndex = _ref.multiIndex,\n      indexId = _ref.indexId,\n      namespace = _ref.namespace,\n      attributeName = _ref.attributeName,\n      id = _ref.id,\n      searchState = _ref.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId][namespace] && Object.hasOwnProperty.call(searchState.indices[indexId][namespace], attributeName);\n  }\n\n  if (multiIndex) {\n    return searchState.indices && searchState.indices[indexId] && Object.hasOwnProperty.call(searchState.indices[indexId], id);\n  }\n\n  if (namespace) {\n    return searchState[namespace] && Object.hasOwnProperty.call(searchState[namespace], attributeName);\n  }\n\n  return Object.hasOwnProperty.call(searchState, id);\n}\n\nfunction getRefinements(_ref2) {\n  var multiIndex = _ref2.multiIndex,\n      indexId = _ref2.indexId,\n      namespace = _ref2.namespace,\n      attributeName = _ref2.attributeName,\n      id = _ref2.id,\n      searchState = _ref2.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices[indexId][namespace][attributeName];\n  }\n\n  if (multiIndex) {\n    return searchState.indices[indexId][id];\n  }\n\n  if (namespace) {\n    return searchState[namespace][attributeName];\n  }\n\n  return searchState[id];\n}\n\nexport function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri.namespace,\n      attributeName = _getNamespaceAndAttri.attributeName;\n\n  var multiIndex = hasMultipleIndices(context);\n  var args = {\n    multiIndex: multiIndex,\n    indexId: indexId,\n    namespace: namespace,\n    attributeName: attributeName,\n    id: id,\n    searchState: searchState\n  };\n  var hasRefinementsValue = hasRefinements(args);\n\n  if (hasRefinementsValue) {\n    return getRefinements(args);\n  }\n\n  if (props.defaultRefinement) {\n    return props.defaultRefinement;\n  }\n\n  return defaultValue;\n}\nexport function cleanUpValue(searchState, context, id) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri2.namespace,\n      attributeName = _getNamespaceAndAttri2.attributeName;\n\n  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {\n    return cleanUpValueWithMultiIndex({\n      attribute: attributeName,\n      searchState: searchState,\n      indexId: indexId,\n      id: id,\n      namespace: namespace\n    });\n  }\n\n  return cleanUpValueWithSingleIndex({\n    attribute: attributeName,\n    searchState: searchState,\n    id: id,\n    namespace: namespace\n  });\n}\n\nfunction cleanUpValueWithSingleIndex(_ref3) {\n  var searchState = _ref3.searchState,\n      id = _ref3.id,\n      namespace = _ref3.namespace,\n      attribute = _ref3.attribute;\n\n  if (namespace) {\n    return _objectSpread({}, searchState, _defineProperty({}, namespace, omit(searchState[namespace], [attribute])));\n  }\n\n  return omit(searchState, [id]);\n}\n\nfunction cleanUpValueWithMultiIndex(_ref4) {\n  var searchState = _ref4.searchState,\n      indexId = _ref4.indexId,\n      id = _ref4.id,\n      namespace = _ref4.namespace,\n      attribute = _ref4.attribute;\n  var indexSearchState = searchState.indices[indexId];\n\n  if (namespace && indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, indexSearchState, _defineProperty({}, namespace, omit(indexSearchState[namespace], [attribute])))))\n    });\n  }\n\n  if (indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, omit(indexSearchState, [id])))\n    });\n  }\n\n  return searchState;\n}","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\n/**\n * The `connectStateResults` connector provides a way to access the `searchState` and the `searchResults`\n * of InstantSearch.\n * For instance this connector allows you to create results/noResults or query/noQuery pages.\n * @name connectStateResults\n * @kind connector\n * @providedPropType {object} searchState - The search state of the instant search component. <br/><br/> See: [Search state structure](https://community.algolia.com/react-instantsearch/guide/Search_state.html)\n * @providedPropType {object} searchResults - The search results. <br/><br/> In case of multiple indices: if used under `<Index>`, results will be those of the corresponding index otherwise it'll be those of the root index  See: [Search results structure](https://community.algolia.com/algoliasearch-helper-js/reference.html#searchresults)\n * @providedPropType {object} allSearchResults - In case of multiple indices you can retrieve all the results\n * @providedPropType {string} error - If the search failed, the error will be logged here.\n * @providedPropType {boolean} searching - If there is a search in progress.\n * @providedPropType {boolean} isSearchStalled - Flag that indicates if React InstantSearch has detected that searches are stalled.\n * @providedPropType {boolean} searchingForFacetValues - If there is a search in a list in progress.\n * @providedPropType {object} props - component props.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const Content = connectStateResults(({ searchState, searchResults }) => {\n *   const hasResults = searchResults && searchResults.nbHits !== 0;\n *\n *    return (\n *      <div>\n *        <div hidden={!hasResults}>\n *          <Hits />\n *        </div>\n *        <div hidden={hasResults}>\n *          <div>No results has been found for {searchState.query}</div>\n *        </div>\n *      </div>\n *    );\n * });\n *\n * const App = () => (\n *   <InstantSearch\n *      searchClient={searchClient}\n *      indexName=\"instant_search\"\n *    >\n *      <SearchBox />\n *      <Content />\n *    </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaStateResults',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      searchState: searchState,\n      searchResults: results,\n      allSearchResults: searchResults.results,\n      searching: searchResults.searching,\n      isSearchStalled: searchResults.isSearchStalled,\n      error: searchResults.error,\n      searchingForFacetValues: searchResults.searchingForFacetValues,\n      props: props\n    };\n  }\n});","import { defer } from './utils';\nexport default function createWidgetsManager(onWidgetsUpdate) {\n  var widgets = []; // Is an update scheduled?\n\n  var scheduled = false; // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    defer(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","import { getPropertyByPath } from './utils';\nexport var HIGHLIGHT_TAGS = {\n  highlightPreTag: \"<ais-highlight-0000000000>\",\n  highlightPostTag: \"</ais-highlight-0000000000>\"\n};\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\nfunction parseHighlightedAttribute(_ref) {\n  var preTag = _ref.preTag,\n      postTag = _ref.postTag,\n      _ref$highlightedValue = _ref.highlightedValue,\n      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;\n  var splitByPreTag = highlightedValue.split(preTag);\n  var firstValue = splitByPreTag.shift();\n  var elements = firstValue === '' ? [] : [{\n    value: firstValue,\n    isHighlighted: false\n  }];\n\n  if (postTag === preTag) {\n    var isHighlighted = true;\n    splitByPreTag.forEach(function (split) {\n      elements.push({\n        value: split,\n        isHighlighted: isHighlighted\n      });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(function (split) {\n      var splitByPostTag = split.split(postTag);\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true\n      });\n\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          value: splitByPostTag[1],\n          isHighlighted: false\n        });\n      }\n    });\n  }\n\n  return elements;\n}\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\n\nexport function parseAlgoliaHit(_ref2) {\n  var _ref2$preTag = _ref2.preTag,\n      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,\n      _ref2$postTag = _ref2.postTag,\n      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,\n      highlightProperty = _ref2.highlightProperty,\n      attribute = _ref2.attribute,\n      hit = _ref2.hit;\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n  var highlightObject = getPropertyByPath(hit[highlightProperty], attribute) || {};\n\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(function (item) {\n      return parseHighlightedAttribute({\n        preTag: preTag,\n        postTag: postTag,\n        highlightedValue: item.value\n      });\n    });\n  }\n\n  return parseHighlightedAttribute({\n    preTag: preTag,\n    postTag: postTag,\n    highlightedValue: highlightObject.value\n  });\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createWidgetsManager from './createWidgetsManager';\nimport createStore from './createStore';\nimport { HIGHLIGHT_TAGS } from './highlight';\nimport { hasMultipleIndices } from './indexUtils';\nimport { version as ReactVersion } from 'react';\nimport version from './version';\n\nfunction addAlgoliaAgents(searchClient) {\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    searchClient.addAlgoliaAgent(\"react (\".concat(ReactVersion, \")\"));\n    searchClient.addAlgoliaAgent(\"react-instantsearch (\".concat(version, \")\"));\n  }\n}\n\nvar isMultiIndexContext = function isMultiIndexContext(widget) {\n  return hasMultipleIndices({\n    ais: widget.props.contextValue,\n    multiIndexContext: widget.props.indexContextValue\n  });\n};\n\nvar isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {\n  return widget.props.indexContextValue.targetedIndex === indexId;\n}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.\n// Since it's a class we could rely on `instanceof` or similar. We never\n// had an issue though. Works for now.\n\n\nvar isIndexWidget = function isIndexWidget(widget) {\n  return Boolean(widget.props.indexId);\n};\n\nvar isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {\n  return widget.props.indexId === indexId;\n};\n\nvar sortIndexWidgetsFirst = function sortIndexWidgetsFirst(firstWidget, secondWidget) {\n  var isFirstWidgetIndex = isIndexWidget(firstWidget);\n  var isSecondWidgetIndex = isIndexWidget(secondWidget);\n\n  if (isFirstWidgetIndex && !isSecondWidgetIndex) {\n    return -1;\n  }\n\n  if (!isFirstWidgetIndex && isSecondWidgetIndex) {\n    return 1;\n  }\n\n  return 0;\n}; // This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\n\n\nfunction serializeQueryParameters(parameters) {\n  var isObjectOrArray = function isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Object.prototype.toString.call(value) === '[object Array]';\n  };\n\n  var encode = function encode(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return encodeURIComponent(args[i++]);\n    });\n  };\n\n  return Object.keys(parameters).map(function (key) {\n    return encode('%s=%s', key, isObjectOrArray(parameters[key]) ? JSON.stringify(parameters[key]) : parameters[key]);\n  }).join('&');\n}\n/**\n * Creates a new instance of the InstantSearchManager which controls the widgets and\n * trigger the search when the widgets are updated.\n * @param {string} indexName - the main index name\n * @param {object} initialState - initial widget state\n * @param {object} SearchParameters - optional additional parameters to send to the algolia API\n * @param {number} stalledSearchDelay - time (in ms) after the search is stalled\n * @return {InstantSearchManager} a new instance of InstantSearchManager\n */\n\n\nexport default function createInstantSearchManager(_ref) {\n  var indexName = _ref.indexName,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      searchClient = _ref.searchClient,\n      resultsState = _ref.resultsState,\n      stalledSearchDelay = _ref.stalledSearchDelay;\n  var helper = algoliasearchHelper(searchClient, indexName, _objectSpread({}, HIGHLIGHT_TAGS));\n  addAlgoliaAgents(searchClient);\n  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({\n    indexId: indexName\n  })).on('error', handleSearchError);\n  var skip = false;\n  var stalledSearchTimer = null;\n  var initialSearchParameters = helper.state;\n  var widgetsManager = createWidgetsManager(onWidgetsUpdate);\n  hydrateSearchClient(searchClient, resultsState);\n  var store = createStore({\n    widgets: initialState,\n    metadata: [],\n    results: hydrateResultsState(resultsState),\n    error: null,\n    searching: false,\n    isSearchStalled: true,\n    searchingForFacetValues: false\n  });\n\n  function skipSearch() {\n    skip = true;\n  }\n\n  function updateClient(client) {\n    addAlgoliaAgents(client);\n    helper.setClient(client);\n    search();\n  }\n\n  function clearCache() {\n    helper.clearCache();\n    search();\n  }\n\n  function getMetadata(state) {\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getMetadata);\n    }).map(function (widget) {\n      return widget.getMetadata(state);\n    });\n  }\n\n  function getSearchParameters() {\n    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      return !isMultiIndexContext(widget) && !isIndexWidget(widget);\n    }).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, initialSearchParameters);\n    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, sharedParameters);\n    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (indices, widget) {\n      var indexId = isMultiIndexContext(widget) ? widget.props.indexContextValue.targetedIndex : widget.props.indexId;\n      var widgets = indices[indexId] || [];\n      return _objectSpread({}, indices, _defineProperty({}, indexId, widgets.concat(widget)));\n    }, {});\n    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {\n      return {\n        parameters: derivedIndices[indexId].reduce(function (res, widget) {\n          return widget.getSearchParameters(res);\n        }, sharedParameters),\n        indexId: indexId\n      };\n    });\n    return {\n      mainParameters: mainParameters,\n      derivedParameters: derivedParameters\n    };\n  }\n\n  function search() {\n    if (!skip) {\n      var _getSearchParameters = getSearchParameters(helper.state),\n          mainParameters = _getSearchParameters.mainParameters,\n          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived\n      // helpers mutates the value `derivedHelpers`. The `forEach` loop does\n      // not iterate on each value and we're not able to correctly clear the\n      // previous derived helpers (memory leak + useless requests).\n\n\n      helper.derivedHelpers.slice().forEach(function (derivedHelper) {\n        // Since we detach the derived helpers on **every** new search they\n        // won't receive intermediate results in case of a stalled search.\n        // Only the last result is dispatched by the derived helper because\n        // they are not detached yet:\n        //\n        // - a -> main helper receives results\n        // - ap -> main helper receives results\n        // - app -> main helper + derived helpers receive results\n        //\n        // The quick fix is to avoid to detach them on search but only once they\n        // received the results. But it means that in case of a stalled search\n        // all the derived helpers not detached yet register a new search inside\n        // the helper. The number grows fast in case of a bad network and it's\n        // not deterministic.\n        derivedHelper.detach();\n      });\n      derivedParameters.forEach(function (_ref2) {\n        var indexId = _ref2.indexId,\n            parameters = _ref2.parameters;\n        var derivedHelper = helper.derive(function () {\n          return parameters;\n        });\n        derivedHelper.on('result', handleSearchSuccess({\n          indexId: indexId\n        })).on('error', handleSearchError);\n      });\n      helper.setState(mainParameters);\n      helper.search();\n    }\n  }\n\n  function handleSearchSuccess(_ref3) {\n    var indexId = _ref3.indexId;\n    return function (event) {\n      var state = store.getState();\n      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;\n      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the\n      // results to an empty object, otherwise we keep reference of stalled and\n      // unused results.\n\n      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;\n\n      if (!isDerivedHelpersEmpty) {\n        results = _objectSpread({}, results, _defineProperty({}, indexId, event.results));\n      } else {\n        results = event.results;\n      }\n\n      var currentState = store.getState();\n      var nextIsSearchStalled = currentState.isSearchStalled;\n\n      if (!helper.hasPendingRequests()) {\n        clearTimeout(stalledSearchTimer);\n        stalledSearchTimer = null;\n        nextIsSearchStalled = false;\n      }\n\n      var resultsFacetValues = currentState.resultsFacetValues,\n          partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n      store.setState(_objectSpread({}, partialState, {\n        results: results,\n        isSearchStalled: nextIsSearchStalled,\n        searching: false,\n        error: null\n      }));\n    };\n  }\n\n  function handleSearchError(_ref4) {\n    var error = _ref4.error;\n    var currentState = store.getState();\n    var nextIsSearchStalled = currentState.isSearchStalled;\n\n    if (!helper.hasPendingRequests()) {\n      clearTimeout(stalledSearchTimer);\n      nextIsSearchStalled = false;\n    }\n\n    var resultsFacetValues = currentState.resultsFacetValues,\n        partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n    store.setState(_objectSpread({}, partialState, {\n      isSearchStalled: nextIsSearchStalled,\n      error: error,\n      searching: false\n    }));\n  }\n\n  function handleNewSearch() {\n    if (!stalledSearchTimer) {\n      stalledSearchTimer = setTimeout(function () {\n        var _store$getState = store.getState(),\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            partialState = _objectWithoutProperties(_store$getState, [\"resultsFacetValues\"]);\n\n        store.setState(_objectSpread({}, partialState, {\n          isSearchStalled: true\n        }));\n      }, stalledSearchDelay);\n    }\n  }\n\n  function hydrateSearchClient(client, results) {\n    if (!results) {\n      return;\n    } // Disable cache hydration on:\n    // - Algoliasearch API Client < v4 with cache disabled\n    // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n\n    if ((!client.transporter || client._cacheHydrated) && (!client._useCache || typeof client.addAlgoliaAgent !== 'function')) {\n      return;\n    } // Algoliasearch API Client >= v4\n    // To hydrate the client we need to populate the cache with the data from\n    // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n    // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n    // for us to compute the key the same way as `algoliasearch-client` we need\n    // to populate it on a custom key and override the `search` method to\n    // search on it first.\n\n\n    if (client.transporter && !client._cacheHydrated) {\n      client._cacheHydrated = true;\n      var baseMethod = client.search;\n\n      client.search = function (requests) {\n        for (var _len2 = arguments.length, methodArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          methodArgs[_key2 - 1] = arguments[_key2];\n        }\n\n        var requestsWithSerializedParams = requests.map(function (request) {\n          return _objectSpread({}, request, {\n            params: serializeQueryParameters(request.params)\n          });\n        });\n        return client.transporter.responsesCache.get({\n          method: 'search',\n          args: [requestsWithSerializedParams].concat(methodArgs)\n        }, function () {\n          return baseMethod.apply(void 0, [requests].concat(methodArgs));\n        });\n      };\n    }\n\n    if (Array.isArray(results)) {\n      hydrateSearchClientWithMultiIndexRequest(client, results);\n      return;\n    }\n\n    hydrateSearchClientWithSingleIndexRequest(client, results);\n  }\n\n  function hydrateSearchClientWithMultiIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults.map(function (request) {\n            return {\n              indexName: request.index,\n              params: request.params\n            };\n          }));\n        }, [])]\n      }, {\n        results: results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults);\n        }, [])\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        }));\n      }, [])\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults);\n      }, [])\n    })));\n  }\n\n  function hydrateSearchClientWithSingleIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        })]\n      }, {\n        results: results.rawResults\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.rawResults.map(function (request) {\n        return {\n          indexName: request.index,\n          params: request.params\n        };\n      })\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.rawResults\n    })));\n  }\n\n  function hydrateResultsState(results) {\n    if (!results) {\n      return null;\n    }\n\n    if (Array.isArray(results)) {\n      return results.reduce(function (acc, result) {\n        return _objectSpread({}, acc, _defineProperty({}, result._internalIndexId, new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(result.state), result.rawResults)));\n      }, {});\n    }\n\n    return new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(results.state), results.rawResults);\n  } // Called whenever a widget has been rendered with new props.\n\n\n  function onWidgetsUpdate() {\n    var metadata = getMetadata(store.getState().widgets);\n    store.setState(_objectSpread({}, store.getState(), {\n      metadata: metadata,\n      searching: true\n    })); // Since the `getSearchParameters` method of widgets also depends on props,\n    // the result search parameters might have changed.\n\n    search();\n  }\n\n  function transitionState(nextSearchState) {\n    var searchState = store.getState().widgets;\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.transitionState);\n    }).reduce(function (res, widget) {\n      return widget.transitionState(searchState, res);\n    }, nextSearchState);\n  }\n\n  function onExternalStateUpdate(nextSearchState) {\n    var metadata = getMetadata(nextSearchState);\n    store.setState(_objectSpread({}, store.getState(), {\n      widgets: nextSearchState,\n      metadata: metadata,\n      searching: true\n    }));\n    search();\n  }\n\n  function onSearchForFacetValues(_ref5) {\n    var facetName = _ref5.facetName,\n        query = _ref5.query,\n        _ref5$maxFacetHits = _ref5.maxFacetHits,\n        maxFacetHits = _ref5$maxFacetHits === void 0 ? 10 : _ref5$maxFacetHits; // The values 1, 100 are the min / max values that the engine accepts.\n    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits\n\n    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));\n    store.setState(_objectSpread({}, store.getState(), {\n      searchingForFacetValues: true\n    }));\n    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {\n      var _objectSpread7;\n\n      store.setState(_objectSpread({}, store.getState(), {\n        error: null,\n        searchingForFacetValues: false,\n        resultsFacetValues: _objectSpread({}, store.getState().resultsFacetValues, (_objectSpread7 = {}, _defineProperty(_objectSpread7, facetName, content.facetHits), _defineProperty(_objectSpread7, \"query\", query), _objectSpread7))\n      }));\n    }, function (error) {\n      store.setState(_objectSpread({}, store.getState(), {\n        searchingForFacetValues: false,\n        error: error\n      }));\n    }).catch(function (error) {\n      // Since setState is synchronous, any error that occurs in the render of a\n      // component will be swallowed by this promise.\n      // This is a trick to make the error show up correctly in the console.\n      // See http://stackoverflow.com/a/30741722/969302\n      setTimeout(function () {\n        throw error;\n      });\n    });\n  }\n\n  function updateIndex(newIndex) {\n    initialSearchParameters = initialSearchParameters.setIndex(newIndex); // No need to trigger a new search here as the widgets will also update and trigger it if needed.\n  }\n\n  function getWidgetsIds() {\n    return store.getState().metadata.reduce(function (res, meta) {\n      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;\n    }, []);\n  }\n\n  return {\n    store: store,\n    widgetsManager: widgetsManager,\n    getWidgetsIds: getWidgetsIds,\n    getSearchParameters: getSearchParameters,\n    onSearchForFacetValues: onSearchForFacetValues,\n    onExternalStateUpdate: onExternalStateUpdate,\n    transitionState: transitionState,\n    updateClient: updateClient,\n    updateIndex: updateIndex,\n    clearCache: clearCache,\n    skipSearch: skipSearch\n  };\n}","export default '6.7.0';","export default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n  return {\n    getState: function getState() {\n      return state;\n    },\n    setState: function setState(nextState) {\n      state = nextState;\n      listeners.forEach(function (listener) {\n        return listener();\n      });\n    },\n    subscribe: function subscribe(listener) {\n      listeners.push(listener);\n      return function unsubscribe() {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    }\n  };\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch = /*#__PURE__*/function (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { InstantSearchConsumer, IndexProvider } from '../core/context';\n\nfunction getIndexContext(props) {\n  return {\n    targetedIndex: props.indexId\n  };\n}\n/**\n * The component that allows you to apply widgets to a dedicated index. It's\n * useful if you want to build an interface that targets multiple indices.\n *\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Index, SearchBox, Hits, Configure } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Configure hitsPerPage={5} />\n *     <SearchBox />\n *     <Index indexName=\"instant_search\">\n *       <Hits />\n *     </Index>\n *     <Index indexName=\"bestbuy\">\n *       <Hits />\n *     </Index>\n *   </InstantSearch>\n * );\n */\n\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  _createClass(Index, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      return {\n        indexContext: getIndexContext(props)\n      };\n    }\n  }]);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      indexContext: getIndexContext(_this.props)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n    _this.props.contextValue.onSearchParameters(_this.getSearchParameters.bind(_assertThisInitialized(_this)), {\n      ais: _this.props.contextValue,\n      multiIndexContext: _this.state.indexContext\n    }, _this.props);\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.indexName !== prevProps.indexName) {\n        this.props.contextValue.widgetsManager.update();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (typeof this.unregisterWidget === 'function') {\n        this.unregisterWidget();\n      }\n    }\n  }, {\n    key: \"getSearchParameters\",\n    value: function getSearchParameters(searchParameters, props) {\n      return searchParameters.setIndex(this.props ? this.props.indexName : props.indexName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var childrenCount = Children.count(this.props.children);\n\n      if (childrenCount === 0) {\n        return null;\n      }\n\n      return React.createElement(IndexProvider, {\n        value: this.state.indexContext\n      }, this.props.children);\n    }\n  }]);\n\n  return Index;\n}(Component);\n\n_defineProperty(Index, \"propTypes\", {\n  indexName: PropTypes.string.isRequired,\n  indexId: PropTypes.string.isRequired,\n  children: PropTypes.node\n});\n\nvar IndexWrapper = function IndexWrapper(props) {\n  var inferredIndexId = props.indexName;\n  return React.createElement(InstantSearchConsumer, null, function (contextValue) {\n    return React.createElement(Index, _extends({\n      contextValue: contextValue,\n      indexId: inferredIndexId\n    }, props));\n  });\n};\n\nexport var IndexComponentWithoutContext = Index;\nexport default IndexWrapper;","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\nimport { addAbsolutePositions, addQueryID } from '../core/utils';\n/**\n * connectHits connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n *\n * **Warning:** you will need to use the **objectID** property available on every hit as a key\n * when iterating over them. This will ensure you have the best possible UI experience\n * especially on slow networks.\n * @name connectHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const CustomHits = connectHits(({ hits }) => (\n *   <div>\n *     {hits.map(hit =>\n *       <p key={hit.objectID}>\n *         <Highlight attribute=\"name\" hit={hit} />\n *       </p>\n *     )}\n *   </div>\n * ));\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CustomHits />\n *   </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaHits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        hits: []\n      };\n    }\n\n    var hitsWithPositions = addAbsolutePositions(results.hits, results.hitsPerPage, results.page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    return {\n      hits: hitsWithPositionsAndQueryID\n    };\n  },\n\n  /**\n   * Hits needs to be considered as a widget to trigger a search,\n   * even if no other widgets are used.\n   *\n   * To be considered as a widget you need either:\n   * - getSearchParameters\n   * - getMetadata\n   * - transitionState\n   *\n   * See: createConnector.tsx\n   */\n  getSearchParameters: function getSearchParameters(searchParameters) {\n    return searchParameters;\n  }\n});","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport cx from 'classnames';\nexport var createClassNames = function createClassNames(block) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';\n  return function () {\n    for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n      elements[_key] = arguments[_key];\n    }\n\n    var suitElements = elements.filter(function (element) {\n      return element || element === '';\n    }).map(function (element) {\n      var baseClassName = \"\".concat(prefix, \"-\").concat(block);\n      return element ? \"\".concat(baseClassName, \"-\").concat(element) : baseClassName;\n    });\n    return cx(suitElements);\n  };\n};\nexport var isSpecialClick = function isSpecialClick(event) {\n  var isMiddleClick = event.button === 1;\n  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);\n};\nexport var capitalize = function capitalize(key) {\n  return key.length === 0 ? '' : \"\".concat(key[0].toUpperCase()).concat(key.slice(1));\n}; // taken from InstantSearch.js/utils\n\nexport function range(_ref) {\n  var _ref$start = _ref.start,\n      start = _ref$start === void 0 ? 0 : _ref$start,\n      end = _ref.end,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step; // We can't divide by 0 so we re-assign the step to 1 if it happens.\n\n  var limitStep = step === 0 ? 1 : step; // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n\n  var arrayLength = Math.round((end - start) / limitStep);\n  return _toConsumableArray(Array(arrayLength)).map(function (_, current) {\n    return (start + current) * limitStep;\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('Hits');\n\nvar DefaultHitComponent = function DefaultHitComponent(props) {\n  return React.createElement(\"div\", {\n    style: {\n      borderBottom: '1px solid #bbb',\n      paddingBottom: '5px',\n      marginBottom: '5px',\n      wordBreak: 'break-all'\n    }\n  }, JSON.stringify(props).slice(0, 100), \"...\");\n};\n\nvar Hits = function Hits(_ref) {\n  var hits = _ref.hits,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$hitComponent = _ref.hitComponent,\n      HitComponent = _ref$hitComponent === void 0 ? DefaultHitComponent : _ref$hitComponent;\n  return React.createElement(\"div\", {\n    className: classNames(cx(''), className)\n  }, React.createElement(\"ul\", {\n    className: cx('list')\n  }, hits.map(function (hit) {\n    return React.createElement(\"li\", {\n      className: cx('item'),\n      key: hit.objectID\n    }, React.createElement(HitComponent, {\n      hit: hit\n    }));\n  })));\n};\n\nvar HitPropTypes = PropTypes.shape({\n  objectID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n});\nexport default Hits;","import { connectHits } from 'react-instantsearch-core';\nimport Hits from '../components/Hits';\n/**\n * Displays a list of hits.\n *\n * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).\n *\n * @name Hits\n * @kind widget\n * @propType {Component} [hitComponent] - Component used for rendering each hit from\n *   the results. If it is not provided the rendering defaults to displaying the\n *   hit in its JSON form. The component will be called with a `hit` prop.\n * @themeKey ais-Hits - the root div of the widget\n * @themeKey ais-Hits-list - the list of results\n * @themeKey ais-Hits-item - the hit list item\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHits(Hits);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { omit } from '../core/utils';\nimport createConnector from '../core/createConnector';\nimport { refineValue, getIndexId, hasMultipleIndices } from '../core/indexUtils';\n\nfunction getId() {\n  return 'configure';\n}\n\nexport default createConnector({\n  displayName: 'AlgoliaConfigure',\n  getProvidedProps: function getProvidedProps() {\n    return {};\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props) {\n    var children = props.children,\n        contextValue = props.contextValue,\n        indexContextValue = props.indexContextValue,\n        items = _objectWithoutProperties(props, [\"children\", \"contextValue\", \"indexContextValue\"]);\n\n    return searchParameters.setQueryParameters(items);\n  },\n  transitionState: function transitionState(props, prevSearchState, nextSearchState) {\n    var id = getId();\n\n    var children = props.children,\n        contextValue = props.contextValue,\n        indexContextValue = props.indexContextValue,\n        items = _objectWithoutProperties(props, [\"children\", \"contextValue\", \"indexContextValue\"]);\n\n    var propKeys = Object.keys(props);\n    var nonPresentKeys = this._props ? Object.keys(this._props).filter(function (prop) {\n      return propKeys.indexOf(prop) === -1;\n    }) : [];\n    this._props = props;\n\n    var nextValue = _defineProperty({}, id, _objectSpread({}, omit(nextSearchState[id], nonPresentKeys), items));\n\n    return refineValue(nextSearchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    var id = getId();\n    var indexId = getIndexId({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var subState = hasMultipleIndices({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) && searchState.indices ? searchState.indices[indexId] : searchState;\n    var configureKeys = subState && subState[id] ? Object.keys(subState[id]) : [];\n    var configureState = configureKeys.reduce(function (acc, item) {\n      if (!props[item]) {\n        acc[item] = subState[id][item];\n      }\n\n      return acc;\n    }, {});\n\n    var nextValue = _defineProperty({}, id, configureState);\n\n    return refineValue(searchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  }\n});","import connectConfigure from '../connectors/connectConfigure';\n/**\n * Configure is a widget that lets you provide raw search parameters\n * to the Algolia API.\n *\n * Any of the props added to this widget will be forwarded to Algolia. For more information\n * on the different parameters that can be set, have a look at the\n * [reference](https://www.algolia.com/doc/api-client/javascript/search#search-parameters).\n *\n * This widget can be used either with react-dom and react-native. It will not render anything\n * on screen, only configure some parameters.\n *\n * Read more in the [Search parameters](guide/Search_parameters.html) guide.\n * @name Configure\n * @kind widget\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Configure, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Configure hitsPerPage={5} />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\nexport default connectConfigure(function Configure() {\n  return null;\n});","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getIndexId } from '../core/indexUtils';\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId(props);\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return '';\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextRefinement);\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, getId());\n}\n/**\n * connectSearchBox connector provides the logic to build a widget that will\n * let the user search for a query\n * @name connectSearchBox\n * @kind connector\n * @propType {string} [defaultRefinement] - Provide a default value for the query\n * @providedPropType {function} refine - a function to change the current query\n * @providedPropType {string} currentRefinement - the current query used\n * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaSearchBox',\n  propTypes: {\n    defaultRefinement: PropTypes.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: currentRefinement === null ? [] : [{\n        label: \"\".concat(id, \": \").concat(currentRefinement),\n        value: function value(nextState) {\n          return _refine(props, nextState, '', {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","import React from 'react';\r\nimport { connectSearchBox } from 'react-instantsearch-dom';\r\nimport { SidebarSearchInput } from '../';\r\nexport default connectSearchBox(({ refine, ...rest }) => (\r\n  <SidebarSearchInput search={(value) => refine(value)} {...rest} showClean={true} />\r\n));\r\n","import createConnector from '../core/createConnector';\nimport { HIGHLIGHT_TAGS, parseAlgoliaHit } from '../core/highlight';\n\nvar highlight = function highlight(_ref) {\n  var attribute = _ref.attribute,\n      hit = _ref.hit,\n      highlightProperty = _ref.highlightProperty,\n      _ref$preTag = _ref.preTag,\n      preTag = _ref$preTag === void 0 ? HIGHLIGHT_TAGS.highlightPreTag : _ref$preTag,\n      _ref$postTag = _ref.postTag,\n      postTag = _ref$postTag === void 0 ? HIGHLIGHT_TAGS.highlightPostTag : _ref$postTag;\n  return parseAlgoliaHit({\n    attribute: attribute,\n    highlightProperty: highlightProperty,\n    hit: hit,\n    preTag: preTag,\n    postTag: postTag\n  });\n};\n/**\n * connectHighlight connector provides the logic to create an highlighter\n * component that will retrieve, parse and render an highlighted attribute\n * from an Algolia hit.\n * @name connectHighlight\n * @kind connector\n * @category connector\n * @providedPropType {function} highlight - function to retrieve and parse an attribute from a hit. It takes a configuration object with 3 attributes: `highlightProperty` which is the property that contains the highlight structure from the records, `attribute` which is the name of the attribute (it can be either a string or an array of strings) to look for and `hit` which is the hit from Algolia. It returns an array of objects `{value: string, isHighlighted: boolean}`. If the element that corresponds to the attribute is an array of strings, it will return a nested array of objects.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectHighlight } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const CustomHighlight = connectHighlight(\n *   ({ highlight, attribute, hit, highlightProperty }) => {\n *     const highlights = highlight({\n *       highlightProperty: '_highlightResult',\n *       attribute,\n *       hit\n *     });\n *\n *     return highlights.map(part => part.isHighlighted ? (\n *       <mark>{part.value}</mark>\n *     ) : (\n *       <span>{part.value}</span>\n *     ));\n *   }\n * );\n *\n * const Hit = ({ hit }) => (\n *   <p>\n *     <CustomHighlight attribute=\"name\" hit={hit} />\n *   </p>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaHighlighter',\n  propTypes: {},\n  getProvidedProps: function getProvidedProps() {\n    return {\n      highlight: highlight\n    };\n  }\n});","import React from 'react';\nimport classNames from 'classnames';\nexport var Highlight = function Highlight(_ref) {\n  var cx = _ref.cx,\n      value = _ref.value,\n      highlightedTagName = _ref.highlightedTagName,\n      isHighlighted = _ref.isHighlighted,\n      nonHighlightedTagName = _ref.nonHighlightedTagName;\n  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n  var className = isHighlighted ? 'highlighted' : 'nonHighlighted';\n  return React.createElement(TagName, {\n    className: cx(className)\n  }, value);\n};\n\nvar Highlighter = function Highlighter(_ref2) {\n  var cx = _ref2.cx,\n      hit = _ref2.hit,\n      attribute = _ref2.attribute,\n      highlight = _ref2.highlight,\n      highlightProperty = _ref2.highlightProperty,\n      tagName = _ref2.tagName,\n      nonHighlightedTagName = _ref2.nonHighlightedTagName,\n      separator = _ref2.separator,\n      className = _ref2.className;\n  var parsedHighlightedValue = highlight({\n    hit: hit,\n    attribute: attribute,\n    highlightProperty: highlightProperty\n  });\n  return React.createElement(\"span\", {\n    className: classNames(cx(''), className)\n  }, parsedHighlightedValue.map(function (item, i) {\n    if (Array.isArray(item)) {\n      var isLast = i === parsedHighlightedValue.length - 1;\n      return React.createElement(\"span\", {\n        key: i\n      }, item.map(function (element, index) {\n        return React.createElement(Highlight, {\n          cx: cx,\n          key: index,\n          value: element.value,\n          highlightedTagName: tagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: element.isHighlighted\n        });\n      }), !isLast && React.createElement(\"span\", {\n        className: cx('separator')\n      }, separator));\n    }\n\n    return React.createElement(Highlight, {\n      cx: cx,\n      key: i,\n      value: item.value,\n      highlightedTagName: tagName,\n      nonHighlightedTagName: nonHighlightedTagName,\n      isHighlighted: item.isHighlighted\n    });\n  }));\n};\n\nHighlighter.defaultProps = {\n  tagName: 'em',\n  nonHighlightedTagName: 'span',\n  className: '',\n  separator: ', '\n};\nexport default Highlighter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Highlight');\n\nvar Highlight = function Highlight(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_highlightResult\",\n    cx: cx\n  }));\n};\n\nexport default Highlight;","import { connectHighlight } from 'react-instantsearch-core';\nimport Highlight from '../components/Highlight';\n/**\n * Renders any attribute from a hit into its highlighted form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Highlight\n * @kind widget\n * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Highlight - root of the component\n * @themeKey ais-Highlight-highlighted - part of the text which is highlighted\n * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Highlight attribute=\"name\" hit={hit} />\n *   </div>\n * );\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"Pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Highlight);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Snippet');\n\nvar Snippet = function Snippet(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_snippetResult\",\n    cx: cx\n  }));\n};\n\nexport default Snippet;","import { connectHighlight } from 'react-instantsearch-core';\nimport Snippet from '../components/Snippet';\n/**\n * Renders any attribute from an hit into its highlighted snippet form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Snippet\n * @kind widget\n * @requirements To use this widget, the attribute name passed to the `attribute` prop must be\n * present in \"Attributes to snippet\" on the Algolia dashboard or configured as `attributesToSnippet`\n * via a set settings call to the Algolia API.\n * @propType {string} attribute - location of the highlighted snippet attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted snippet attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the attribute\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Snippet - the root span of the widget\n * @themeKey ais-Snippet-highlighted - the highlighted text\n * @themeKey ais-Snippet-nonHighlighted - the normal text\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Snippet } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Snippet attribute=\"description\" hit={hit} />\n *   </div>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"adjustable\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Snippet);","import React from 'react';\r\nimport { Highlight, Snippet } from 'react-instantsearch-dom';\r\nimport { Hit } from '../Hits';\r\nimport emoji from '../../../utils/emoji';\r\n\r\nexport const PageHit = ({ hit }) => {\r\n  hit._highlightResult.title.value = emoji.emojify(hit._highlightResult.title.value);\r\n  hit._snippetResult.excerpt.value = emoji.emojify(hit._snippetResult.excerpt.value);\r\n  return (\r\n    <Hit\r\n      slug={hit.slug}\r\n      title={<Highlight attribute=\"title\" hit={hit} tagName=\"mark\" />}\r\n      details={<Snippet attribute=\"excerpt\" hit={hit} tagName=\"mark\" />}\r\n    />\r\n  );\r\n};\r\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getResults } from '../core/indexUtils';\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, page);\n\n  if (typeof currentRefinement === 'string') {\n    return parseInt(currentRefinement, 10);\n  }\n\n  return currentRefinement;\n}\n\nfunction _refine(props, searchState, nextPage, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextPage);\n\n  var resetPage = false;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n/**\n * connectPagination connector provides the logic to build a widget that will\n * let the user displays hits corresponding to a certain page.\n * @name connectPagination\n * @kind connector\n * @propType {boolean} [showFirst=true] - Display the first page link.\n * @propType {boolean} [showLast=false] - Display the last page link.\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\n * @propType {boolean} [showNext=true] - Display the next page link.\n * @propType {number} [padding=3] - How many page links to display around the current page.\n * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {number} nbPages - the total of existing pages\n * @providedPropType {number} currentRefinement - the page refinement currently applied\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaPagination',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return null;\n    }\n\n    var nbPages = results.nbPages;\n    return {\n      nbPages: nbPages,\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      canRefine: nbPages > 1\n    };\n  },\n  refine: function refine(props, searchState, nextPage) {\n    return _refine(props, searchState, nextPage, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return cleanUpValue(searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, getId());\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setPage(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) - 1);\n  },\n  getMetadata: function getMetadata() {\n    return {\n      id: getId()\n    };\n  }\n});","import React from 'react';\r\nimport { connectPagination } from 'react-instantsearch-dom';\r\nimport { Pagination } from '../';\r\nexport default connectPagination(({ currentRefinement, ...rest }) => (\r\n  <Pagination currentPage={currentRefinement} {...rest} />\r\n));\r\n","import React from 'react';\r\nimport { connectStats } from 'react-instantsearch-dom';\r\nimport { SearchStats } from '../';\r\nexport default connectStats(({ nbHits, ...rest }) => <SearchStats hits={nbHits} {...rest} />);\r\n","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\n/**\n * connectStats connector provides the logic to build a widget that will\n *  displays algolia search statistics (hits number and processing time).\n * @name connectStats\n * @kind connector\n * @providedPropType {number} nbHits - number of hits returned by Algolia.\n * @providedPropType {number} processingTimeMS - the time in ms took by Algolia to search for results.\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaStats',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return null;\n    }\n\n    return {\n      nbHits: results.nbHits,\n      processingTimeMS: results.processingTimeMS\n    };\n  }\n});","import React, { createRef } from 'react';\r\nimport {\r\n  InstantSearch,\r\n  Index,\r\n  Hits,\r\n  Configure,\r\n  connectStateResults,\r\n} from 'react-instantsearch-dom';\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport { HitsWrapper } from '../Hits';\r\nimport config from 'config';\r\nimport Input from './input';\r\nimport { PageHit } from './hitComps';\r\nimport styled from '@emotion/styled';\r\nimport SearchStatus from '../Status';\r\nimport Pagination from './pagination';\r\nimport Stats from './stats';\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  @media only screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// const Results = connectStateResults(\r\n//   ({ searching, searchState: state, searchResults: res }) =>\r\n//     (searching && `Searching...`) || (res && res.nbHits === 0 && `No results for '${state.query}'`)\r\n// );\r\n\r\nconst Results = connectStateResults(({ searching, searchState: state, searchResults: res }) => (\r\n  <SearchStatus noHits={res && res.nbHits === 0} searching={searching} query={state.query} />\r\n));\r\n\r\nclass Algolia extends React.Component {\r\n  state = {\r\n    query: '',\r\n    focus: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.searchClient = algoliasearch(\r\n      config.features.search.algoliaAppId,\r\n      config.features.search.algoliaSearchKey\r\n    );\r\n    this.ref = createRef();\r\n    this.inputRef = props.inputRef;\r\n    this.index = props.index;\r\n  }\r\n\r\n  render() {\r\n    const ref = this.ref;\r\n    const focus = this.focus;\r\n    const showResults = this.state.query.length > 1 && this.state.focus;\r\n    return (\r\n      <InstantSearch\r\n        searchClient={this.searchClient}\r\n        indexName={this.index}\r\n        onSearchStateChange={({ query }) => this.setState({ query: query })}\r\n        root={{ Root, props: { ref } }}\r\n      >\r\n        <Input\r\n          inputRef={this.inputRef}\r\n          onFocus={() => this.setState({ focus: true })}\r\n          {...{ focus }}\r\n        />\r\n\r\n        <div style={{ flex: '1' }}>\r\n          {showResults && config.features.search.showStats ? (\r\n            <div>\r\n              <Stats />\r\n            </div>\r\n          ) : null}\r\n          <Results />\r\n          <HitsWrapper>\r\n            <Index key={this.index} indexName={this.index}>\r\n              {showResults ? (\r\n                <>\r\n                  <Hits hitComponent={PageHit} />\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </Index>\r\n          </HitsWrapper>\r\n        </div>\r\n        {showResults && config.features.search.pagination.enabled ? (\r\n          <Pagination\r\n            totalPages={config.features.search.pagination.totalPages}\r\n            showPrevious={config.features.search.pagination.showPrevious}\r\n            showNext={config.features.search.pagination.showNext}\r\n          />\r\n        ) : null}\r\n        <Configure\r\n          hitsPerPage={config.features.search.hitsPerPage}\r\n          attributesToSnippet={[`excerpt:${config.features.search.snippetLength}`]}\r\n          snippetEllipsisText={'...'}\r\n        />\r\n      </InstantSearch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Algolia;\r\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\n\nvar SearchResults = require('./src/SearchResults');\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\n\n\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\n\n\nalgoliasearchHelper.version = require('./src/version.js');\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\n\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\n\nalgoliasearchHelper.SearchParameters = SearchParameters;\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\n\nalgoliasearchHelper.SearchResults = SearchResults;\nmodule.exports = algoliasearchHelper;","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar intersection = require('../functions/intersection');\n\nvar find = require('../functions/find');\n\nvar valToNumber = require('../functions/valToNumber');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar RefinementList = require('./RefinementList');\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\n\n\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (el, i) {\n      return isEqualNumericRefinement(b[i], el);\n    });\n  }\n\n  return a === b;\n}\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\n\n\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\n\n\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n\n  this.hierarchicalFacets = params.hierarchicalFacets || []; // Refinements\n\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\n\n\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\n\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n  var numbers = {};\n  var numberKeys = ['aroundPrecision', 'aroundRadius', 'getRankingInfo', 'minWordSizefor2Typos', 'minWordSizefor1Typo', 'page', 'maxValuesPerFacet', 'distinct', 'minimumAroundRadius', 'hitsPerPage', 'minProximity'];\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value); // global isNaN is ok to use here, value is only number or NaN\n\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  }); // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (geoRect) {\n      return geoRect.map(function (value) {\n        return parseFloat(value);\n      });\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\n\n\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      } // get it again in case it has been cleared\n\n\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n  return instance;\n};\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\n\n\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error('[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' + 'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error('[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' + 'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.numericFilters && params.numericRefinements && objectHasKeys(params.numericRefinements)) {\n    return new Error(\"[Numeric filters] Can't switch from the advanced to the managed API. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\"[Numeric filters] Can't switch from the managed API to the advanced. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(this.facetsRefinements, attribute, 'conjunctiveFacet'),\n      facetsExcludes: RefinementList.clearRefinement(this.facetsExcludes, attribute, 'exclude'),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')\n    };\n\n    if (patch.numericRefinements === this.numericRefinements && patch.facetsRefinements === this.facetsRefinements && patch.facetsExcludes === this.facetsExcludes && patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements && patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {\n      return this;\n    }\n\n    return this.setQueryParameters(patch);\n  },\n\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function addNumericRefinement(attribute, operator, v) {\n    var value = valToNumber(v);\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n    var mod = merge({}, this.numericRefinements);\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice(); // Add the element. Concat can't be used here because value can be an array.\n\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function getConjunctiveRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function getDisjunctiveRefinements(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function getHierarchicalRefinement(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function getExcludeRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function removeNumericRefinement(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator && isEqualNumericRefinement(value.val, valToNumber(paramValue));\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      })\n    });\n  },\n\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList[]} list of refinements\n   */\n  getNumericRefinements: function getNumericRefinements(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function getNumericRefinement(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      if (!objectHasKeys(this.numericRefinements[attribute])) {\n        return this.numericRefinements;\n      }\n\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function (memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n        operators = operators || {};\n        Object.keys(operators).forEach(function (operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function (value) {\n            var predicateResult = attribute({\n              val: value,\n              op: operator\n            }, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n\n          operatorList[operator] = outValues;\n        });\n        memo[key] = operatorList;\n        return memo;\n      }, {});\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error('Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      })\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet + '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined && this.hierarchicalFacetsRefinements[facet].length > 0 && ( // remove current refinement:\n    // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0] === value || // remove a parent refinement of the current refinement:\n    //  - refinement was 'beer > IPA > Flying dog'\n    //  - call is toggleRefine('beer > IPA')\n    //  - refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0);\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function addHierarchicalFacetRefinement(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function removeHierarchicalFacetRefinement(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function isDisjunctiveFacet(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function isHierarchicalFacet(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function isConjunctiveFacet(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined = this.numericRefinements[attribute] && this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined = findArray(this.numericRefinements[attribute][operator], parsedValue) !== undefined;\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this; // attributes used for numeric filter can also be disjunctive\n\n    var disjunctiveNumericRefinedFacets = intersection(Object.keys(this.numericRefinements).filter(function (facet) {\n      return Object.keys(self.numericRefinements[facet]).length > 0;\n    }), this.disjunctiveFacets);\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function (facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    }).concat(disjunctiveNumericRefinedFacets).concat(this.getRefinedHierarchicalFacets());\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection( // enforce the order between the two arrays,\n    // so that refinement name index === hierarchical facet index\n    this.hierarchicalFacets.map(function (facet) {\n      return facet.name;\n    }), Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n      return self.hierarchicalFacetsRefinements[facet].length > 0;\n    }));\n  },\n\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function getUnrefinedDisjunctiveFacets() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n  managedParameters: ['index', 'facets', 'disjunctiveFacets', 'facetsRefinements', 'facetsExcludes', 'disjunctiveFacetsRefinements', 'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n    var queryParams = {};\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n    return queryParams;\n  },\n\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n    var modification = {};\n    modification[parameter] = value;\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (previous, key) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n\n      if (isNextValueDefined) {\n        previous[key] = nextWithNumbers[key];\n      }\n\n      return previous;\n    }, previousPlainObject);\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function resetPage() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function _getHierarchicalFacetSortBy(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function _getHierarchicalFacetSeparator(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function _getHierarchicalRootPath(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function _getHierarchicalShowParentLevel(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function getHierarchicalFacetByName(hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function getHierarchicalFacetBreadcrumb(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facetName));\n\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n  toString: function toString() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\n\nmodule.exports = SearchParameters;","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return arr2.indexOf(value) > -1 && arr1.indexOf(value) === index\n    /* skips duplicates */\n    ;\n  });\n}\n\nmodule.exports = intersection;","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};","import React from 'react';\r\nimport { css } from '@emotion/core';\r\n\r\nconst spinner = css`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  position: relative;\r\n  margin: 0 auto;\r\n\r\n  .double-bounce1,\r\n  .double-bounce2 {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    background-color: #333;\r\n    opacity: 0.6;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    -webkit-animation: sk-bounce 2s infinite ease-in-out;\r\n    animation: sk-bounce 2s infinite ease-in-out;\r\n  }\r\n\r\n  .double-bounce2 {\r\n    -webkit-animation-delay: -1s;\r\n    animation-delay: -1s;\r\n  }\r\n\r\n  @-webkit-keyframes sk-bounce {\r\n    0%,\r\n    100% {\r\n      -webkit-transform: scale(0);\r\n    }\r\n    50% {\r\n      -webkit-transform: scale(1);\r\n    }\r\n  }\r\n\r\n  @keyframes sk-bounce {\r\n    0%,\r\n    100% {\r\n      transform: scale(0);\r\n      -webkit-transform: scale(0);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n      -webkit-transform: scale(1);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ ...props }) => (\r\n  <div css={spinner} {...props}>\r\n    <div className={'double-bounce1'}></div>\r\n    <div className={'double-bounce2'}></div>\r\n  </div>\r\n);","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { marginLeftRight } from './styles';\r\nimport Loading from '../Loader';\r\n\r\nconst queryToken = css`\r\n  font-weight: bold;\r\n  font-style: italic;\r\n  display: block;\r\n`;\r\n\r\nconst StatusWrapper = styled.div`\r\n  margin: 30px auto;\r\n  text-align: center;\r\n  line-height: 30px;\r\n  span {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst SearchStatus = ({ searching, noHits, query }) => {\r\n  let text = '';\r\n  if (searching) {\r\n    text = 'Searching...';\r\n  } else if (noHits) {\r\n    text = `No results found for `;\r\n  }\r\n  return text !== '' ? (\r\n    <div css={marginLeftRight}>\r\n      <StatusWrapper>\r\n        <span>{text}</span>\r\n        {noHits ? <span css={queryToken}>{query}</span> : ''}\r\n        {searching ? <Loading css={{ margin: '20px auto' }} /> : ''}\r\n      </StatusWrapper>\r\n    </div>\r\n  ) : (\r\n    ''\r\n  );\r\n};\r\n\r\nexport default SearchStatus;\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      ReflectApply(listeners[i], this, args);\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = _getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) {\n    list[index] = list[index + 1];\n  }\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;","'use strict'; // NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] !== undefined) {\n        acc[key] = source[key];\n      }\n    });\n    return acc;\n  }, {});\n};","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\n\nvar find = require('../functions/find');\n\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] && state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';\n\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);\n\n    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, hierarchicalFacetRefinement);\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null,\n      // root level, no count\n      isRefined: true,\n      // root level, always refined\n      path: null,\n      // root level, no path\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, currentRefinement) {\n  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    } // we found a refined parent, let's add current level data under it\n\n\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n      var picked = Object.keys(hierarchicalFacetResult.data).map(function (facetValue) {\n        return [facetValue, hierarchicalFacetResult.data[facetValue]];\n      }).filter(function (tuple) {\n        var facetValue = tuple[0];\n        return onlyMatchingTree(facetValue, parent.path || hierarchicalRootPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);\n      });\n      parent.data = orderBy(picked.map(function (tuple) {\n        var facetValue = tuple[0];\n        var facetCount = tuple[1];\n        return format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, hierarchicalFacetResult.exhaustive);\n      }), sortBy[0], sortBy[1]);\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(facetValue, parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (hierarchicalRootPath && (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {\n    return false;\n  } // we always want root levels (only when there is no prefix path)\n\n\n  return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 || // if there is a rootPath, being root level mean 1 level under rootPath\n  hierarchicalRootPath && facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 || // if current refinement is a root level and current facetValue is a root level,\n  // keep the facetValue\n  facetValue.indexOf(hierarchicalSeparator) === -1 && currentRefinement.indexOf(hierarchicalSeparator) === -1 || // currentRefinement is a child of the facet value\n  currentRefinement.indexOf(facetValue) === 0 || // facetValue is a child of the current parent, add it\n  facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 && (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);\n}\n\nfunction format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, exhaustive) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    count: facetCount,\n    isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;","'use strict'; // @MAJOR can be replaced by native Array#findIndex when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};","'use strict'; // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar orderBy = require('../functions/orderBy');\n\nvar compact = require('../functions/compact');\n\nvar find = require('../functions/find');\n\nvar findIndex = require('../functions/findIndex');\n\nvar formatSort = require('../functions/formatSort');\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\n\n\nfunction getIndices(attributes) {\n  var indices = {};\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\n\n\nfunction findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(hierarchicalFacet) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n/*eslint-disable */\n\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n\n/*eslint-enable */\n\n\nfunction SearchResults(state, results) {\n  var mainSubResponse = results[0];\n  this._rawResults = results;\n  /**\n   * query used to generate the results\n   * @member {string}\n   */\n\n  this.query = mainSubResponse.query;\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @member {string}\n   */\n\n  this.parsedQuery = mainSubResponse.parsedQuery;\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @member {object[]}\n   */\n\n  this.hits = mainSubResponse.hits;\n  /**\n   * index where the results come from\n   * @member {string}\n   */\n\n  this.index = mainSubResponse.index;\n  /**\n   * number of hits per page requested\n   * @member {number}\n   */\n\n  this.hitsPerPage = mainSubResponse.hitsPerPage;\n  /**\n   * total number of hits of this query on the index\n   * @member {number}\n   */\n\n  this.nbHits = mainSubResponse.nbHits;\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @member {number}\n   */\n\n  this.nbPages = mainSubResponse.nbPages;\n  /**\n   * current page\n   * @member {number}\n   */\n\n  this.page = mainSubResponse.page;\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined ? sum : sum + result.processingTimeMS;\n  }, 0);\n  /**\n   * The position if the position was guessed by IP.\n   * @member {string}\n   * @example \"48.8637,2.3615\",\n   */\n\n  this.aroundLatLng = mainSubResponse.aroundLatLng;\n  /**\n   * The radius computed by Algolia.\n   * @member {string}\n   * @example \"126792922\",\n   */\n\n  this.automaticRadius = mainSubResponse.automaticRadius;\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @member {string}\n   * @example \"c7-use-2.algolia.net\",\n   */\n\n  this.serverUsed = mainSubResponse.serverUsed;\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @member {boolean}\n   */\n\n  this.timeoutCounts = mainSubResponse.timeoutCounts;\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @member {boolean}\n   */\n\n  this.timeoutHits = mainSubResponse.timeoutHits;\n  /**\n   * True if the counts of the facets is exhaustive\n   * @member {boolean}\n   */\n\n  this.exhaustiveFacetsCount = mainSubResponse.exhaustiveFacetsCount;\n  /**\n   * True if the number of hits is exhaustive\n   * @member {boolean}\n   */\n\n  this.exhaustiveNbHits = mainSubResponse.exhaustiveNbHits;\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @member {object[]}\n   */\n\n  this.userData = mainSubResponse.userData;\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @member {string}\n   */\n\n  this.queryID = mainSubResponse.queryID;\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.facets = [];\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n  var self = this; // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(state.hierarchicalFacets, facetKey);\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  }); // Make sure we do not keep holes within the hierarchical facets\n\n  this.hierarchicalFacets = compact(this.hierarchicalFacets); // aggregate the refined disjunctive facets\n\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet); // There should be only item in facets.\n\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n          return f.attribute === dfacet;\n        }); // previous refinements and no results so not able to find it\n\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge({}, self.hierarchicalFacets[position][attributeIndex].data, facetResults);\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] && state.disjunctiveFacetsRefinements[dfacet].indexOf(refinementValue) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  }); // if we have some root level values for hierarchical facets, merge them\n\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n        return f.attribute === dfacet;\n      }); // previous refinements and no results so not able to find it\n\n      if (attributeIndex === -1) {\n        return;\n      } // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n\n\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(defaultData, facetResults, self.hierarchicalFacets[position][attributeIndex].data);\n    });\n    nextDisjunctiveResult++;\n  }); // add the excludes\n\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || {\n        name: facetName\n      };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n  /**\n   * @type {Array}\n   */\n\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n  /**\n   * @type {Array}\n   */\n\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n  this._state = state;\n}\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\n\n\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) || find(this.disjunctiveFacets, predicate) || find(this.hierarchicalFacets, predicate);\n};\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\n\n\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n    return Object.keys(facet.data).map(function (name) {\n      return {\n        name: name,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, name),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      return {\n        name: name,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n/**\n * Sort nodes of a hierarchical facet results\n * @private\n * @param {HierarchicalFacet} node node to upon which we want to apply the sort\n */\n\n\nfunction recSort(sortFn, node) {\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode);\n  });\n  var sortedChildren = sortFn(children);\n  var newNode = merge({}, node, {\n    data: sortedChildren\n  });\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\n\n\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT\n  });\n\n  if (Array.isArray(options.sortBy)) {\n    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n\n    if (Array.isArray(facetValues)) {\n      return orderBy(facetValues, order[0], order[1]);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (hierarchicalFacetValues) {\n      return orderBy(hierarchicalFacetValues, order[0], order[1]);\n    }, facetValues);\n  } else if (typeof options.sortBy === 'function') {\n    if (Array.isArray(facetValues)) {\n      return facetValues.sort(options.sortBy);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (data) {\n      return vanillaSortFn(options.sortBy, data);\n    }, facetValues);\n  }\n\n  throw new Error('options.sortBy is optional but if defined it must be ' + 'either an array of string (predicates) or a sorting function');\n};\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\n\n\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\n\n\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\n\n\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  var results = this;\n  var res = [];\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n  state.tagRefinements.forEach(function (name) {\n    res.push({\n      type: 'tag',\n      attributeName: '_tags',\n      name: name\n    });\n  });\n  return res;\n};\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet = intermediateFacet && find(intermediateFacet.data, function (f) {\n      return f.name === part;\n    });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n  var count = facet && facet.count || 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  var path = facet && facet.path || '';\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { paddingLeftRight } from './styles';\r\n\r\nconst topBottomPadding = css`\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nexport const HitsWrapper = styled.div`\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: auto;\r\n  z-index: 2;\r\n  -webkit-overflow-scrolling: touch;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  // @media only screen and (max-width: 991px) {\r\n  //   width: 400px;\r\n  //   max-width: 400px;\r\n  // }\r\n  // @media only screen and (max-width: 767px) {\r\n  //   width: 100%;\r\n  //   max-width: 500px;\r\n  // }\r\n  > * + * {\r\n    border-top: 2px solid ${(props) => props.theme.search.border};\r\n  }\r\n  li {\r\n    ${topBottomPadding};\r\n    ${paddingLeftRight};\r\n    &:hover {\r\n      background-color: ${(props) => props.theme.search.hover};\r\n      color: ${(props) => props.theme.search.font.hover};\r\n    }\r\n  }\r\n  li + li {\r\n    border-top: 1px solid ${(props) => props.theme.search.border};\r\n  }\r\n  * {\r\n    margin-top: 0;\r\n    color: ${(props) => props.theme.search.font.base};\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  mark {\r\n    color: ${(props) => props.theme.search.mark.font};\r\n    background: ${(props) => props.theme.search.mark.background};\r\n  }\r\n`;\r\n\r\nconst HitTitle = styled.div`\r\n  font-weight: bold;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst HitDetails = styled.div`\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Hit = ({ slug, title, details }) => (\r\n  <Link to={slug}>\r\n    <HitTitle>{title}</HitTitle>\r\n    <HitDetails>{details}</HitDetails>\r\n  </Link>\r\n);\r\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (!othIsNull && value > other || valIsNull && othIsDefined || !valIsDefined) {\n      return 1;\n    }\n\n    if (!valIsNull && value < other || othIsNull && valIsDefined || !othIsDefined) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\n\n\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n\n        return res;\n      }\n    } // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  });\n  return result.map(function (res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;"],"sourceRoot":""}