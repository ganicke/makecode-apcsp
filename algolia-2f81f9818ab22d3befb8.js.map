{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/algoliasearch-helper/src/requestBuilder.js","webpack:///./node_modules/algoliasearch-helper/src/version.js","webpack:///./node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack:///./node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/algoliasearch/dist/algoliasearch-lite.umd.js","webpack:///./node_modules/algoliasearch-helper/src/functions/merge.js","webpack:///./node_modules/algoliasearch-helper/src/functions/find.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/context.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createConnector.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/indexUtils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectStateResults.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createWidgetsManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/highlight.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createInstantSearchManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/version.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createStore.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/Index.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHits.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Hits.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Hits.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectConfigure.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/Configure.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectSearchBox.js","webpack:///./src/components/Search/algolia/input.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHighlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlighter.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Snippet.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Snippet.js","webpack:///./src/components/Search/algolia/hitComps.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectPagination.js","webpack:///./src/components/Search/algolia/pagination.js","webpack:///./src/components/Search/algolia/stats.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectStats.js","webpack:///./src/components/Search/algolia/index.js","webpack:///./node_modules/algoliasearch-helper/index.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/algoliasearch-helper/src/functions/inherits.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/intersection.js","webpack:///./node_modules/algoliasearch-helper/src/functions/compact.js","webpack:///./src/components/Loader/index.js","webpack:///./src/components/Search/Status.js","webpack:///./node_modules/node-libs-browser/node_modules/events/events.js","webpack:///./node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack:///./node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack:///./node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack:///./node_modules/algoliasearch-helper/src/functions/omit.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./src/components/Search/Hits.js","webpack:///./node_modules/algoliasearch-helper/src/functions/orderBy.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","merge","requestBuilder","_getQueries","index","state","queries","push","indexName","params","_getHitsSearchParams","getRefinedDisjunctiveFacets","forEach","refinedFacet","_getDisjunctiveFacetSearchParams","getRefinedHierarchicalFacets","hierarchicalFacet","getHierarchicalFacetByName","currentRefinement","getHierarchicalRefinement","separator","_getHierarchicalFacetSeparator","length","split","facets","concat","disjunctiveFacets","_getHitsHierarchicalFacetsAttributes","facetFilters","_getFacetFilters","numericFilters","_getNumericFilters","additionalParams","tagFilters","_getTagFilters","getQueryParams","facet","hierarchicalRootLevel","hitsPerPage","page","attributesToRetrieve","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","facetName","Object","keys","numericRefinements","attribute","operators","operator","values","value","Array","isArray","vs","map","v","tagRefinements","join","facetsRefinements","facetValue","facetsExcludes","disjunctiveFacetsRefinements","facetValues","orFilters","hierarchicalFacetsRefinements","undefined","attributeToRefine","attributesIndex","rootPath","_getHierarchicalRootPath","indexOf","slice","lastIndexOf","attributes","hierarchicalFacets","reduce","allAttributes","hierarchicalRefinement","name","level","newAttributes","rootLevel","attributeIndex","parentLevel","getSearchForFacetQuery","query","maxFacetHits","stateForSearchForFacetValues","isDisjunctiveFacet","clearRefinements","searchForFacetSearchParameters","facetQuery","module","exports","SearchParameters","SearchResults","DerivedHelper","events","inherits","objectHasKeys","version","AlgoliaSearchHelper","client","options","addAlgoliaAgent","this","setClient","opts","make","lastResults","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","Error","_change","setPage","isPageReset","getCurrentPage","EventEmitter","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","setQueryParameters","self","emit","then","content","results","_originalResponse","e","catch","err","searchForFacetValues","userState","clientHasSFFV","initIndex","isDisjunctive","algoliaQuery","facetHits","f","isRefined","isDisjunctiveFacetRefined","isFacetRefined","setQuery","q","resetPage","clearTags","addDisjunctiveFacetRefinement","addDisjunctiveRefine","apply","arguments","addHierarchicalFacetRefinement","addNumericRefinement","addFacetRefinement","addRefine","addFacetExclusion","addExcludeRefinement","addExclude","addTag","tag","addTagRefinement","removeNumericRefinement","removeDisjunctiveFacetRefinement","removeDisjunctiveRefine","removeHierarchicalFacetRefinement","removeFacetRefinement","removeRefine","removeFacetExclusion","removeExcludeRefinement","removeExclude","removeTag","removeTagRefinement","toggleFacetExclusion","toggleExcludeFacetRefinement","toggleExclude","toggleRefinement","toggleFacetRefinement","toggleRefine","toggleTag","toggleTagRefinement","nextPage","previousPage","setIndex","setQueryParameter","parameter","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","getNumericRefinements","isConjunctiveFacet","isHierarchicalFacet","isHierarchicalFacetRefined","isExcluded","isExcludeRefined","isDisjunctiveRefined","hasTag","isTagRefined","hasTagRefinements","getIndex","getPage","getTags","getRefinements","refinements","getConjunctiveRefinements","r","type","getExcludeRefinements","getDisjunctiveRefinements","getNumericRefinement","getHierarchicalFacetBreadcrumb","states","mainQueries","queriesCount","helper","derivedQueries","derivedHelper","derivedState","getModifiedState","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","error","s","specificResults","splice","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","fn","detachDerivedHelper","pos","hasPendingRequests","find","sortBy","defaults","defaultInstructions","sort","out","sortInstruction","matchingDefault","defaultInstruction","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","t","defineProperty","enumerable","configurable","writable","getOwnPropertySymbols","n","filter","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","toString","call","a","u","i","next","done","return","TypeError","from","key","localStorage","window","JSON","parse","getItem","get","miss","Promise","resolve","stringify","all","set","setItem","delete","clear","removeItem","caches","shift","serializable","c","Math","floor","random","l","replace","encodeURIComponent","h","d","data","entries","timeout","headers","queryParameters","cacheable","m","Read","Write","Any","y","status","lastUpdate","Date","now","b","protocol","url","accept","P","j","method","toLowerCase","userAgent","pop","message","transporterStackTrace","A","w","path","connectTimeout","timeouts","connect","responseTimeout","request","response","host","triesLeft","p","onSucess","onRetry","isTimedOut","logger","info","x","hostsCache","onFail","requester","send","getTimeout","statelessHosts","reverse","S","add","segment","T","charAt","substr","C","appId","authMode","apiKey","requestsCache","responsesCache","hosts","read","mappedRequestOptions","transporter","reject","write","methods","N","k","requests","J","propertyIsEnumerable","I","E","W","XMLHttpRequest","open","setRequestHeader","setTimeout","abort","onreadystatechange","readyState","OPENED","clearTimeout","onerror","responseText","onload","debug","console","multipleQueries","multipleSearchForFacetValues","isObjectOrArrayOrFunction","_merge","target","source","hasOwnProperty","sourceVal","targetVal","array","comparator","defaultsPure","omit","lib","addRefinement","refinementList","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","refinementType","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","refinementValueAsString","_possibleConstructorReturn","mainHelper","main","detach","removeAllListeners","parameters","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","_objectSpread","ownKeys","sym","shallowEqual","objA","objB","keysA","keysB","hasOwn","resolved","removeEmptyKey","object","sourceKeys","_key","_createContext","onInternalStateUpdate","createHrefForState","onSearchForFacetValues","onSearchStateChange","onSearchParameters","store","widgetsManager","mainTargetedIndex","InstantSearchConsumer","Consumer","InstantSearchProvider","Provider","_createContext2","IndexConsumer","IndexProvider","createConnector","connectorDesc","Composed","Connector","displayName","isWidget","getSearchParameters","getMetadata","transitionState","Component","_Component","props","_this","providedProps","getProvidedProps","_ref","_len","args","contextValue","refine","getState","widgets","_ref2","_len2","_key2","_ref3","_len3","_key3","ais","multiIndexContext","indexContextValue","_this2","unsubscribe","subscribe","isUnmounting","unregisterWidget","registerWidget","nextProps","nextState","shouldComponentUpdate","propsEqual","prevProps","update","cleanUp","_this$props$contextVa","resultsFacetValues","searching","searchingForFacetValues","isSearchStalled","metadata","searchResults","searchParameters","nextWidgetsState","prevWidgetsState","_this$props","refineProps","createURL","searchForFacetValuesProps","searchForItems","createElement","propTypes","defaultProps","createConnectorWithoutContext","getIndexId","context","hasMultipleIndices","targetedIndex","getResults","hits","indexId","refineValue","searchState","nextRefinement","namespace","_objectSpread4","indices","refineMultiIndexWithNamespace","refineMultiIndex","refineSingleIndexWithNamespace","refineSingleIndex","getNamespaceAndAttributeName","id","parts","match","attributeName","getCurrentRefinementValue","defaultValue","_getNamespaceAndAttri","multiIndex","defaultRefinement","cleanUpValue","_getNamespaceAndAttri2","Boolean","_ref4","indexSearchState","cleanUpValueWithMultiIndex","cleanUpValueWithSingleIndex","allSearchResults","createWidgetsManager","onWidgetsUpdate","scheduled","scheduleUpdate","widget","getWidgets","HIGHLIGHT_TAGS","highlightPreTag","highlightPostTag","parseHighlightedAttribute","preTag","postTag","_ref$highlightedValue","highlightedValue","splitByPreTag","firstValue","elements","isHighlighted","splitByPostTag","parseAlgoliaHit","_ref2$preTag","_ref2$postTag","highlightProperty","hit","highlightObject","current","item","addAlgoliaAgents","searchClient","isTargetedIndexEqualIndex","isIndexWidget","isIndexWidgetEqualIndex","sortIndexWidgetsFirst","firstWidget","secondWidget","isFirstWidgetIndex","isSecondWidgetIndex","serializeQueryParameters","format","encode","createInstantSearchManager","_ref$initialState","initialState","resultsState","stalledSearchDelay","on","stalledSearchTimer","_store$getState","partialState","handleSearchSuccess","handleSearchError","skip","initialSearchParameters","_cacheHydrated","_useCache","baseMethod","methodArgs","requestsWithSerializedParams","acc","result","rawResults","cache","hydrateSearchClientWithMultiIndexRequest","hydrateSearchClientWithSingleIndexRequest","hydrateSearchClient","listeners","listener","createStore","_internalIndexId","hydrateResultsState","sharedParameters","res","mainParameters","targetedIndexEqualMainIndex","subIndexEqualMainIndex","derivedIndices","targetedIndexNotEqualMainIndex","subIndexNotEqualMainIndex","derivedParameters","_getSearchParameters","isDerivedHelpersEmpty","getFacetByName","currentState","nextIsSearchStalled","getWidgetsIds","meta","_ref5","_ref5$maxFacetHits","maxFacetHitsWithinRange","max","min","_objectSpread7","onExternalStateUpdate","nextSearchState","updateClient","updateIndex","newIndex","skipSearch","isControlled","InstantSearch","instantSearchManager","onWidgetsInternalStateUpdate","prevState","nextIsControlled","previousSearchState","prevIsControlled","refresh","getKnownKeys","_searchState","count","children","string","isRequired","shape","func","bool","oneOfType","node","number","getIndexContext","Index","indexContext","inferredIndexId","queryID","__queryID","addQueryID","__position","block","prefix","suitElements","element","baseClassName","style","borderBottom","paddingBottom","marginBottom","wordBreak","objectID","connectHits","_ref$className","className","_ref$hitComponent","hitComponent","HitComponent","items","prevSearchState","propKeys","nonPresentKeys","_props","prop","subState","configureState","getCurrentRefinement","_refine","_cleanUp","label","connectSearchBox","rest","showClean","_ref$preTag","_ref$postTag","highlight","cx","highlightedTagName","nonHighlightedTagName","TagName","tagName","parsedHighlightedValue","isLast","connectHighlight","PageHit","_highlightResult","title","emoji","emojify","_snippetResult","excerpt","slug","details","parseInt","connectPagination","nbPages","canRefine","currentPage","connectStats","nbHits","processingTimeMS","Search","Root","Results","connectStateResults","noHits","Algolia","focus","algoliasearch","config","features","algoliaAppId","algoliaSearchKey","ref","createRef","inputRef","render","showResults","root","onFocus","flex","showStats","pagination","enabled","totalPages","showPrevious","showNext","Configure","snippetLength","snippetEllipsisText","React","algoliasearchHelper","_classCallCheck","instance","Constructor","ctor","superCtor","create","intersection","valToNumber","RefinementList","isEqualNumericRefinement","every","el","newParameters","_parseNumbers","paramName","isKeyKnown","PARAMETERS","isValueDefined","numbers","parsedValue","parseFloat","isNaN","insideBoundingBox","geoRect","parsedValues","vPrime","toggleHierarchicalFacetRefinement","validate","patch","_clearNumericRefinements","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","isNumericRefined","paramValue","op","val","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","disjunctiveNumericRefinedFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","queryParams","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","refinement","part","trim","arr1","arr2","spinner","css","queryToken","StatusWrapper","SearchStatus","text","marginLeftRight","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","getOwnPropertyNames","NumberIsNaN","Number","init","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","existing","warning","newListener","unshift","warned","String","emitter","warn","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","arg","RangeError","setMaxListeners","getMaxListeners","doError","er","handler","len","addListener","prependListener","once","prependOnceListener","list","position","originalListener","spliceOne","off","rawListeners","eventNames","_defineProperties","descriptor","_createClass","protoProps","staticProps","sources","reduceRight","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","subtree","picked","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","generateHierarchicalTree","compact","findIndex","formatSort","getIndices","idx","assignFacetStats","dest","facetStats","stats","mainSubResponse","_rawResults","parsedQuery","sum","aroundLatLng","automaticRadius","serverUsed","timeoutCounts","timeoutHits","exhaustiveFacetsCount","exhaustiveNbHits","userData","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","dataFromMainRequest","defaultData","excludes","_state","recSort","sortFn","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","resultsFacets","predicate","DEFAULT_SORT","getFacetValues","extractNormalizedFacetValues","order","hierarchicalFacetValues","vanillaSortFn","getFacetStats","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","_setPrototypeOf","_inherits","subClass","superClass","HitsWrapper","theme","border","paddingLeftRight","hover","font","base","mark","background","HitTitle","HitDetails","Hit","to","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee"],"mappings":"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","file":"algolia-2f81f9818ab22d3befb8.js","sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = []; // One query for the hits\n\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    }); // One for each disjunctive facets\n\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    }); // maybe more to get the root level of hierarchical facets when activated\n\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function _getHitsSearchParams(state) {\n    var facets = state.facets.concat(state.disjunctiveFacets).concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n\n    var numericFilters = requestBuilder._getNumericFilters(state);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      facets: facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function _getDisjunctiveFacetSearchParams(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, hierarchicalRootLevel);\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function _getNumericFilters(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function _getTagFilters(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function _getFacetFilters(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function (facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function (facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function (facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n\n      var orFilters = [];\n      facetValues.forEach(function (facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n      facetFilters.push(orFilters);\n    });\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function (facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeToRefine;\n      var attributesIndex; // we ask for parent facet values only when the `facet` is the current hierarchical facet\n\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || !rootPath && hierarchicalRootLevel === true || rootPath && rootPath.split(separator).length === facetValue.split(separator).length) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n    return facetFilters;\n  },\n  _getHitsHierarchicalFacetsAttributes: function _getHitsHierarchicalFacetsAttributes(state) {\n    var out = [];\n    return state.hierarchicalFacets.reduce( // ask for as much levels as there's hierarchical refinements\n    function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n      var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0]; // if no refinement, ask for root level\n\n      if (!hierarchicalRefinement) {\n        allAttributes.push(hierarchicalFacet.attributes[0]);\n        return allAttributes;\n      }\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var level = hierarchicalRefinement.split(separator).length;\n      var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n      return allAttributes.concat(newAttributes);\n    }, out);\n  },\n  _getDisjunctiveHierarchicalFacetAttribute: function _getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || ''; // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n  getSearchForFacetQuery: function getSearchForFacetQuery(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ? state.clearRefinements(facetName) : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n\n    return merge({}, requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);\n  }\n};\nmodule.exports = requestBuilder;","'use strict';\n\nmodule.exports = '3.1.1';","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\n\nvar SearchResults = require('./SearchResults');\n\nvar DerivedHelper = require('./DerivedHelper');\n\nvar requestBuilder = require('./requestBuilder');\n\nvar events = require('events');\n\nvar inherits = require('./functions/inherits');\n\nvar objectHasKeys = require('./functions/objectHasKeys');\n\nvar version = require('./version');\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\n\n\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, events.EventEmitter);\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({\n    onlyWithDerivedHelpers: false\n  });\n\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({\n    onlyWithDerivedHelpers: true\n  });\n\n  return this;\n};\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\n\n\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\n\n\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n\n  var self = this;\n  this._currentNbQueries++;\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client.search(queries).then(function (content) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(null, new SearchResults(tempState, content.results), tempState);\n    }).catch(function (err) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(err, null, tempState);\n    });\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function (content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\n\n\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n\n  if (!clientHasSFFV && typeof this.client.initIndex !== 'function') {\n    throw new Error('search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues');\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n  this._currentNbQueries++;\n  var self = this;\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n  var searchForFacetValuesPromise = clientHasSFFV ? this.client.searchForFacetValues([{\n    indexName: state.index,\n    params: algoliaQuery\n  }]) : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    content = Array.isArray(content) ? content[0] : content;\n    content.facetHits.forEach(function (f) {\n      f.isRefined = isDisjunctive ? state.isDisjunctiveFacetRefined(facet, f.value) : state.isFacetRefined(facet, f.value);\n    });\n    return content;\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\n\n\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\n\n\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\n\n\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\n\n\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n/**\n * @private\n */\n\n\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\n\n\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function (newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\n\n\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  } // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n\n\n  return false;\n};\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\n\n\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\n\n\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\n\n\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\n\n\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\n\n\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\n\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\n\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\n\n\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n    disjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n  return refinements;\n};\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\n\n\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\n\n\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n}; // /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\n\n\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n    return derivedStateQueries;\n  });\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries).then(this._dispatchAlgoliaResponse.bind(this, states, queryId)).catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\n\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n  var results = content.results.slice();\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  this.emit('error', {\n    error: error\n  });\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function (query, facetFilters, numericFilters, tagFilters) {\n  return query || facetFilters.length !== 0 || numericFilters.length !== 0 || tagFilters.length !== 0;\n};\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return this.state.disjunctiveRefinements[facet] && this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.client = newClient;\n  return this;\n};\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\n\n\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.derive = function (fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\n\n\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\n\n\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\n\nmodule.exports = AlgoliaSearchHelper;","'use strict';\n\nvar find = require('./find');\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\n\n\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n  return sortBy.reduce(function preparePredicate(out, sort) {\n    var sortInstruction = sort.split(':');\n    var matchingDefault = find(defaultInstructions, function (defaultInstruction) {\n      return defaultInstruction[0] === sortInstruction[0];\n    });\n\n    if (sortInstruction.length > 1 || !matchingDefault) {\n      out[0].push(sortInstruction[0]);\n      out[1].push(sortInstruction[1]);\n      return out;\n    }\n\n    out[0].push(matchingDefault[0]);\n    out[1].push(matchingDefault[1]);\n    return out;\n  }, [[], []]);\n};","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","/*! algoliasearch-lite.umd.js | 4.4.0 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self).algoliasearch = t();\n}(this, function () {\n  \"use strict\";\n\n  function e(e, t, r) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = r, e;\n  }\n\n  function t(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function r(r) {\n    for (var n = 1; n < arguments.length; n++) {\n      var o = null != arguments[n] ? arguments[n] : {};\n      n % 2 ? t(Object(o), !0).forEach(function (t) {\n        e(r, t, o[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(o)) : t(Object(o)).forEach(function (e) {\n        Object.defineProperty(r, e, Object.getOwnPropertyDescriptor(o, e));\n      });\n    }\n\n    return r;\n  }\n\n  function n(e, t) {\n    if (null == e) return {};\n\n    var r,\n        n,\n        o = function (e, t) {\n      if (null == e) return {};\n      var r,\n          n,\n          o = {},\n          a = Object.keys(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n      }\n\n      return o;\n    }(e, t);\n\n    if (Object.getOwnPropertySymbols) {\n      var a = Object.getOwnPropertySymbols(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n      }\n    }\n\n    return o;\n  }\n\n  function o(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          n = !0,\n          o = !1,\n          a = void 0;\n\n      try {\n        for (var u, i = e[Symbol.iterator](); !(n = (u = i.next()).done) && (r.push(u.value), !t || r.length !== t); n = !0) {\n          ;\n        }\n      } catch (e) {\n        o = !0, a = e;\n      } finally {\n        try {\n          n || null == i.return || i.return();\n        } finally {\n          if (o) throw a;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  function a(e) {\n    return function (e) {\n      if (Array.isArray(e)) {\n        for (var t = 0, r = new Array(e.length); t < e.length; t++) {\n          r[t] = e[t];\n        }\n\n        return r;\n      }\n    }(e) || function (e) {\n      if (Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e)) return Array.from(e);\n    }(e) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }();\n  }\n\n  function u(e) {\n    var t,\n        r = \"algoliasearch-client-js-\".concat(e.key),\n        n = function n() {\n      return void 0 === t && (t = e.localStorage || window.localStorage), t;\n    },\n        a = function a() {\n      return JSON.parse(n().getItem(r) || \"{}\");\n    };\n\n    return {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return Promise.resolve().then(function () {\n          var r = JSON.stringify(e),\n              n = a()[r];\n          return Promise.all([n || t(), void 0 !== n]);\n        }).then(function (e) {\n          var t = o(e, 2),\n              n = t[0],\n              a = t[1];\n          return Promise.all([n, a || r.miss(n)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve().then(function () {\n          var o = a();\n          return o[JSON.stringify(e)] = t, n().setItem(r, JSON.stringify(o)), t;\n        });\n      },\n      delete: function _delete(e) {\n        return Promise.resolve().then(function () {\n          var t = a();\n          delete t[JSON.stringify(e)], n().setItem(r, JSON.stringify(t));\n        });\n      },\n      clear: function clear() {\n        return Promise.resolve().then(function () {\n          n().removeItem(r);\n        });\n      }\n    };\n  }\n\n  function i(e) {\n    var t = a(e.caches),\n        r = t.shift();\n    return void 0 === r ? {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            n = t();\n        return n.then(function (e) {\n          return Promise.all([e, r.miss(e)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve(t);\n      },\n      delete: function _delete(e) {\n        return Promise.resolve();\n      },\n      clear: function clear() {\n        return Promise.resolve();\n      }\n    } : {\n      get: function get(e, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return r.get(e, n, o).catch(function () {\n          return i({\n            caches: t\n          }).get(e, n, o);\n        });\n      },\n      set: function set(e, n) {\n        return r.set(e, n).catch(function () {\n          return i({\n            caches: t\n          }).set(e, n);\n        });\n      },\n      delete: function _delete(e) {\n        return r.delete(e).catch(function () {\n          return i({\n            caches: t\n          }).delete(e);\n        });\n      },\n      clear: function clear() {\n        return r.clear().catch(function () {\n          return i({\n            caches: t\n          }).clear();\n        });\n      }\n    };\n  }\n\n  function s() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {\n      serializable: !0\n    },\n        t = {};\n    return {\n      get: function get(r, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            a = JSON.stringify(r);\n        if (a in t) return Promise.resolve(e.serializable ? JSON.parse(t[a]) : t[a]);\n\n        var u = n(),\n            i = o && o.miss || function () {\n          return Promise.resolve();\n        };\n\n        return u.then(function (e) {\n          return i(e);\n        }).then(function () {\n          return u;\n        });\n      },\n      set: function set(r, n) {\n        return t[JSON.stringify(r)] = e.serializable ? JSON.stringify(n) : n, Promise.resolve(n);\n      },\n      delete: function _delete(e) {\n        return delete t[JSON.stringify(e)], Promise.resolve();\n      },\n      clear: function clear() {\n        return t = {}, Promise.resolve();\n      }\n    };\n  }\n\n  function c(e) {\n    for (var t = e.length - 1; t > 0; t--) {\n      var r = Math.floor(Math.random() * (t + 1)),\n          n = e[t];\n      e[t] = e[r], e[r] = n;\n    }\n\n    return e;\n  }\n\n  function l(e, t) {\n    return Object.keys(void 0 !== t ? t : {}).forEach(function (r) {\n      e[r] = t[r](e);\n    }), e;\n  }\n\n  function f(e) {\n    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {\n      r[n - 1] = arguments[n];\n    }\n\n    var o = 0;\n    return e.replace(/%s/g, function () {\n      return encodeURIComponent(r[o++]);\n    });\n  }\n\n  var h = {\n    WithinQueryParameters: 0,\n    WithinHeaders: 1\n  };\n\n  function d(e, t) {\n    var r = e || {},\n        n = r.data || {};\n    return Object.keys(r).forEach(function (e) {\n      -1 === [\"timeout\", \"headers\", \"queryParameters\", \"data\", \"cacheable\"].indexOf(e) && (n[e] = r[e]);\n    }), {\n      data: Object.entries(n).length > 0 ? n : void 0,\n      timeout: r.timeout || t,\n      headers: r.headers || {},\n      queryParameters: r.queryParameters || {},\n      cacheable: r.cacheable\n    };\n  }\n\n  var m = {\n    Read: 1,\n    Write: 2,\n    Any: 3\n  },\n      p = 1,\n      v = 2,\n      g = 3;\n\n  function y(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p;\n    return r({}, e, {\n      status: t,\n      lastUpdate: Date.now()\n    });\n  }\n\n  function b(e) {\n    return {\n      protocol: e.protocol || \"https\",\n      url: e.url,\n      accept: e.accept || m.Any\n    };\n  }\n\n  var O = \"GET\",\n      P = \"POST\";\n\n  function q(e, t) {\n    return Promise.all(t.map(function (t) {\n      return e.get(t, function () {\n        return Promise.resolve(y(t));\n      });\n    })).then(function (e) {\n      var r = e.filter(function (e) {\n        return function (e) {\n          return e.status === p || Date.now() - e.lastUpdate > 12e4;\n        }(e);\n      }),\n          n = e.filter(function (e) {\n        return function (e) {\n          return e.status === g && Date.now() - e.lastUpdate <= 12e4;\n        }(e);\n      }),\n          o = [].concat(a(r), a(n));\n      return {\n        getTimeout: function getTimeout(e, t) {\n          return (0 === n.length && 0 === e ? 1 : n.length + 3 + e) * t;\n        },\n        statelessHosts: o.length > 0 ? o.map(function (e) {\n          return b(e);\n        }) : t\n      };\n    });\n  }\n\n  function j(e, t, n, o) {\n    var u = [],\n        i = function (e, t) {\n      if (e.method === O || void 0 === e.data && void 0 === t.data) return;\n      var n = Array.isArray(e.data) ? e.data : r({}, e.data, {}, t.data);\n      return JSON.stringify(n);\n    }(n, o),\n        s = function (e, t) {\n      var n = r({}, e.headers, {}, t.headers),\n          o = {};\n      return Object.keys(n).forEach(function (e) {\n        var t = n[e];\n        o[e.toLowerCase()] = t;\n      }), o;\n    }(e, o),\n        c = n.method,\n        l = n.method !== O ? {} : r({}, n.data, {}, o.data),\n        f = r({\n      \"x-algolia-agent\": e.userAgent.value\n    }, e.queryParameters, {}, l, {}, o.queryParameters),\n        h = 0,\n        d = function t(r, a) {\n      var l = r.pop();\n      if (void 0 === l) throw {\n        name: \"RetryError\",\n        message: \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n        transporterStackTrace: A(u)\n      };\n\n      var d = {\n        data: i,\n        headers: s,\n        method: c,\n        url: w(l, n.path, f),\n        connectTimeout: a(h, e.timeouts.connect),\n        responseTimeout: a(h, o.timeout)\n      },\n          m = function m(e) {\n        var t = {\n          request: d,\n          response: e,\n          host: l,\n          triesLeft: r.length\n        };\n        return u.push(t), t;\n      },\n          p = {\n        onSucess: function onSucess(e) {\n          return function (e) {\n            try {\n              return JSON.parse(e.content);\n            } catch (t) {\n              throw function (e, t) {\n                return {\n                  name: \"DeserializationError\",\n                  message: e,\n                  response: t\n                };\n              }(t.message, e);\n            }\n          }(e);\n        },\n        onRetry: function onRetry(n) {\n          var o = m(n);\n          return n.isTimedOut && h++, Promise.all([e.logger.info(\"Retryable failure\", x(o)), e.hostsCache.set(l, y(l, n.isTimedOut ? g : v))]).then(function () {\n            return t(r, a);\n          });\n        },\n        onFail: function onFail(e) {\n          throw m(e), function (e, t) {\n            var r = e.content,\n                n = e.status,\n                o = r;\n\n            try {\n              o = JSON.parse(r).message;\n            } catch (e) {}\n\n            return function (e, t, r) {\n              return {\n                name: \"ApiError\",\n                message: e,\n                status: t,\n                transporterStackTrace: r\n              };\n            }(o, n, t);\n          }(e, A(u));\n        }\n      };\n\n      return e.requester.send(d).then(function (e) {\n        return function (e, t) {\n          return function (e) {\n            var t = e.status;\n            return e.isTimedOut || function (e) {\n              var t = e.isTimedOut,\n                  r = e.status;\n              return !t && 0 == ~~r;\n            }(e) || 2 != ~~(t / 100) && 4 != ~~(t / 100);\n          }(e) ? t.onRetry(e) : 2 == ~~(e.status / 100) ? t.onSucess(e) : t.onFail(e);\n        }(e, p);\n      });\n    };\n\n    return q(e.hostsCache, t).then(function (e) {\n      return d(a(e.statelessHosts).reverse(), e.getTimeout);\n    });\n  }\n\n  function S(e) {\n    var t = {\n      value: \"Algolia for JavaScript (\".concat(e, \")\"),\n      add: function add(e) {\n        var r = \"; \".concat(e.segment).concat(void 0 !== e.version ? \" (\".concat(e.version, \")\") : \"\");\n        return -1 === t.value.indexOf(r) && (t.value = \"\".concat(t.value).concat(r)), t;\n      }\n    };\n    return t;\n  }\n\n  function w(e, t, r) {\n    var n = T(r),\n        o = \"\".concat(e.protocol, \"://\").concat(e.url, \"/\").concat(\"/\" === t.charAt(0) ? t.substr(1) : t);\n    return n.length && (o += \"?\".concat(n)), o;\n  }\n\n  function T(e) {\n    return Object.keys(e).map(function (t) {\n      return f(\"%s=%s\", t, (r = e[t], \"[object Object]\" === Object.prototype.toString.call(r) || \"[object Array]\" === Object.prototype.toString.call(r) ? JSON.stringify(e[t]) : e[t]));\n      var r;\n    }).join(\"&\");\n  }\n\n  function A(e) {\n    return e.map(function (e) {\n      return x(e);\n    });\n  }\n\n  function x(e) {\n    var t = e.request.headers[\"x-algolia-api-key\"] ? {\n      \"x-algolia-api-key\": \"*****\"\n    } : {};\n    return r({}, e, {\n      request: r({}, e.request, {\n        headers: r({}, e.request.headers, {}, t)\n      })\n    });\n  }\n\n  var C = function C(e) {\n    var t = e.appId,\n        n = function (e, t, r) {\n      var n = {\n        \"x-algolia-api-key\": r,\n        \"x-algolia-application-id\": t\n      };\n      return {\n        headers: function headers() {\n          return e === h.WithinHeaders ? n : {};\n        },\n        queryParameters: function queryParameters() {\n          return e === h.WithinQueryParameters ? n : {};\n        }\n      };\n    }(void 0 !== e.authMode ? e.authMode : h.WithinHeaders, t, e.apiKey),\n        a = function (e) {\n      var t = e.hostsCache,\n          r = e.logger,\n          n = e.requester,\n          a = e.requestsCache,\n          u = e.responsesCache,\n          i = e.timeouts,\n          s = e.userAgent,\n          c = e.hosts,\n          l = e.queryParameters,\n          f = {\n        hostsCache: t,\n        logger: r,\n        requester: n,\n        requestsCache: a,\n        responsesCache: u,\n        timeouts: i,\n        userAgent: s,\n        headers: e.headers,\n        queryParameters: l,\n        hosts: c.map(function (e) {\n          return b(e);\n        }),\n        read: function read(e, t) {\n          var r = d(t, f.timeouts.read),\n              n = function n() {\n            return j(f, f.hosts.filter(function (e) {\n              return 0 != (e.accept & m.Read);\n            }), e, r);\n          };\n\n          if (!0 !== (void 0 !== r.cacheable ? r.cacheable : e.cacheable)) return n();\n          var a = {\n            request: e,\n            mappedRequestOptions: r,\n            transporter: {\n              queryParameters: f.queryParameters,\n              headers: f.headers\n            }\n          };\n          return f.responsesCache.get(a, function () {\n            return f.requestsCache.get(a, function () {\n              return f.requestsCache.set(a, n()).then(function (e) {\n                return Promise.all([f.requestsCache.delete(a), e]);\n              }, function (e) {\n                return Promise.all([f.requestsCache.delete(a), Promise.reject(e)]);\n              }).then(function (e) {\n                var t = o(e, 2);\n                t[0];\n                return t[1];\n              });\n            });\n          }, {\n            miss: function miss(e) {\n              return f.responsesCache.set(a, e);\n            }\n          });\n        },\n        write: function write(e, t) {\n          return j(f, f.hosts.filter(function (e) {\n            return 0 != (e.accept & m.Write);\n          }), e, d(t, f.timeouts.write));\n        }\n      };\n      return f;\n    }(r({\n      hosts: [{\n        url: \"\".concat(t, \"-dsn.algolia.net\"),\n        accept: m.Read\n      }, {\n        url: \"\".concat(t, \".algolia.net\"),\n        accept: m.Write\n      }].concat(c([{\n        url: \"\".concat(t, \"-1.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-2.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-3.algolianet.com\")\n      }]))\n    }, e, {\n      headers: r({}, n.headers(), {}, {\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }, {}, e.headers),\n      queryParameters: r({}, n.queryParameters(), {}, e.queryParameters)\n    }));\n\n    return l({\n      transporter: a,\n      appId: t,\n      addAlgoliaAgent: function addAlgoliaAgent(e, t) {\n        a.userAgent.add({\n          segment: e,\n          version: t\n        });\n      },\n      clearCache: function clearCache() {\n        return Promise.all([a.requestsCache.clear(), a.responsesCache.clear()]).then(function () {});\n      }\n    }, e.methods);\n  },\n      N = function N(e) {\n    return function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = {\n        transporter: e.transporter,\n        appId: e.appId,\n        indexName: t\n      };\n      return l(n, r.methods);\n    };\n  },\n      k = function k(e) {\n    return function (t, n) {\n      var o = t.map(function (e) {\n        return r({}, e, {\n          params: T(e.params || {})\n        });\n      });\n      return e.transporter.read({\n        method: P,\n        path: \"1/indexes/*/queries\",\n        data: {\n          requests: o\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      J = function J(e) {\n    return function (t, o) {\n      return Promise.all(t.map(function (t) {\n        var a = t.params,\n            u = a.facetName,\n            i = a.facetQuery,\n            s = n(a, [\"facetName\", \"facetQuery\"]);\n        return N(e)(t.indexName, {\n          methods: {\n            searchForFacetValues: I\n          }\n        }).searchForFacetValues(u, i, r({}, o, {}, s));\n      }));\n    };\n  },\n      E = function E(e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/query\", e.indexName),\n        data: {\n          query: t\n        },\n        cacheable: !0\n      }, r);\n    };\n  },\n      I = function I(e) {\n    return function (t, r, n) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/facets/%s/query\", e.indexName, t),\n        data: {\n          facetQuery: r\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      F = 1,\n      R = 2,\n      D = 3;\n\n  function W(e, t, n) {\n    var o,\n        a = {\n      appId: e,\n      apiKey: t,\n      timeouts: {\n        connect: 1,\n        read: 2,\n        write: 30\n      },\n      requester: {\n        send: function send(e) {\n          return new Promise(function (t) {\n            var r = new XMLHttpRequest();\n            r.open(e.method, e.url, !0), Object.keys(e.headers).forEach(function (t) {\n              return r.setRequestHeader(t, e.headers[t]);\n            });\n\n            var n,\n                o = function o(e, n) {\n              return setTimeout(function () {\n                r.abort(), t({\n                  status: 0,\n                  content: n,\n                  isTimedOut: !0\n                });\n              }, 1e3 * e);\n            },\n                a = o(e.connectTimeout, \"Connection timeout\");\n\n            r.onreadystatechange = function () {\n              r.readyState > r.OPENED && void 0 === n && (clearTimeout(a), n = o(e.responseTimeout, \"Socket timeout\"));\n            }, r.onerror = function () {\n              0 === r.status && (clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText || \"Network request failed\",\n                status: r.status,\n                isTimedOut: !1\n              }));\n            }, r.onload = function () {\n              clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText,\n                status: r.status,\n                isTimedOut: !1\n              });\n            }, r.send(e.data);\n          });\n        }\n      },\n      logger: (o = D, {\n        debug: function debug(e, t) {\n          return F >= o && console.debug(e, t), Promise.resolve();\n        },\n        info: function info(e, t) {\n          return R >= o && console.info(e, t), Promise.resolve();\n        },\n        error: function error(e, t) {\n          return console.error(e, t), Promise.resolve();\n        }\n      }),\n      responsesCache: s(),\n      requestsCache: s({\n        serializable: !1\n      }),\n      hostsCache: i({\n        caches: [u({\n          key: \"\".concat(\"4.4.0\", \"-\").concat(e)\n        }), s()]\n      }),\n      userAgent: S(\"4.4.0\").add({\n        segment: \"Browser\",\n        version: \"lite\"\n      }),\n      authMode: h.WithinQueryParameters\n    };\n    return C(r({}, a, {}, n, {\n      methods: {\n        search: k,\n        searchForFacetValues: J,\n        multipleQueries: k,\n        multipleSearchForFacetValues: J,\n        initIndex: function initIndex(e) {\n          return function (t) {\n            return N(e)(t, {\n              methods: {\n                search: E,\n                searchForFacetValues: I\n              }\n            });\n          };\n        }\n      }\n    }));\n  }\n\n  return W.version = \"4.4.0\", W;\n});","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return typeof value === 'function' || Array.isArray(value) || Object.prototype.toString.call(value) === '[object Object]';\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n\n  return target;\n}\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = merge;","'use strict'; // @MAJOR can be replaced by native Array#find when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};","'use strict';\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n    var facetRefinement = !refinementList[attribute] ? [valueAsString] : refinementList[attribute].concat(valueAsString);\n    var mod = {};\n    mod[attribute] = facetRefinement;\n    return defaultsPure({}, mod, refinementList);\n  },\n\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var newRefinementList = Object.keys(refinementList).reduce(function (memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n\n        memo[key] = facetList;\n        return memo;\n      }, {});\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] && refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\nmodule.exports = lib;","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","'use strict';\n\nvar events = require('events');\n\nvar inherits = require('../functions/inherits');\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\n\n\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, events.EventEmitter);\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\n\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\"; // From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js\n\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nexport var getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'UnknownComponent';\n};\nvar resolved = Promise.resolve();\nexport var defer = function defer(f) {\n  resolved.then(f);\n};\n\nvar isPlainObject = function isPlainObject(value) {\n  return _typeof(value) === 'object' && value !== null && !Array.isArray(value);\n};\n\nexport var removeEmptyKey = function removeEmptyKey(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (!isPlainObject(value)) {\n      return;\n    }\n\n    if (!objectHasKeys(value)) {\n      delete obj[key];\n    } else {\n      removeEmptyKey(value);\n    }\n  });\n  return obj;\n};\nexport var removeEmptyArraysFromObject = function removeEmptyArraysFromObject(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (Array.isArray(value) && value.length === 0) {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\nexport function addAbsolutePositions(hits, hitsPerPage, page) {\n  return hits.map(function (hit, index) {\n    return _objectSpread({}, hit, {\n      __position: hitsPerPage * page + index + 1\n    });\n  });\n}\nexport function addQueryID(hits, queryID) {\n  if (!queryID) {\n    return hits;\n  }\n\n  return hits.map(function (hit) {\n    return _objectSpread({}, hit, {\n      __queryID: queryID\n    });\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}\nexport function objectHasKeys(object) {\n  return object && Object.keys(object).length > 0;\n} // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nexport function omit(source, excluded) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n\n  var target = {};\n  var sourceKeys = Object.keys(source);\n\n  for (var i = 0; i < sourceKeys.length; i++) {\n    var _key = sourceKeys[i];\n\n    if (excluded.indexOf(_key) >= 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    target[_key] = source[_key];\n  }\n\n  return target;\n}\n/**\n * Retrieve the value at a path of the object:\n *\n * @example\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   'test.this.function[0].now.everyone'\n * ); // true\n *\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   ['test', 'this', 'function', 0, 'now', 'everyone']\n * ); // true\n *\n * @param object Source object to query\n * @param path either an array of properties, or a string form of the properties, separated by .\n */\n\nexport var getPropertyByPath = function getPropertyByPath(object, path) {\n  return (Array.isArray(path) ? path : path.replace(/\\[(\\d+)]/g, '.$1').split('.')).reduce(function (current, key) {\n    return current ? current[key] : undefined;\n  }, object);\n};\nexport function getObjectType(object) {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}","import { createContext } from 'react';\n\nvar _createContext = createContext({\n  onInternalStateUpdate: function onInternalStateUpdate() {\n    return undefined;\n  },\n  createHrefForState: function createHrefForState() {\n    return '#';\n  },\n  onSearchForFacetValues: function onSearchForFacetValues() {\n    return undefined;\n  },\n  onSearchStateChange: function onSearchStateChange() {\n    return undefined;\n  },\n  onSearchParameters: function onSearchParameters() {\n    return undefined;\n  },\n  store: {},\n  widgetsManager: {},\n  mainTargetedIndex: ''\n}),\n    InstantSearchConsumer = _createContext.Consumer,\n    InstantSearchProvider = _createContext.Provider;\n\nexport { InstantSearchConsumer, InstantSearchProvider };\n\nvar _createContext2 = createContext(undefined),\n    IndexConsumer = _createContext2.Consumer,\n    IndexProvider = _createContext2.Provider;\n\nexport { IndexConsumer, IndexProvider };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { shallowEqual, getDisplayName, removeEmptyKey } from './utils';\nimport { InstantSearchConsumer, IndexConsumer } from './context';\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\n\nexport function createConnectorWithoutContext(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n\n  var isWidget = typeof connectorDesc.getSearchParameters === 'function' || typeof connectorDesc.getMetadata === 'function' || typeof connectorDesc.transitionState === 'function';\n  return function (Composed) {\n    var Connector = /*#__PURE__*/function (_Component) {\n      _inherits(Connector, _Component);\n\n      function Connector(props) {\n        var _this;\n\n        _classCallCheck(this, Connector);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this, props));\n\n        _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n        _defineProperty(_assertThisInitialized(_this), \"state\", {\n          providedProps: _this.getProvidedProps(_this.props)\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"refine\", function () {\n          var _ref;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this.props.contextValue.onInternalStateUpdate( // refine will always be defined here because the prop is only given conditionally\n          (_ref = connectorDesc.refine).call.apply(_ref, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"createURL\", function () {\n          var _ref2;\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return _this.props.contextValue.createHrefForState( // refine will always be defined here because the prop is only given conditionally\n          (_ref2 = connectorDesc.refine).call.apply(_ref2, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"searchForFacetValues\", function () {\n          var _ref3;\n\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          _this.props.contextValue.onSearchForFacetValues( // searchForFacetValues will always be defined here because the prop is only given conditionally\n          (_ref3 = connectorDesc.searchForFacetValues).call.apply(_ref3, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        if (connectorDesc.getSearchParameters) {\n          _this.props.contextValue.onSearchParameters(connectorDesc.getSearchParameters.bind(_assertThisInitialized(_this)), {\n            ais: _this.props.contextValue,\n            multiIndexContext: _this.props.indexContextValue\n          }, _this.props);\n        }\n\n        return _this;\n      }\n\n      _createClass(Connector, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this.unsubscribe = this.props.contextValue.store.subscribe(function () {\n            if (!_this2.isUnmounting) {\n              _this2.setState({\n                providedProps: _this2.getProvidedProps(_this2.props)\n              });\n            }\n          });\n\n          if (isWidget) {\n            this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (typeof connectorDesc.shouldComponentUpdate === 'function') {\n            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);\n          }\n\n          var propsEqual = shallowEqual(this.props, nextProps);\n\n          if (this.state.providedProps === null || nextState.providedProps === null) {\n            if (this.state.providedProps === nextState.providedProps) {\n              return !propsEqual;\n            }\n\n            return true;\n          }\n\n          return !propsEqual || !shallowEqual(this.state.providedProps, nextState.providedProps);\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!isEqual(prevProps, this.props)) {\n            this.setState({\n              providedProps: this.getProvidedProps(this.props)\n            });\n\n            if (isWidget) {\n              this.props.contextValue.widgetsManager.update();\n\n              if (typeof connectorDesc.transitionState === 'function') {\n                this.props.contextValue.onSearchStateChange(connectorDesc.transitionState.call(this, this.props, this.props.contextValue.store.getState().widgets, this.props.contextValue.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.isUnmounting = true;\n\n          if (this.unsubscribe) {\n            this.unsubscribe();\n          }\n\n          if (this.unregisterWidget) {\n            this.unregisterWidget();\n\n            if (typeof connectorDesc.cleanUp === 'function') {\n              var nextState = connectorDesc.cleanUp.call(this, this.props, this.props.contextValue.store.getState().widgets);\n              this.props.contextValue.store.setState(_objectSpread({}, this.props.contextValue.store.getState(), {\n                widgets: nextState\n              }));\n              this.props.contextValue.onSearchStateChange(removeEmptyKey(nextState));\n            }\n          }\n        }\n      }, {\n        key: \"getProvidedProps\",\n        value: function getProvidedProps(props) {\n          var _this$props$contextVa = this.props.contextValue.store.getState(),\n              widgets = _this$props$contextVa.widgets,\n              results = _this$props$contextVa.results,\n              resultsFacetValues = _this$props$contextVa.resultsFacetValues,\n              searching = _this$props$contextVa.searching,\n              searchingForFacetValues = _this$props$contextVa.searchingForFacetValues,\n              isSearchStalled = _this$props$contextVa.isSearchStalled,\n              metadata = _this$props$contextVa.metadata,\n              error = _this$props$contextVa.error;\n\n          var searchResults = {\n            results: results,\n            searching: searching,\n            searchingForFacetValues: searchingForFacetValues,\n            isSearchStalled: isSearchStalled,\n            error: error\n          };\n          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata, // @MAJOR: move this attribute on the `searchResults` it doesn't\n          // makes sense to have it into a separate argument. The search\n          // flags are on the object why not the results?\n          resultsFacetValues);\n        }\n      }, {\n        key: \"getSearchParameters\",\n        value: function getSearchParameters(searchParameters) {\n          if (typeof connectorDesc.getSearchParameters === 'function') {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.props.contextValue.store.getState().widgets);\n          }\n\n          return null;\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata(nextWidgetsState) {\n          if (typeof connectorDesc.getMetadata === 'function') {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n\n          return {};\n        }\n      }, {\n        key: \"transitionState\",\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (typeof connectorDesc.transitionState === 'function') {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n\n          return nextWidgetsState;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              contextValue = _this$props.contextValue,\n              props = _objectWithoutProperties(_this$props, [\"contextValue\"]);\n\n          var providedProps = this.state.providedProps;\n\n          if (providedProps === null) {\n            return null;\n          }\n\n          var refineProps = typeof connectorDesc.refine === 'function' ? {\n            refine: this.refine,\n            createURL: this.createURL\n          } : {};\n          var searchForFacetValuesProps = typeof connectorDesc.searchForFacetValues === 'function' ? {\n            searchForItems: this.searchForFacetValues\n          } : {};\n          return React.createElement(Composed, _extends({}, props, providedProps, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n\n      return Connector;\n    }(Component);\n\n    _defineProperty(Connector, \"displayName\", \"\".concat(connectorDesc.displayName, \"(\").concat(getDisplayName(Composed), \")\"));\n\n    _defineProperty(Connector, \"propTypes\", connectorDesc.propTypes);\n\n    _defineProperty(Connector, \"defaultProps\", connectorDesc.defaultProps);\n\n    return Connector;\n  };\n}\n\nvar createConnectorWithContext = function createConnectorWithContext(connectorDesc) {\n  return function (Composed) {\n    var Connector = createConnectorWithoutContext(connectorDesc)(Composed);\n\n    var ConnectorWrapper = function ConnectorWrapper(props) {\n      return React.createElement(InstantSearchConsumer, null, function (contextValue) {\n        return React.createElement(IndexConsumer, null, function (indexContextValue) {\n          return React.createElement(Connector, _extends({\n            contextValue: contextValue,\n            indexContextValue: indexContextValue\n          }, props));\n        });\n      });\n    };\n\n    return ConnectorWrapper;\n  };\n};\n\nexport default createConnectorWithContext;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport { omit } from './utils';\nexport function getIndexId(context) {\n  return hasMultipleIndices(context) ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;\n}\nexport function getResults(searchResults, context) {\n  if (searchResults.results) {\n    if (searchResults.results.hits) {\n      return searchResults.results;\n    }\n\n    var indexId = getIndexId(context);\n\n    if (searchResults.results[indexId]) {\n      return searchResults.results[indexId];\n    }\n  }\n\n  return null;\n}\nexport function hasMultipleIndices(context) {\n  return context && context.multiIndexContext;\n} // eslint-disable-next-line max-params\n\nexport function refineValue(searchState, nextRefinement, context, resetPage, namespace) {\n  if (hasMultipleIndices(context)) {\n    var indexId = getIndexId(context);\n    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, indexId, resetPage);\n  } else {\n    // When we have a multi index page with shared widgets we should also\n    // reset their page to 1 if the resetPage is provided. Otherwise the\n    // indices will always be reset\n    // see: https://github.com/algolia/react-instantsearch/issues/310\n    // see: https://github.com/algolia/react-instantsearch/issues/637\n    if (searchState.indices && resetPage) {\n      Object.keys(searchState.indices).forEach(function (targetedIndex) {\n        searchState = refineValue(searchState, {\n          page: 1\n        }, {\n          multiIndexContext: {\n            targetedIndex: targetedIndex\n          }\n        }, true, namespace);\n      });\n    }\n\n    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);\n  }\n}\n\nfunction refineMultiIndex(searchState, nextRefinement, indexId, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], nextRefinement, page))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, nextRefinement, page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndex(searchState, nextRefinement, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, nextRefinement, page);\n} // eslint-disable-next-line max-params\n\n\nfunction refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) {\n  var _objectSpread4;\n\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], (_objectSpread4 = {}, _defineProperty(_objectSpread4, namespace, _objectSpread({}, searchState.indices[indexId][namespace], nextRefinement)), _defineProperty(_objectSpread4, \"page\", 1), _objectSpread4)))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread(_defineProperty({}, namespace, nextRefinement), page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, _defineProperty({}, namespace, _objectSpread({}, searchState[namespace], nextRefinement)), page);\n}\n\nfunction getNamespaceAndAttributeName(id) {\n  var parts = id.match(/^([^.]*)\\.(.*)/);\n  var namespace = parts && parts[1];\n  var attributeName = parts && parts[2];\n  return {\n    namespace: namespace,\n    attributeName: attributeName\n  };\n}\n\nfunction hasRefinements(_ref) {\n  var multiIndex = _ref.multiIndex,\n      indexId = _ref.indexId,\n      namespace = _ref.namespace,\n      attributeName = _ref.attributeName,\n      id = _ref.id,\n      searchState = _ref.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId][namespace] && Object.hasOwnProperty.call(searchState.indices[indexId][namespace], attributeName);\n  }\n\n  if (multiIndex) {\n    return searchState.indices && searchState.indices[indexId] && Object.hasOwnProperty.call(searchState.indices[indexId], id);\n  }\n\n  if (namespace) {\n    return searchState[namespace] && Object.hasOwnProperty.call(searchState[namespace], attributeName);\n  }\n\n  return Object.hasOwnProperty.call(searchState, id);\n}\n\nfunction getRefinements(_ref2) {\n  var multiIndex = _ref2.multiIndex,\n      indexId = _ref2.indexId,\n      namespace = _ref2.namespace,\n      attributeName = _ref2.attributeName,\n      id = _ref2.id,\n      searchState = _ref2.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices[indexId][namespace][attributeName];\n  }\n\n  if (multiIndex) {\n    return searchState.indices[indexId][id];\n  }\n\n  if (namespace) {\n    return searchState[namespace][attributeName];\n  }\n\n  return searchState[id];\n}\n\nexport function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri.namespace,\n      attributeName = _getNamespaceAndAttri.attributeName;\n\n  var multiIndex = hasMultipleIndices(context);\n  var args = {\n    multiIndex: multiIndex,\n    indexId: indexId,\n    namespace: namespace,\n    attributeName: attributeName,\n    id: id,\n    searchState: searchState\n  };\n  var hasRefinementsValue = hasRefinements(args);\n\n  if (hasRefinementsValue) {\n    return getRefinements(args);\n  }\n\n  if (props.defaultRefinement) {\n    return props.defaultRefinement;\n  }\n\n  return defaultValue;\n}\nexport function cleanUpValue(searchState, context, id) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri2.namespace,\n      attributeName = _getNamespaceAndAttri2.attributeName;\n\n  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {\n    return cleanUpValueWithMultiIndex({\n      attribute: attributeName,\n      searchState: searchState,\n      indexId: indexId,\n      id: id,\n      namespace: namespace\n    });\n  }\n\n  return cleanUpValueWithSingleIndex({\n    attribute: attributeName,\n    searchState: searchState,\n    id: id,\n    namespace: namespace\n  });\n}\n\nfunction cleanUpValueWithSingleIndex(_ref3) {\n  var searchState = _ref3.searchState,\n      id = _ref3.id,\n      namespace = _ref3.namespace,\n      attribute = _ref3.attribute;\n\n  if (namespace) {\n    return _objectSpread({}, searchState, _defineProperty({}, namespace, omit(searchState[namespace], [attribute])));\n  }\n\n  return omit(searchState, [id]);\n}\n\nfunction cleanUpValueWithMultiIndex(_ref4) {\n  var searchState = _ref4.searchState,\n      indexId = _ref4.indexId,\n      id = _ref4.id,\n      namespace = _ref4.namespace,\n      attribute = _ref4.attribute;\n  var indexSearchState = searchState.indices[indexId];\n\n  if (namespace && indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, indexSearchState, _defineProperty({}, namespace, omit(indexSearchState[namespace], [attribute])))))\n    });\n  }\n\n  if (indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, omit(indexSearchState, [id])))\n    });\n  }\n\n  return searchState;\n}","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\n/**\n * The `connectStateResults` connector provides a way to access the `searchState` and the `searchResults`\n * of InstantSearch.\n * For instance this connector allows you to create results/noResults or query/noQuery pages.\n * @name connectStateResults\n * @kind connector\n * @providedPropType {object} searchState - The search state of the instant search component. <br/><br/> See: [Search state structure](https://community.algolia.com/react-instantsearch/guide/Search_state.html)\n * @providedPropType {object} searchResults - The search results. <br/><br/> In case of multiple indices: if used under `<Index>`, results will be those of the corresponding index otherwise it'll be those of the root index  See: [Search results structure](https://community.algolia.com/algoliasearch-helper-js/reference.html#searchresults)\n * @providedPropType {object} allSearchResults - In case of multiple indices you can retrieve all the results\n * @providedPropType {string} error - If the search failed, the error will be logged here.\n * @providedPropType {boolean} searching - If there is a search in progress.\n * @providedPropType {boolean} isSearchStalled - Flag that indicates if React InstantSearch has detected that searches are stalled.\n * @providedPropType {boolean} searchingForFacetValues - If there is a search in a list in progress.\n * @providedPropType {object} props - component props.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const Content = connectStateResults(({ searchState, searchResults }) => {\n *   const hasResults = searchResults && searchResults.nbHits !== 0;\n *\n *    return (\n *      <div>\n *        <div hidden={!hasResults}>\n *          <Hits />\n *        </div>\n *        <div hidden={hasResults}>\n *          <div>No results has been found for {searchState.query}</div>\n *        </div>\n *      </div>\n *    );\n * });\n *\n * const App = () => (\n *   <InstantSearch\n *      searchClient={searchClient}\n *      indexName=\"instant_search\"\n *    >\n *      <SearchBox />\n *      <Content />\n *    </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaStateResults',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      searchState: searchState,\n      searchResults: results,\n      allSearchResults: searchResults.results,\n      searching: searchResults.searching,\n      isSearchStalled: searchResults.isSearchStalled,\n      error: searchResults.error,\n      searchingForFacetValues: searchResults.searchingForFacetValues,\n      props: props\n    };\n  }\n});","import { defer } from './utils';\nexport default function createWidgetsManager(onWidgetsUpdate) {\n  var widgets = []; // Is an update scheduled?\n\n  var scheduled = false; // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    defer(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","import { getPropertyByPath } from './utils';\nexport var HIGHLIGHT_TAGS = {\n  highlightPreTag: \"<ais-highlight-0000000000>\",\n  highlightPostTag: \"</ais-highlight-0000000000>\"\n};\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\nfunction parseHighlightedAttribute(_ref) {\n  var preTag = _ref.preTag,\n      postTag = _ref.postTag,\n      _ref$highlightedValue = _ref.highlightedValue,\n      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;\n  var splitByPreTag = highlightedValue.split(preTag);\n  var firstValue = splitByPreTag.shift();\n  var elements = firstValue === '' ? [] : [{\n    value: firstValue,\n    isHighlighted: false\n  }];\n\n  if (postTag === preTag) {\n    var isHighlighted = true;\n    splitByPreTag.forEach(function (split) {\n      elements.push({\n        value: split,\n        isHighlighted: isHighlighted\n      });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(function (split) {\n      var splitByPostTag = split.split(postTag);\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true\n      });\n\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          value: splitByPostTag[1],\n          isHighlighted: false\n        });\n      }\n    });\n  }\n\n  return elements;\n}\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\n\nexport function parseAlgoliaHit(_ref2) {\n  var _ref2$preTag = _ref2.preTag,\n      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,\n      _ref2$postTag = _ref2.postTag,\n      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,\n      highlightProperty = _ref2.highlightProperty,\n      attribute = _ref2.attribute,\n      hit = _ref2.hit;\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n  var highlightObject = getPropertyByPath(hit[highlightProperty], attribute) || {};\n\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(function (item) {\n      return parseHighlightedAttribute({\n        preTag: preTag,\n        postTag: postTag,\n        highlightedValue: item.value\n      });\n    });\n  }\n\n  return parseHighlightedAttribute({\n    preTag: preTag,\n    postTag: postTag,\n    highlightedValue: highlightObject.value\n  });\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createWidgetsManager from './createWidgetsManager';\nimport createStore from './createStore';\nimport { HIGHLIGHT_TAGS } from './highlight';\nimport { hasMultipleIndices } from './indexUtils';\nimport { version as ReactVersion } from 'react';\nimport version from './version';\n\nfunction addAlgoliaAgents(searchClient) {\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    searchClient.addAlgoliaAgent(\"react (\".concat(ReactVersion, \")\"));\n    searchClient.addAlgoliaAgent(\"react-instantsearch (\".concat(version, \")\"));\n  }\n}\n\nvar isMultiIndexContext = function isMultiIndexContext(widget) {\n  return hasMultipleIndices({\n    ais: widget.props.contextValue,\n    multiIndexContext: widget.props.indexContextValue\n  });\n};\n\nvar isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {\n  return widget.props.indexContextValue.targetedIndex === indexId;\n}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.\n// Since it's a class we could rely on `instanceof` or similar. We never\n// had an issue though. Works for now.\n\n\nvar isIndexWidget = function isIndexWidget(widget) {\n  return Boolean(widget.props.indexId);\n};\n\nvar isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {\n  return widget.props.indexId === indexId;\n};\n\nvar sortIndexWidgetsFirst = function sortIndexWidgetsFirst(firstWidget, secondWidget) {\n  var isFirstWidgetIndex = isIndexWidget(firstWidget);\n  var isSecondWidgetIndex = isIndexWidget(secondWidget);\n\n  if (isFirstWidgetIndex && !isSecondWidgetIndex) {\n    return -1;\n  }\n\n  if (!isFirstWidgetIndex && isSecondWidgetIndex) {\n    return 1;\n  }\n\n  return 0;\n}; // This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\n\n\nfunction serializeQueryParameters(parameters) {\n  var isObjectOrArray = function isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Object.prototype.toString.call(value) === '[object Array]';\n  };\n\n  var encode = function encode(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return encodeURIComponent(args[i++]);\n    });\n  };\n\n  return Object.keys(parameters).map(function (key) {\n    return encode('%s=%s', key, isObjectOrArray(parameters[key]) ? JSON.stringify(parameters[key]) : parameters[key]);\n  }).join('&');\n}\n/**\n * Creates a new instance of the InstantSearchManager which controls the widgets and\n * trigger the search when the widgets are updated.\n * @param {string} indexName - the main index name\n * @param {object} initialState - initial widget state\n * @param {object} SearchParameters - optional additional parameters to send to the algolia API\n * @param {number} stalledSearchDelay - time (in ms) after the search is stalled\n * @return {InstantSearchManager} a new instance of InstantSearchManager\n */\n\n\nexport default function createInstantSearchManager(_ref) {\n  var indexName = _ref.indexName,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      searchClient = _ref.searchClient,\n      resultsState = _ref.resultsState,\n      stalledSearchDelay = _ref.stalledSearchDelay;\n  var helper = algoliasearchHelper(searchClient, indexName, _objectSpread({}, HIGHLIGHT_TAGS));\n  addAlgoliaAgents(searchClient);\n  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({\n    indexId: indexName\n  })).on('error', handleSearchError);\n  var skip = false;\n  var stalledSearchTimer = null;\n  var initialSearchParameters = helper.state;\n  var widgetsManager = createWidgetsManager(onWidgetsUpdate);\n  hydrateSearchClient(searchClient, resultsState);\n  var store = createStore({\n    widgets: initialState,\n    metadata: [],\n    results: hydrateResultsState(resultsState),\n    error: null,\n    searching: false,\n    isSearchStalled: true,\n    searchingForFacetValues: false\n  });\n\n  function skipSearch() {\n    skip = true;\n  }\n\n  function updateClient(client) {\n    addAlgoliaAgents(client);\n    helper.setClient(client);\n    search();\n  }\n\n  function clearCache() {\n    helper.clearCache();\n    search();\n  }\n\n  function getMetadata(state) {\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getMetadata);\n    }).map(function (widget) {\n      return widget.getMetadata(state);\n    });\n  }\n\n  function getSearchParameters() {\n    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      return !isMultiIndexContext(widget) && !isIndexWidget(widget);\n    }).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, initialSearchParameters);\n    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, sharedParameters);\n    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (indices, widget) {\n      var indexId = isMultiIndexContext(widget) ? widget.props.indexContextValue.targetedIndex : widget.props.indexId;\n      var widgets = indices[indexId] || [];\n      return _objectSpread({}, indices, _defineProperty({}, indexId, widgets.concat(widget)));\n    }, {});\n    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {\n      return {\n        parameters: derivedIndices[indexId].reduce(function (res, widget) {\n          return widget.getSearchParameters(res);\n        }, sharedParameters),\n        indexId: indexId\n      };\n    });\n    return {\n      mainParameters: mainParameters,\n      derivedParameters: derivedParameters\n    };\n  }\n\n  function search() {\n    if (!skip) {\n      var _getSearchParameters = getSearchParameters(helper.state),\n          mainParameters = _getSearchParameters.mainParameters,\n          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived\n      // helpers mutates the value `derivedHelpers`. The `forEach` loop does\n      // not iterate on each value and we're not able to correctly clear the\n      // previous derived helpers (memory leak + useless requests).\n\n\n      helper.derivedHelpers.slice().forEach(function (derivedHelper) {\n        // Since we detach the derived helpers on **every** new search they\n        // won't receive intermediate results in case of a stalled search.\n        // Only the last result is dispatched by the derived helper because\n        // they are not detached yet:\n        //\n        // - a -> main helper receives results\n        // - ap -> main helper receives results\n        // - app -> main helper + derived helpers receive results\n        //\n        // The quick fix is to avoid to detach them on search but only once they\n        // received the results. But it means that in case of a stalled search\n        // all the derived helpers not detached yet register a new search inside\n        // the helper. The number grows fast in case of a bad network and it's\n        // not deterministic.\n        derivedHelper.detach();\n      });\n      derivedParameters.forEach(function (_ref2) {\n        var indexId = _ref2.indexId,\n            parameters = _ref2.parameters;\n        var derivedHelper = helper.derive(function () {\n          return parameters;\n        });\n        derivedHelper.on('result', handleSearchSuccess({\n          indexId: indexId\n        })).on('error', handleSearchError);\n      });\n      helper.setState(mainParameters);\n      helper.search();\n    }\n  }\n\n  function handleSearchSuccess(_ref3) {\n    var indexId = _ref3.indexId;\n    return function (event) {\n      var state = store.getState();\n      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;\n      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the\n      // results to an empty object, otherwise we keep reference of stalled and\n      // unused results.\n\n      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;\n\n      if (!isDerivedHelpersEmpty) {\n        results = _objectSpread({}, results, _defineProperty({}, indexId, event.results));\n      } else {\n        results = event.results;\n      }\n\n      var currentState = store.getState();\n      var nextIsSearchStalled = currentState.isSearchStalled;\n\n      if (!helper.hasPendingRequests()) {\n        clearTimeout(stalledSearchTimer);\n        stalledSearchTimer = null;\n        nextIsSearchStalled = false;\n      }\n\n      var resultsFacetValues = currentState.resultsFacetValues,\n          partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n      store.setState(_objectSpread({}, partialState, {\n        results: results,\n        isSearchStalled: nextIsSearchStalled,\n        searching: false,\n        error: null\n      }));\n    };\n  }\n\n  function handleSearchError(_ref4) {\n    var error = _ref4.error;\n    var currentState = store.getState();\n    var nextIsSearchStalled = currentState.isSearchStalled;\n\n    if (!helper.hasPendingRequests()) {\n      clearTimeout(stalledSearchTimer);\n      nextIsSearchStalled = false;\n    }\n\n    var resultsFacetValues = currentState.resultsFacetValues,\n        partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n    store.setState(_objectSpread({}, partialState, {\n      isSearchStalled: nextIsSearchStalled,\n      error: error,\n      searching: false\n    }));\n  }\n\n  function handleNewSearch() {\n    if (!stalledSearchTimer) {\n      stalledSearchTimer = setTimeout(function () {\n        var _store$getState = store.getState(),\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            partialState = _objectWithoutProperties(_store$getState, [\"resultsFacetValues\"]);\n\n        store.setState(_objectSpread({}, partialState, {\n          isSearchStalled: true\n        }));\n      }, stalledSearchDelay);\n    }\n  }\n\n  function hydrateSearchClient(client, results) {\n    if (!results) {\n      return;\n    } // Disable cache hydration on:\n    // - Algoliasearch API Client < v4 with cache disabled\n    // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n\n    if ((!client.transporter || client._cacheHydrated) && (!client._useCache || typeof client.addAlgoliaAgent !== 'function')) {\n      return;\n    } // Algoliasearch API Client >= v4\n    // To hydrate the client we need to populate the cache with the data from\n    // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n    // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n    // for us to compute the key the same way as `algoliasearch-client` we need\n    // to populate it on a custom key and override the `search` method to\n    // search on it first.\n\n\n    if (client.transporter && !client._cacheHydrated) {\n      client._cacheHydrated = true;\n      var baseMethod = client.search;\n\n      client.search = function (requests) {\n        for (var _len2 = arguments.length, methodArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          methodArgs[_key2 - 1] = arguments[_key2];\n        }\n\n        var requestsWithSerializedParams = requests.map(function (request) {\n          return _objectSpread({}, request, {\n            params: serializeQueryParameters(request.params)\n          });\n        });\n        return client.transporter.responsesCache.get({\n          method: 'search',\n          args: [requestsWithSerializedParams].concat(methodArgs)\n        }, function () {\n          return baseMethod.apply(void 0, [requests].concat(methodArgs));\n        });\n      };\n    }\n\n    if (Array.isArray(results)) {\n      hydrateSearchClientWithMultiIndexRequest(client, results);\n      return;\n    }\n\n    hydrateSearchClientWithSingleIndexRequest(client, results);\n  }\n\n  function hydrateSearchClientWithMultiIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults.map(function (request) {\n            return {\n              indexName: request.index,\n              params: request.params\n            };\n          }));\n        }, [])]\n      }, {\n        results: results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults);\n        }, [])\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        }));\n      }, [])\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults);\n      }, [])\n    })));\n  }\n\n  function hydrateSearchClientWithSingleIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        })]\n      }, {\n        results: results.rawResults\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.rawResults.map(function (request) {\n        return {\n          indexName: request.index,\n          params: request.params\n        };\n      })\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.rawResults\n    })));\n  }\n\n  function hydrateResultsState(results) {\n    if (!results) {\n      return null;\n    }\n\n    if (Array.isArray(results)) {\n      return results.reduce(function (acc, result) {\n        return _objectSpread({}, acc, _defineProperty({}, result._internalIndexId, new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(result.state), result.rawResults)));\n      }, {});\n    }\n\n    return new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(results.state), results.rawResults);\n  } // Called whenever a widget has been rendered with new props.\n\n\n  function onWidgetsUpdate() {\n    var metadata = getMetadata(store.getState().widgets);\n    store.setState(_objectSpread({}, store.getState(), {\n      metadata: metadata,\n      searching: true\n    })); // Since the `getSearchParameters` method of widgets also depends on props,\n    // the result search parameters might have changed.\n\n    search();\n  }\n\n  function transitionState(nextSearchState) {\n    var searchState = store.getState().widgets;\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.transitionState);\n    }).reduce(function (res, widget) {\n      return widget.transitionState(searchState, res);\n    }, nextSearchState);\n  }\n\n  function onExternalStateUpdate(nextSearchState) {\n    var metadata = getMetadata(nextSearchState);\n    store.setState(_objectSpread({}, store.getState(), {\n      widgets: nextSearchState,\n      metadata: metadata,\n      searching: true\n    }));\n    search();\n  }\n\n  function onSearchForFacetValues(_ref5) {\n    var facetName = _ref5.facetName,\n        query = _ref5.query,\n        _ref5$maxFacetHits = _ref5.maxFacetHits,\n        maxFacetHits = _ref5$maxFacetHits === void 0 ? 10 : _ref5$maxFacetHits; // The values 1, 100 are the min / max values that the engine accepts.\n    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits\n\n    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));\n    store.setState(_objectSpread({}, store.getState(), {\n      searchingForFacetValues: true\n    }));\n    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {\n      var _objectSpread7;\n\n      store.setState(_objectSpread({}, store.getState(), {\n        error: null,\n        searchingForFacetValues: false,\n        resultsFacetValues: _objectSpread({}, store.getState().resultsFacetValues, (_objectSpread7 = {}, _defineProperty(_objectSpread7, facetName, content.facetHits), _defineProperty(_objectSpread7, \"query\", query), _objectSpread7))\n      }));\n    }, function (error) {\n      store.setState(_objectSpread({}, store.getState(), {\n        searchingForFacetValues: false,\n        error: error\n      }));\n    }).catch(function (error) {\n      // Since setState is synchronous, any error that occurs in the render of a\n      // component will be swallowed by this promise.\n      // This is a trick to make the error show up correctly in the console.\n      // See http://stackoverflow.com/a/30741722/969302\n      setTimeout(function () {\n        throw error;\n      });\n    });\n  }\n\n  function updateIndex(newIndex) {\n    initialSearchParameters = initialSearchParameters.setIndex(newIndex); // No need to trigger a new search here as the widgets will also update and trigger it if needed.\n  }\n\n  function getWidgetsIds() {\n    return store.getState().metadata.reduce(function (res, meta) {\n      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;\n    }, []);\n  }\n\n  return {\n    store: store,\n    widgetsManager: widgetsManager,\n    getWidgetsIds: getWidgetsIds,\n    getSearchParameters: getSearchParameters,\n    onSearchForFacetValues: onSearchForFacetValues,\n    onExternalStateUpdate: onExternalStateUpdate,\n    transitionState: transitionState,\n    updateClient: updateClient,\n    updateIndex: updateIndex,\n    clearCache: clearCache,\n    skipSearch: skipSearch\n  };\n}","export default '6.7.0';","export default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n  return {\n    getState: function getState() {\n      return state;\n    },\n    setState: function setState(nextState) {\n      state = nextState;\n      listeners.forEach(function (listener) {\n        return listener();\n      });\n    },\n    subscribe: function subscribe(listener) {\n      listeners.push(listener);\n      return function unsubscribe() {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    }\n  };\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch = /*#__PURE__*/function (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { InstantSearchConsumer, IndexProvider } from '../core/context';\n\nfunction getIndexContext(props) {\n  return {\n    targetedIndex: props.indexId\n  };\n}\n/**\n * The component that allows you to apply widgets to a dedicated index. It's\n * useful if you want to build an interface that targets multiple indices.\n *\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Index, SearchBox, Hits, Configure } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Configure hitsPerPage={5} />\n *     <SearchBox />\n *     <Index indexName=\"instant_search\">\n *       <Hits />\n *     </Index>\n *     <Index indexName=\"bestbuy\">\n *       <Hits />\n *     </Index>\n *   </InstantSearch>\n * );\n */\n\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  _createClass(Index, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      return {\n        indexContext: getIndexContext(props)\n      };\n    }\n  }]);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      indexContext: getIndexContext(_this.props)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n    _this.props.contextValue.onSearchParameters(_this.getSearchParameters.bind(_assertThisInitialized(_this)), {\n      ais: _this.props.contextValue,\n      multiIndexContext: _this.state.indexContext\n    }, _this.props);\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.indexName !== prevProps.indexName) {\n        this.props.contextValue.widgetsManager.update();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (typeof this.unregisterWidget === 'function') {\n        this.unregisterWidget();\n      }\n    }\n  }, {\n    key: \"getSearchParameters\",\n    value: function getSearchParameters(searchParameters, props) {\n      return searchParameters.setIndex(this.props ? this.props.indexName : props.indexName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var childrenCount = Children.count(this.props.children);\n\n      if (childrenCount === 0) {\n        return null;\n      }\n\n      return React.createElement(IndexProvider, {\n        value: this.state.indexContext\n      }, this.props.children);\n    }\n  }]);\n\n  return Index;\n}(Component);\n\n_defineProperty(Index, \"propTypes\", {\n  indexName: PropTypes.string.isRequired,\n  indexId: PropTypes.string.isRequired,\n  children: PropTypes.node\n});\n\nvar IndexWrapper = function IndexWrapper(props) {\n  var inferredIndexId = props.indexName;\n  return React.createElement(InstantSearchConsumer, null, function (contextValue) {\n    return React.createElement(Index, _extends({\n      contextValue: contextValue,\n      indexId: inferredIndexId\n    }, props));\n  });\n};\n\nexport var IndexComponentWithoutContext = Index;\nexport default IndexWrapper;","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\nimport { addAbsolutePositions, addQueryID } from '../core/utils';\n/**\n * connectHits connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n *\n * **Warning:** you will need to use the **objectID** property available on every hit as a key\n * when iterating over them. This will ensure you have the best possible UI experience\n * especially on slow networks.\n * @name connectHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const CustomHits = connectHits(({ hits }) => (\n *   <div>\n *     {hits.map(hit =>\n *       <p key={hit.objectID}>\n *         <Highlight attribute=\"name\" hit={hit} />\n *       </p>\n *     )}\n *   </div>\n * ));\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CustomHits />\n *   </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaHits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        hits: []\n      };\n    }\n\n    var hitsWithPositions = addAbsolutePositions(results.hits, results.hitsPerPage, results.page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    return {\n      hits: hitsWithPositionsAndQueryID\n    };\n  },\n\n  /**\n   * Hits needs to be considered as a widget to trigger a search,\n   * even if no other widgets are used.\n   *\n   * To be considered as a widget you need either:\n   * - getSearchParameters\n   * - getMetadata\n   * - transitionState\n   *\n   * See: createConnector.tsx\n   */\n  getSearchParameters: function getSearchParameters(searchParameters) {\n    return searchParameters;\n  }\n});","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport cx from 'classnames';\nexport var createClassNames = function createClassNames(block) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';\n  return function () {\n    for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n      elements[_key] = arguments[_key];\n    }\n\n    var suitElements = elements.filter(function (element) {\n      return element || element === '';\n    }).map(function (element) {\n      var baseClassName = \"\".concat(prefix, \"-\").concat(block);\n      return element ? \"\".concat(baseClassName, \"-\").concat(element) : baseClassName;\n    });\n    return cx(suitElements);\n  };\n};\nexport var isSpecialClick = function isSpecialClick(event) {\n  var isMiddleClick = event.button === 1;\n  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);\n};\nexport var capitalize = function capitalize(key) {\n  return key.length === 0 ? '' : \"\".concat(key[0].toUpperCase()).concat(key.slice(1));\n}; // taken from InstantSearch.js/utils\n\nexport function range(_ref) {\n  var _ref$start = _ref.start,\n      start = _ref$start === void 0 ? 0 : _ref$start,\n      end = _ref.end,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step; // We can't divide by 0 so we re-assign the step to 1 if it happens.\n\n  var limitStep = step === 0 ? 1 : step; // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n\n  var arrayLength = Math.round((end - start) / limitStep);\n  return _toConsumableArray(Array(arrayLength)).map(function (_, current) {\n    return (start + current) * limitStep;\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('Hits');\n\nvar DefaultHitComponent = function DefaultHitComponent(props) {\n  return React.createElement(\"div\", {\n    style: {\n      borderBottom: '1px solid #bbb',\n      paddingBottom: '5px',\n      marginBottom: '5px',\n      wordBreak: 'break-all'\n    }\n  }, JSON.stringify(props).slice(0, 100), \"...\");\n};\n\nvar Hits = function Hits(_ref) {\n  var hits = _ref.hits,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$hitComponent = _ref.hitComponent,\n      HitComponent = _ref$hitComponent === void 0 ? DefaultHitComponent : _ref$hitComponent;\n  return React.createElement(\"div\", {\n    className: classNames(cx(''), className)\n  }, React.createElement(\"ul\", {\n    className: cx('list')\n  }, hits.map(function (hit) {\n    return React.createElement(\"li\", {\n      className: cx('item'),\n      key: hit.objectID\n    }, React.createElement(HitComponent, {\n      hit: hit\n    }));\n  })));\n};\n\nvar HitPropTypes = PropTypes.shape({\n  objectID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n});\nexport default Hits;","import { connectHits } from 'react-instantsearch-core';\nimport Hits from '../components/Hits';\n/**\n * Displays a list of hits.\n *\n * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).\n *\n * @name Hits\n * @kind widget\n * @propType {Component} [hitComponent] - Component used for rendering each hit from\n *   the results. If it is not provided the rendering defaults to displaying the\n *   hit in its JSON form. The component will be called with a `hit` prop.\n * @themeKey ais-Hits - the root div of the widget\n * @themeKey ais-Hits-list - the list of results\n * @themeKey ais-Hits-item - the hit list item\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHits(Hits);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { omit } from '../core/utils';\nimport createConnector from '../core/createConnector';\nimport { refineValue, getIndexId, hasMultipleIndices } from '../core/indexUtils';\n\nfunction getId() {\n  return 'configure';\n}\n\nexport default createConnector({\n  displayName: 'AlgoliaConfigure',\n  getProvidedProps: function getProvidedProps() {\n    return {};\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props) {\n    var children = props.children,\n        contextValue = props.contextValue,\n        indexContextValue = props.indexContextValue,\n        items = _objectWithoutProperties(props, [\"children\", \"contextValue\", \"indexContextValue\"]);\n\n    return searchParameters.setQueryParameters(items);\n  },\n  transitionState: function transitionState(props, prevSearchState, nextSearchState) {\n    var id = getId();\n\n    var children = props.children,\n        contextValue = props.contextValue,\n        indexContextValue = props.indexContextValue,\n        items = _objectWithoutProperties(props, [\"children\", \"contextValue\", \"indexContextValue\"]);\n\n    var propKeys = Object.keys(props);\n    var nonPresentKeys = this._props ? Object.keys(this._props).filter(function (prop) {\n      return propKeys.indexOf(prop) === -1;\n    }) : [];\n    this._props = props;\n\n    var nextValue = _defineProperty({}, id, _objectSpread({}, omit(nextSearchState[id], nonPresentKeys), items));\n\n    return refineValue(nextSearchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    var id = getId();\n    var indexId = getIndexId({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var subState = hasMultipleIndices({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) && searchState.indices ? searchState.indices[indexId] : searchState;\n    var configureKeys = subState && subState[id] ? Object.keys(subState[id]) : [];\n    var configureState = configureKeys.reduce(function (acc, item) {\n      if (!props[item]) {\n        acc[item] = subState[id][item];\n      }\n\n      return acc;\n    }, {});\n\n    var nextValue = _defineProperty({}, id, configureState);\n\n    return refineValue(searchState, nextValue, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  }\n});","import connectConfigure from '../connectors/connectConfigure';\n/**\n * Configure is a widget that lets you provide raw search parameters\n * to the Algolia API.\n *\n * Any of the props added to this widget will be forwarded to Algolia. For more information\n * on the different parameters that can be set, have a look at the\n * [reference](https://www.algolia.com/doc/api-client/javascript/search#search-parameters).\n *\n * This widget can be used either with react-dom and react-native. It will not render anything\n * on screen, only configure some parameters.\n *\n * Read more in the [Search parameters](guide/Search_parameters.html) guide.\n * @name Configure\n * @kind widget\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Configure, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Configure hitsPerPage={5} />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\nexport default connectConfigure(function Configure() {\n  return null;\n});","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getIndexId } from '../core/indexUtils';\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId(props);\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return '';\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextRefinement);\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, getId());\n}\n/**\n * connectSearchBox connector provides the logic to build a widget that will\n * let the user search for a query\n * @name connectSearchBox\n * @kind connector\n * @propType {string} [defaultRefinement] - Provide a default value for the query\n * @providedPropType {function} refine - a function to change the current query\n * @providedPropType {string} currentRefinement - the current query used\n * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaSearchBox',\n  propTypes: {\n    defaultRefinement: PropTypes.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: currentRefinement === null ? [] : [{\n        label: \"\".concat(id, \": \").concat(currentRefinement),\n        value: function value(nextState) {\n          return _refine(props, nextState, '', {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","import React from 'react';\r\nimport { connectSearchBox } from 'react-instantsearch-dom';\r\nimport { SidebarSearchInput } from '../';\r\nexport default connectSearchBox(({ refine, ...rest }) => (\r\n  <SidebarSearchInput search={(value) => refine(value)} {...rest} showClean={true} />\r\n));\r\n","import createConnector from '../core/createConnector';\nimport { HIGHLIGHT_TAGS, parseAlgoliaHit } from '../core/highlight';\n\nvar highlight = function highlight(_ref) {\n  var attribute = _ref.attribute,\n      hit = _ref.hit,\n      highlightProperty = _ref.highlightProperty,\n      _ref$preTag = _ref.preTag,\n      preTag = _ref$preTag === void 0 ? HIGHLIGHT_TAGS.highlightPreTag : _ref$preTag,\n      _ref$postTag = _ref.postTag,\n      postTag = _ref$postTag === void 0 ? HIGHLIGHT_TAGS.highlightPostTag : _ref$postTag;\n  return parseAlgoliaHit({\n    attribute: attribute,\n    highlightProperty: highlightProperty,\n    hit: hit,\n    preTag: preTag,\n    postTag: postTag\n  });\n};\n/**\n * connectHighlight connector provides the logic to create an highlighter\n * component that will retrieve, parse and render an highlighted attribute\n * from an Algolia hit.\n * @name connectHighlight\n * @kind connector\n * @category connector\n * @providedPropType {function} highlight - function to retrieve and parse an attribute from a hit. It takes a configuration object with 3 attributes: `highlightProperty` which is the property that contains the highlight structure from the records, `attribute` which is the name of the attribute (it can be either a string or an array of strings) to look for and `hit` which is the hit from Algolia. It returns an array of objects `{value: string, isHighlighted: boolean}`. If the element that corresponds to the attribute is an array of strings, it will return a nested array of objects.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectHighlight } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const CustomHighlight = connectHighlight(\n *   ({ highlight, attribute, hit, highlightProperty }) => {\n *     const highlights = highlight({\n *       highlightProperty: '_highlightResult',\n *       attribute,\n *       hit\n *     });\n *\n *     return highlights.map(part => part.isHighlighted ? (\n *       <mark>{part.value}</mark>\n *     ) : (\n *       <span>{part.value}</span>\n *     ));\n *   }\n * );\n *\n * const Hit = ({ hit }) => (\n *   <p>\n *     <CustomHighlight attribute=\"name\" hit={hit} />\n *   </p>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaHighlighter',\n  propTypes: {},\n  getProvidedProps: function getProvidedProps() {\n    return {\n      highlight: highlight\n    };\n  }\n});","import React from 'react';\nimport classNames from 'classnames';\nexport var Highlight = function Highlight(_ref) {\n  var cx = _ref.cx,\n      value = _ref.value,\n      highlightedTagName = _ref.highlightedTagName,\n      isHighlighted = _ref.isHighlighted,\n      nonHighlightedTagName = _ref.nonHighlightedTagName;\n  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n  var className = isHighlighted ? 'highlighted' : 'nonHighlighted';\n  return React.createElement(TagName, {\n    className: cx(className)\n  }, value);\n};\n\nvar Highlighter = function Highlighter(_ref2) {\n  var cx = _ref2.cx,\n      hit = _ref2.hit,\n      attribute = _ref2.attribute,\n      highlight = _ref2.highlight,\n      highlightProperty = _ref2.highlightProperty,\n      tagName = _ref2.tagName,\n      nonHighlightedTagName = _ref2.nonHighlightedTagName,\n      separator = _ref2.separator,\n      className = _ref2.className;\n  var parsedHighlightedValue = highlight({\n    hit: hit,\n    attribute: attribute,\n    highlightProperty: highlightProperty\n  });\n  return React.createElement(\"span\", {\n    className: classNames(cx(''), className)\n  }, parsedHighlightedValue.map(function (item, i) {\n    if (Array.isArray(item)) {\n      var isLast = i === parsedHighlightedValue.length - 1;\n      return React.createElement(\"span\", {\n        key: i\n      }, item.map(function (element, index) {\n        return React.createElement(Highlight, {\n          cx: cx,\n          key: index,\n          value: element.value,\n          highlightedTagName: tagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: element.isHighlighted\n        });\n      }), !isLast && React.createElement(\"span\", {\n        className: cx('separator')\n      }, separator));\n    }\n\n    return React.createElement(Highlight, {\n      cx: cx,\n      key: i,\n      value: item.value,\n      highlightedTagName: tagName,\n      nonHighlightedTagName: nonHighlightedTagName,\n      isHighlighted: item.isHighlighted\n    });\n  }));\n};\n\nHighlighter.defaultProps = {\n  tagName: 'em',\n  nonHighlightedTagName: 'span',\n  className: '',\n  separator: ', '\n};\nexport default Highlighter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Highlight');\n\nvar Highlight = function Highlight(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_highlightResult\",\n    cx: cx\n  }));\n};\n\nexport default Highlight;","import { connectHighlight } from 'react-instantsearch-core';\nimport Highlight from '../components/Highlight';\n/**\n * Renders any attribute from a hit into its highlighted form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Highlight\n * @kind widget\n * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Highlight - root of the component\n * @themeKey ais-Highlight-highlighted - part of the text which is highlighted\n * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Highlight attribute=\"name\" hit={hit} />\n *   </div>\n * );\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"Pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Highlight);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Snippet');\n\nvar Snippet = function Snippet(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_snippetResult\",\n    cx: cx\n  }));\n};\n\nexport default Snippet;","import { connectHighlight } from 'react-instantsearch-core';\nimport Snippet from '../components/Snippet';\n/**\n * Renders any attribute from an hit into its highlighted snippet form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Snippet\n * @kind widget\n * @requirements To use this widget, the attribute name passed to the `attribute` prop must be\n * present in \"Attributes to snippet\" on the Algolia dashboard or configured as `attributesToSnippet`\n * via a set settings call to the Algolia API.\n * @propType {string} attribute - location of the highlighted snippet attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted snippet attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the attribute\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Snippet - the root span of the widget\n * @themeKey ais-Snippet-highlighted - the highlighted text\n * @themeKey ais-Snippet-nonHighlighted - the normal text\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Snippet } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Snippet attribute=\"description\" hit={hit} />\n *   </div>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"adjustable\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Snippet);","import React from 'react';\r\nimport { Highlight, Snippet } from 'react-instantsearch-dom';\r\nimport { Hit } from '../Hits';\r\nimport emoji from '../../../utils/emoji';\r\n\r\nexport const PageHit = ({ hit }) => {\r\n  hit._highlightResult.title.value = emoji.emojify(hit._highlightResult.title.value);\r\n  hit._snippetResult.excerpt.value = emoji.emojify(hit._snippetResult.excerpt.value);\r\n  return (\r\n    <Hit\r\n      slug={hit.slug}\r\n      title={<Highlight attribute=\"title\" hit={hit} tagName=\"mark\" />}\r\n      details={<Snippet attribute=\"excerpt\" hit={hit} tagName=\"mark\" />}\r\n    />\r\n  );\r\n};\r\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getResults } from '../core/indexUtils';\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, page);\n\n  if (typeof currentRefinement === 'string') {\n    return parseInt(currentRefinement, 10);\n  }\n\n  return currentRefinement;\n}\n\nfunction _refine(props, searchState, nextPage, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextPage);\n\n  var resetPage = false;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n/**\n * connectPagination connector provides the logic to build a widget that will\n * let the user displays hits corresponding to a certain page.\n * @name connectPagination\n * @kind connector\n * @propType {boolean} [showFirst=true] - Display the first page link.\n * @propType {boolean} [showLast=false] - Display the last page link.\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\n * @propType {boolean} [showNext=true] - Display the next page link.\n * @propType {number} [padding=3] - How many page links to display around the current page.\n * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {number} nbPages - the total of existing pages\n * @providedPropType {number} currentRefinement - the page refinement currently applied\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaPagination',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return null;\n    }\n\n    var nbPages = results.nbPages;\n    return {\n      nbPages: nbPages,\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      canRefine: nbPages > 1\n    };\n  },\n  refine: function refine(props, searchState, nextPage) {\n    return _refine(props, searchState, nextPage, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return cleanUpValue(searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, getId());\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setPage(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) - 1);\n  },\n  getMetadata: function getMetadata() {\n    return {\n      id: getId()\n    };\n  }\n});","import React from 'react';\r\nimport { connectPagination } from 'react-instantsearch-dom';\r\nimport { Pagination } from '../';\r\nexport default connectPagination(({ currentRefinement, ...rest }) => (\r\n  <Pagination currentPage={currentRefinement} {...rest} />\r\n));\r\n","import React from 'react';\r\nimport { connectStats } from 'react-instantsearch-dom';\r\nimport { SearchStats } from '../';\r\nexport default connectStats(({ nbHits, ...rest }) => <SearchStats hits={nbHits} {...rest} />);\r\n","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\n/**\n * connectStats connector provides the logic to build a widget that will\n *  displays algolia search statistics (hits number and processing time).\n * @name connectStats\n * @kind connector\n * @providedPropType {number} nbHits - number of hits returned by Algolia.\n * @providedPropType {number} processingTimeMS - the time in ms took by Algolia to search for results.\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaStats',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return null;\n    }\n\n    return {\n      nbHits: results.nbHits,\n      processingTimeMS: results.processingTimeMS\n    };\n  }\n});","import React, { createRef } from 'react';\r\nimport {\r\n  InstantSearch,\r\n  Index,\r\n  Hits,\r\n  Configure,\r\n  connectStateResults,\r\n} from 'react-instantsearch-dom';\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport { HitsWrapper } from '../Hits';\r\nimport config from 'config';\r\nimport Input from './input';\r\nimport { PageHit } from './hitComps';\r\nimport styled from '@emotion/styled';\r\nimport SearchStatus from '../Status';\r\nimport Pagination from './pagination';\r\nimport Stats from './stats';\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  @media only screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// const Results = connectStateResults(\r\n//   ({ searching, searchState: state, searchResults: res }) =>\r\n//     (searching && `Searching...`) || (res && res.nbHits === 0 && `No results for '${state.query}'`)\r\n// );\r\n\r\nconst Results = connectStateResults(({ searching, searchState: state, searchResults: res }) => (\r\n  <SearchStatus noHits={res && res.nbHits === 0} searching={searching} query={state.query} />\r\n));\r\n\r\nclass Algolia extends React.Component {\r\n  state = {\r\n    query: '',\r\n    focus: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.searchClient = algoliasearch(\r\n      config.features.search.algoliaAppId,\r\n      config.features.search.algoliaSearchKey\r\n    );\r\n    this.ref = createRef();\r\n    this.inputRef = props.inputRef;\r\n    this.index = props.index;\r\n  }\r\n\r\n  render() {\r\n    const ref = this.ref;\r\n    const focus = this.focus;\r\n    const showResults = this.state.query.length > 1 && this.state.focus;\r\n    return (\r\n      <InstantSearch\r\n        searchClient={this.searchClient}\r\n        indexName={this.index}\r\n        onSearchStateChange={({ query }) => this.setState({ query: query })}\r\n        root={{ Root, props: { ref } }}\r\n      >\r\n        <Input\r\n          inputRef={this.inputRef}\r\n          onFocus={() => this.setState({ focus: true })}\r\n          {...{ focus }}\r\n        />\r\n\r\n        <div style={{ flex: '1' }}>\r\n          {showResults && config.features.search.showStats ? (\r\n            <div>\r\n              <Stats />\r\n            </div>\r\n          ) : null}\r\n          <Results />\r\n          <HitsWrapper>\r\n            <Index key={this.index} indexName={this.index}>\r\n              {showResults ? (\r\n                <>\r\n                  <Hits hitComponent={PageHit} />\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </Index>\r\n          </HitsWrapper>\r\n        </div>\r\n        {showResults && config.features.search.pagination.enabled ? (\r\n          <Pagination\r\n            totalPages={config.features.search.pagination.totalPages}\r\n            showPrevious={config.features.search.pagination.showPrevious}\r\n            showNext={config.features.search.pagination.showNext}\r\n          />\r\n        ) : null}\r\n        <Configure\r\n          hitsPerPage={config.features.search.hitsPerPage}\r\n          attributesToSnippet={[`excerpt:${config.features.search.snippetLength}`]}\r\n          snippetEllipsisText={'...'}\r\n        />\r\n      </InstantSearch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Algolia;\r\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\n\nvar SearchResults = require('./src/SearchResults');\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\n\n\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\n\n\nalgoliasearchHelper.version = require('./src/version.js');\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\n\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\n\nalgoliasearchHelper.SearchParameters = SearchParameters;\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\n\nalgoliasearchHelper.SearchResults = SearchResults;\nmodule.exports = algoliasearchHelper;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar intersection = require('../functions/intersection');\n\nvar find = require('../functions/find');\n\nvar valToNumber = require('../functions/valToNumber');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar RefinementList = require('./RefinementList');\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\n\n\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (el, i) {\n      return isEqualNumericRefinement(b[i], el);\n    });\n  }\n\n  return a === b;\n}\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\n\n\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\n\n\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n\n  this.hierarchicalFacets = params.hierarchicalFacets || []; // Refinements\n\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\n\n\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\n\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n  var numbers = {};\n  var numberKeys = ['aroundPrecision', 'aroundRadius', 'getRankingInfo', 'minWordSizefor2Typos', 'minWordSizefor1Typo', 'page', 'maxValuesPerFacet', 'distinct', 'minimumAroundRadius', 'hitsPerPage', 'minProximity'];\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value); // global isNaN is ok to use here, value is only number or NaN\n\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  }); // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (geoRect) {\n      return geoRect.map(function (value) {\n        return parseFloat(value);\n      });\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\n\n\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      } // get it again in case it has been cleared\n\n\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n  return instance;\n};\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\n\n\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error('[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' + 'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error('[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' + 'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.numericFilters && params.numericRefinements && objectHasKeys(params.numericRefinements)) {\n    return new Error(\"[Numeric filters] Can't switch from the advanced to the managed API. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\"[Numeric filters] Can't switch from the managed API to the advanced. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(this.facetsRefinements, attribute, 'conjunctiveFacet'),\n      facetsExcludes: RefinementList.clearRefinement(this.facetsExcludes, attribute, 'exclude'),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')\n    };\n\n    if (patch.numericRefinements === this.numericRefinements && patch.facetsRefinements === this.facetsRefinements && patch.facetsExcludes === this.facetsExcludes && patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements && patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {\n      return this;\n    }\n\n    return this.setQueryParameters(patch);\n  },\n\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function addNumericRefinement(attribute, operator, v) {\n    var value = valToNumber(v);\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n    var mod = merge({}, this.numericRefinements);\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice(); // Add the element. Concat can't be used here because value can be an array.\n\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function getConjunctiveRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function getDisjunctiveRefinements(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function getHierarchicalRefinement(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function getExcludeRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function removeNumericRefinement(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator && isEqualNumericRefinement(value.val, valToNumber(paramValue));\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      })\n    });\n  },\n\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList[]} list of refinements\n   */\n  getNumericRefinements: function getNumericRefinements(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function getNumericRefinement(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      if (!objectHasKeys(this.numericRefinements[attribute])) {\n        return this.numericRefinements;\n      }\n\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function (memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n        operators = operators || {};\n        Object.keys(operators).forEach(function (operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function (value) {\n            var predicateResult = attribute({\n              val: value,\n              op: operator\n            }, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n\n          operatorList[operator] = outValues;\n        });\n        memo[key] = operatorList;\n        return memo;\n      }, {});\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error('Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      })\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet + '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined && this.hierarchicalFacetsRefinements[facet].length > 0 && ( // remove current refinement:\n    // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0] === value || // remove a parent refinement of the current refinement:\n    //  - refinement was 'beer > IPA > Flying dog'\n    //  - call is toggleRefine('beer > IPA')\n    //  - refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0);\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function addHierarchicalFacetRefinement(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function removeHierarchicalFacetRefinement(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function isDisjunctiveFacet(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function isHierarchicalFacet(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function isConjunctiveFacet(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined = this.numericRefinements[attribute] && this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined = findArray(this.numericRefinements[attribute][operator], parsedValue) !== undefined;\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this; // attributes used for numeric filter can also be disjunctive\n\n    var disjunctiveNumericRefinedFacets = intersection(Object.keys(this.numericRefinements).filter(function (facet) {\n      return Object.keys(self.numericRefinements[facet]).length > 0;\n    }), this.disjunctiveFacets);\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function (facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    }).concat(disjunctiveNumericRefinedFacets).concat(this.getRefinedHierarchicalFacets());\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection( // enforce the order between the two arrays,\n    // so that refinement name index === hierarchical facet index\n    this.hierarchicalFacets.map(function (facet) {\n      return facet.name;\n    }), Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n      return self.hierarchicalFacetsRefinements[facet].length > 0;\n    }));\n  },\n\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function getUnrefinedDisjunctiveFacets() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n  managedParameters: ['index', 'facets', 'disjunctiveFacets', 'facetsRefinements', 'facetsExcludes', 'disjunctiveFacetsRefinements', 'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n    var queryParams = {};\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n    return queryParams;\n  },\n\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n    var modification = {};\n    modification[parameter] = value;\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (previous, key) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n\n      if (isNextValueDefined) {\n        previous[key] = nextWithNumbers[key];\n      }\n\n      return previous;\n    }, previousPlainObject);\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function resetPage() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function _getHierarchicalFacetSortBy(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function _getHierarchicalFacetSeparator(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function _getHierarchicalRootPath(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function _getHierarchicalShowParentLevel(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function getHierarchicalFacetByName(hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function getHierarchicalFacetBreadcrumb(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facetName));\n\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n  toString: function toString() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\n\nmodule.exports = SearchParameters;","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return arr2.indexOf(value) > -1 && arr1.indexOf(value) === index\n    /* skips duplicates */\n    ;\n  });\n}\n\nmodule.exports = intersection;","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};","import React from 'react';\r\nimport { css } from '@emotion/core';\r\n\r\nconst spinner = css`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  position: relative;\r\n  margin: 0 auto;\r\n\r\n  .double-bounce1,\r\n  .double-bounce2 {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    background-color: #333;\r\n    opacity: 0.6;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    -webkit-animation: sk-bounce 2s infinite ease-in-out;\r\n    animation: sk-bounce 2s infinite ease-in-out;\r\n  }\r\n\r\n  .double-bounce2 {\r\n    -webkit-animation-delay: -1s;\r\n    animation-delay: -1s;\r\n  }\r\n\r\n  @-webkit-keyframes sk-bounce {\r\n    0%,\r\n    100% {\r\n      -webkit-transform: scale(0);\r\n    }\r\n    50% {\r\n      -webkit-transform: scale(1);\r\n    }\r\n  }\r\n\r\n  @keyframes sk-bounce {\r\n    0%,\r\n    100% {\r\n      transform: scale(0);\r\n      -webkit-transform: scale(0);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n      -webkit-transform: scale(1);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ ...props }) => (\r\n  <div css={spinner} {...props}>\r\n    <div className={'double-bounce1'}></div>\r\n    <div className={'double-bounce2'}></div>\r\n  </div>\r\n);","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { marginLeftRight } from './styles';\r\nimport Loading from '../Loader';\r\n\r\nconst queryToken = css`\r\n  font-weight: bold;\r\n  font-style: italic;\r\n  display: block;\r\n`;\r\n\r\nconst StatusWrapper = styled.div`\r\n  margin: 30px auto;\r\n  text-align: center;\r\n  line-height: 30px;\r\n  span {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst SearchStatus = ({ searching, noHits, query }) => {\r\n  let text = '';\r\n  if (searching) {\r\n    text = 'Searching...';\r\n  } else if (noHits) {\r\n    text = `No results found for `;\r\n  }\r\n  return text !== '' ? (\r\n    <div css={marginLeftRight}>\r\n      <StatusWrapper>\r\n        <span>{text}</span>\r\n        {noHits ? <span css={queryToken}>{query}</span> : ''}\r\n        {searching ? <Loading css={{ margin: '20px auto' }} /> : ''}\r\n      </StatusWrapper>\r\n    </div>\r\n  ) : (\r\n    ''\r\n  );\r\n};\r\n\r\nexport default SearchStatus;\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      ReflectApply(listeners[i], this, args);\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = _getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) {\n    list[index] = list[index + 1];\n  }\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","'use strict'; // NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] !== undefined) {\n        acc[key] = source[key];\n      }\n    });\n    return acc;\n  }, {});\n};","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\n\nvar find = require('../functions/find');\n\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] && state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';\n\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);\n\n    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, hierarchicalFacetRefinement);\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null,\n      // root level, no count\n      isRefined: true,\n      // root level, always refined\n      path: null,\n      // root level, no path\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, currentRefinement) {\n  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    } // we found a refined parent, let's add current level data under it\n\n\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n      var picked = Object.keys(hierarchicalFacetResult.data).map(function (facetValue) {\n        return [facetValue, hierarchicalFacetResult.data[facetValue]];\n      }).filter(function (tuple) {\n        var facetValue = tuple[0];\n        return onlyMatchingTree(facetValue, parent.path || hierarchicalRootPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);\n      });\n      parent.data = orderBy(picked.map(function (tuple) {\n        var facetValue = tuple[0];\n        var facetCount = tuple[1];\n        return format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, hierarchicalFacetResult.exhaustive);\n      }), sortBy[0], sortBy[1]);\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(facetValue, parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (hierarchicalRootPath && (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {\n    return false;\n  } // we always want root levels (only when there is no prefix path)\n\n\n  return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 || // if there is a rootPath, being root level mean 1 level under rootPath\n  hierarchicalRootPath && facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 || // if current refinement is a root level and current facetValue is a root level,\n  // keep the facetValue\n  facetValue.indexOf(hierarchicalSeparator) === -1 && currentRefinement.indexOf(hierarchicalSeparator) === -1 || // currentRefinement is a child of the facet value\n  currentRefinement.indexOf(facetValue) === 0 || // facetValue is a child of the current parent, add it\n  facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 && (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);\n}\n\nfunction format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, exhaustive) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    count: facetCount,\n    isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;","'use strict'; // @MAJOR can be replaced by native Array#findIndex when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};","'use strict'; // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar orderBy = require('../functions/orderBy');\n\nvar compact = require('../functions/compact');\n\nvar find = require('../functions/find');\n\nvar findIndex = require('../functions/findIndex');\n\nvar formatSort = require('../functions/formatSort');\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\n\n\nfunction getIndices(attributes) {\n  var indices = {};\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\n\n\nfunction findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(hierarchicalFacet) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n/*eslint-disable */\n\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n\n/*eslint-enable */\n\n\nfunction SearchResults(state, results) {\n  var mainSubResponse = results[0];\n  this._rawResults = results;\n  /**\n   * query used to generate the results\n   * @member {string}\n   */\n\n  this.query = mainSubResponse.query;\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @member {string}\n   */\n\n  this.parsedQuery = mainSubResponse.parsedQuery;\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @member {object[]}\n   */\n\n  this.hits = mainSubResponse.hits;\n  /**\n   * index where the results come from\n   * @member {string}\n   */\n\n  this.index = mainSubResponse.index;\n  /**\n   * number of hits per page requested\n   * @member {number}\n   */\n\n  this.hitsPerPage = mainSubResponse.hitsPerPage;\n  /**\n   * total number of hits of this query on the index\n   * @member {number}\n   */\n\n  this.nbHits = mainSubResponse.nbHits;\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @member {number}\n   */\n\n  this.nbPages = mainSubResponse.nbPages;\n  /**\n   * current page\n   * @member {number}\n   */\n\n  this.page = mainSubResponse.page;\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined ? sum : sum + result.processingTimeMS;\n  }, 0);\n  /**\n   * The position if the position was guessed by IP.\n   * @member {string}\n   * @example \"48.8637,2.3615\",\n   */\n\n  this.aroundLatLng = mainSubResponse.aroundLatLng;\n  /**\n   * The radius computed by Algolia.\n   * @member {string}\n   * @example \"126792922\",\n   */\n\n  this.automaticRadius = mainSubResponse.automaticRadius;\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @member {string}\n   * @example \"c7-use-2.algolia.net\",\n   */\n\n  this.serverUsed = mainSubResponse.serverUsed;\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @member {boolean}\n   */\n\n  this.timeoutCounts = mainSubResponse.timeoutCounts;\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @member {boolean}\n   */\n\n  this.timeoutHits = mainSubResponse.timeoutHits;\n  /**\n   * True if the counts of the facets is exhaustive\n   * @member {boolean}\n   */\n\n  this.exhaustiveFacetsCount = mainSubResponse.exhaustiveFacetsCount;\n  /**\n   * True if the number of hits is exhaustive\n   * @member {boolean}\n   */\n\n  this.exhaustiveNbHits = mainSubResponse.exhaustiveNbHits;\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @member {object[]}\n   */\n\n  this.userData = mainSubResponse.userData;\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @member {string}\n   */\n\n  this.queryID = mainSubResponse.queryID;\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.facets = [];\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n  var self = this; // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(state.hierarchicalFacets, facetKey);\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  }); // Make sure we do not keep holes within the hierarchical facets\n\n  this.hierarchicalFacets = compact(this.hierarchicalFacets); // aggregate the refined disjunctive facets\n\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet); // There should be only item in facets.\n\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n          return f.attribute === dfacet;\n        }); // previous refinements and no results so not able to find it\n\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge({}, self.hierarchicalFacets[position][attributeIndex].data, facetResults);\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] && state.disjunctiveFacetsRefinements[dfacet].indexOf(refinementValue) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  }); // if we have some root level values for hierarchical facets, merge them\n\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n        return f.attribute === dfacet;\n      }); // previous refinements and no results so not able to find it\n\n      if (attributeIndex === -1) {\n        return;\n      } // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n\n\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(defaultData, facetResults, self.hierarchicalFacets[position][attributeIndex].data);\n    });\n    nextDisjunctiveResult++;\n  }); // add the excludes\n\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || {\n        name: facetName\n      };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n  /**\n   * @type {Array}\n   */\n\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n  /**\n   * @type {Array}\n   */\n\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n  this._state = state;\n}\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\n\n\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) || find(this.disjunctiveFacets, predicate) || find(this.hierarchicalFacets, predicate);\n};\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\n\n\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n    return Object.keys(facet.data).map(function (name) {\n      return {\n        name: name,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, name),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      return {\n        name: name,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n/**\n * Sort nodes of a hierarchical facet results\n * @private\n * @param {HierarchicalFacet} node node to upon which we want to apply the sort\n */\n\n\nfunction recSort(sortFn, node) {\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode);\n  });\n  var sortedChildren = sortFn(children);\n  var newNode = merge({}, node, {\n    data: sortedChildren\n  });\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\n\n\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT\n  });\n\n  if (Array.isArray(options.sortBy)) {\n    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n\n    if (Array.isArray(facetValues)) {\n      return orderBy(facetValues, order[0], order[1]);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (hierarchicalFacetValues) {\n      return orderBy(hierarchicalFacetValues, order[0], order[1]);\n    }, facetValues);\n  } else if (typeof options.sortBy === 'function') {\n    if (Array.isArray(facetValues)) {\n      return facetValues.sort(options.sortBy);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (data) {\n      return vanillaSortFn(options.sortBy, data);\n    }, facetValues);\n  }\n\n  throw new Error('options.sortBy is optional but if defined it must be ' + 'either an array of string (predicates) or a sorting function');\n};\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\n\n\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\n\n\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\n\n\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  var results = this;\n  var res = [];\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n  state.tagRefinements.forEach(function (name) {\n    res.push({\n      type: 'tag',\n      attributeName: '_tags',\n      name: name\n    });\n  });\n  return res;\n};\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet = intermediateFacet && find(intermediateFacet.data, function (f) {\n      return f.name === part;\n    });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n  var count = facet && facet.count || 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  var path = facet && facet.path || '';\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { paddingLeftRight } from './styles';\r\n\r\nconst topBottomPadding = css`\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nexport const HitsWrapper = styled.div`\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: auto;\r\n  z-index: 2;\r\n  -webkit-overflow-scrolling: touch;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  // @media only screen and (max-width: 991px) {\r\n  //   width: 400px;\r\n  //   max-width: 400px;\r\n  // }\r\n  // @media only screen and (max-width: 767px) {\r\n  //   width: 100%;\r\n  //   max-width: 500px;\r\n  // }\r\n  > * + * {\r\n    border-top: 2px solid ${(props) => props.theme.search.border};\r\n  }\r\n  li {\r\n    ${topBottomPadding};\r\n    ${paddingLeftRight};\r\n    &:hover {\r\n      background-color: ${(props) => props.theme.search.hover};\r\n      color: ${(props) => props.theme.search.font.hover};\r\n    }\r\n  }\r\n  li + li {\r\n    border-top: 1px solid ${(props) => props.theme.search.border};\r\n  }\r\n  * {\r\n    margin-top: 0;\r\n    color: ${(props) => props.theme.search.font.base};\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  mark {\r\n    color: ${(props) => props.theme.search.mark.font};\r\n    background: ${(props) => props.theme.search.mark.background};\r\n  }\r\n`;\r\n\r\nconst HitTitle = styled.div`\r\n  font-weight: bold;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst HitDetails = styled.div`\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Hit = ({ slug, title, details }) => (\r\n  <Link to={slug}>\r\n    <HitTitle>{title}</HitTitle>\r\n    <HitDetails>{details}</HitDetails>\r\n  </Link>\r\n);\r\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (!othIsNull && value > other || valIsNull && othIsDefined || !valIsDefined) {\n      return 1;\n    }\n\n    if (!valIsNull && value < other || othIsNull && valIsDefined || !othIsDefined) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\n\n\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n\n        return res;\n      }\n    } // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  });\n  return result.map(function (res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;"],"sourceRoot":""}