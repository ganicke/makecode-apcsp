{"componentChunkName":"component---src-templates-docs-js","path":"/editing/images","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/ganicke/makecode-apcsp","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"51bd449e-2056-56f0-8567-68df8f2b6f8f","title":"Adding images","slug":"/editing/images"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding images\",\n  \"order\": 3\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Layout = makeShortcode(\"Layout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You can add and embed images into content, as this is standard Markdown feature.\\nFirst, add images under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content\"), \" directory -- it can be a single \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"images\"), \" directory\\nor images can be added to any directory within \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content\"), \" dir.\"), mdx(\"p\", null, \"Then, once you have added images, reference them using Markdown image\\nsyntax: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"![some image caption](myImage.png)\"), \". You can use any image format,\\nhowever images in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"png\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jpeg\"), \" formats will be additionally processed to improve\\noveral site performance and user experience.\"), mdx(\"p\", null, \"You can leave caption empty, e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"![](../images/myimg.png)\"), \".\\nYou can also reference external images by providing full URL.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Assuming, that all images will be embed in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page.md\"), \":\"), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"project\\n\\u2502\\n\\u2514\\u2500\\u2500\\u2500content\\n    \\u2502\\u2500\\u2500 index.md\\n    \\u2502\\u2500\\u2500 img1.png\\n    \\u2502\\n    \\u2514\\u2500\\u2500\\u2500images\\n    \\u2502   \\u2502\\u2500\\u2500 img2.png\\n    \\u2502   \\u2514\\u2500\\u2500\\u2500another\\n    \\u2502       \\u2502\\u2500\\u2500 img3.png\\n    \\u2502\\n    \\u2514\\u2500\\u2500\\u2500group\\n        \\u2502\\u2500\\u2500 page.md\\n        \\u2502\\u2500\\u2500 img4.jpeg\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markdown\"\n  }), \"![first image](../img1.png)\\n\\n![second image](../images/img2.png)\\n\\n![third image](../images/another/img3.png)\\n\\n![fourth image](img4.png)\\n\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"parent":{"__typename":"File","relativePath":"editing/images.md","fields":{"gitLogLatestAuthorName":"ganicke","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"20 days ago"}},"frontmatter":{"metaTitle":null,"showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"gh-pages"},"gitCommit":{"hash":"b80f4600a9416dc481778ea805cdbbe1ff3c6621","date":"2021-04-06 06:54"}},"pageContext":{"id":"51bd449e-2056-56f0-8567-68df8f2b6f8f"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}